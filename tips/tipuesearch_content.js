var tipuesearch = {"pages":[{"title":"JS.27 ポケモンエメラルドでフロンティア マスターを目指す（その２）","text":"フロンティア マスターへの道 〜敵を知る〜 今回は、ダメージ計算ツールを作成します。なお、ポケモンエメラルドでは、バトルフロンティアのNPCが使用するポケモンの種類は以下の882種と決まっているため、 \"相手のポケモン\" をその中からのみ選択することにより、スムーズな解析を可能にします。 ※ なので、今回の記事も完全に自己満ツール群です🙇‍♂️ バトルフロンティアのポケモン ※「とくせい」と「せいべつ」はランダムに決定されているようです。 ※ 個体値は、施設によって規則が異なりますが、現在の連勝数に依存して変化するようです。 [参考] ※ 以下の表は、数字の列であれば不等式の形でもフィルタが行えます。また、列名をクリックするとソートができます。 条件 Lv 個体値(一律) No ポケモン もちもの 技1 技2 技3 技4 H A B C D S せいかく H A B C D S 001 フシギダネ ひかりのこな はっぱカッター あまいかおり ねむりごな ひかりのかべ 0 0 0 0 0 0 のんき 255 0 0 255 0 0 002 フシギソウ キーのみ はなびらのまい せいちょう あまいかおり れんぞくぎり 0 0 0 0 0 0 おとなしい 255 0 0 255 0 0 002 フシギソウ ひかりのこな ギガドレイン ヘドロばくだん ねむりごな やどりぎのタネ 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 003 フシギバナ カゴのみ ギガドレイン にほんばれ こうごうせい ねむりごな 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 003 フシギバナ ひかりのこな やどりぎのタネ ギガドレイン かげぶんしん ひかりのかべ 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 003 フシギバナ ピントレンズ すてみタックル ヘドロばくだん じしん ねむりごな 0 0 0 0 0 0 いじっぱり 0 170 170 0 170 0 003 フシギバナ ラムのみ ソーラービーム ヘドロばくだん にほんばれ じしん 0 0 0 0 0 0 すなお 0 170 0 170 170 0 004 ヒトカゲ きあいのハチマキ ほのおのうず メタルクロー えんまく こわいかお 0 0 0 0 0 0 すなお 255 0 0 255 0 0 005 リザード ピントレンズ きりさく ほのおのうず つるぎのまい つばめがえし 0 0 0 0 0 0 やんちゃ 255 255 0 0 0 0 005 リザード ピントレンズ かえんほうしゃ きりさく げんしのちから りゅうのいかり 0 0 0 0 0 0 がんばりや 0 255 0 0 0 255 006 リザードン きあいのハチマキ だいもんじ にほんばれ ほえる こわいかお 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 006 リザードン ひかりのこな じしん つばめがえし りゅうのまい えんまく 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 006 リザードン ラムのみ かえんほうしゃ ドラゴンクロー かみつく かわらわり 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 006 リザードン しろいハーブ オーバーヒート じしん つばめがえし いわなだれ 0 0 0 0 0 0 がんばりや 0 170 0 170 0 170 007 ゼニガメ オボンのみ みずのはどう かみつく からにこもる まもる 0 0 0 0 0 0 すなお 255 0 0 255 0 0 008 カメール きあいのハチマキ みずのはどう かみつく どろかけ あくび 0 0 0 0 0 0 すなお 255 0 0 255 0 0 008 カメール かいがらのすず なみのり れいとうビーム こうそくスピン まもる 0 0 0 0 0 0 すなお 255 0 0 255 0 0 009 カメックス かいがらのすず ハイドロポンプ あまごい かみつく ちきゅうなげ 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 009 カメックス かいがらのすず ハイドロポンプ メガトンキック かわらわり ミラーコート 0 0 0 0 0 0 ゆうかん 170 170 0 170 0 0 009 カメックス きあいのハチマキ なみのり じしん れいとうビーム カウンター 0 0 0 0 0 0 すなお 170 170 0 170 0 0 009 カメックス きあいのハチマキ なみのり じしん れいとうビーム ミラーコート 0 0 0 0 0 0 すなお 170 170 0 170 0 0 010 キャタピー きあいのハチマキ たいあたり いとをはく 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 011 トランセル のんきのおこう かたくなる 0 0 0 0 0 0 てれや 255 0 0 0 255 0 012 バタフリー モモンのみ ぎんいろのかぜ サイケこうせん どくどく ふきとばし 0 0 0 0 0 0 きまぐれ 255 0 0 255 0 0 013 ビードル きあいのハチマキ どくばり いとをはく 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 014 コクーン のんきのおこう かたくなる 0 0 0 0 0 0 てれや 255 0 0 0 255 0 015 スピアー ピントレンズ ダブルニードル おいうち がむしゃら こうそくいどう 0 0 0 0 0 0 やんちゃ 0 255 0 0 0 255 016 ポッポ するどいくちばし かぜおこし すなかけ ふきとばし でんこうせっか 0 0 0 0 0 0 さみしがり 255 255 0 0 0 0 017 ピジョン しろいハーブ つばめがえし でんこうせっか フェザーダンス すなかけ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 018 ピジョット するどいくちばし つばめがえし フェザーダンス どろかけ だましうち 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 018 ピジョット ピントレンズ おんがえし つばめがえし はがねのつばさ どろかけ 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 019 コラッタ おうじゃのしるし ひっさつまえば おいうち でんこうせっか いばる 0 0 0 0 0 0 すなお 255 255 0 0 0 0 020 ラッタ シルクのスカーフ がむしゃら おいうち こわいかお でんこうせっか 0 0 0 0 0 0 むじゃき 170 170 0 0 0 170 020 ラッタ きあいのハチマキ いかりのまえば ひっさつまえば シャドーボール こわいかお 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 021 オニスズメ チイラのみ みだれづき おいうち オウムがえし まもる 0 0 0 0 0 0 すなお 255 0 0 0 0 255 022 オニドリル するどいくちばし ドリルくちばし トライアタック からげんき どろかけ 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 022 オニドリル きあいのハチマキ ドリルくちばし トライアタック メロメロ おいうち 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 022 オニドリル ピントレンズ ドリルくちばし おんがえし はがねのつばさ だましうち 0 0 0 0 0 0 がんばりや 0 255 0 0 0 255 022 オニドリル ラムのみ ドリルくちばし すてみタックル はがねのつばさ ゴッドバード 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 023 アーボ どくバリ ようかいえき あなをほる いやなおと いちゃもん 0 0 0 0 0 0 すなお 255 255 0 0 0 0 024 アーボック キーのみ どくどくのキバ あなをほる かみつく へびにらみ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 024 アーボック ラムのみ ヘドロばくだん じしん アイアンテール へびにらみ 0 0 0 0 0 0 いじっぱり 255 0 255 0 0 0 025 ピカチュウ でんきだま かみなりパンチ でんじは かげぶんしん でんこうせっか 0 0 0 0 0 0 すなお 255 0 0 0 0 255 026 ライチュウ ひかりのこな 10まんボルト でんこうせっか ひかりのかべ かげぶんしん 0 0 0 0 0 0 ひかえめ 0 0 170 170 0 170 026 ライチュウ ラムのみ 10まんボルト きしかいせい こらえる こうそくいどう 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 026 ライチュウ クラボのみ かみなり あまごい アイアンテール メロメロ 0 0 0 0 0 0 すなお 0 0 0 255 0 255 026 ライチュウ ひかりのこな 10まんボルト でんじは まもる メガトンキック 0 0 0 0 0 0 すなお 0 255 0 255 0 0 027 サンド やわらかいすな あなをほる がんせきふうじ すなあらし すなかけ 0 0 0 0 0 0 すなお 255 255 0 0 0 0 028 サンドパン オボンのみ ブレイククロー いわなだれ スピードスター すなあらし 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 028 サンドパン せんせいのツメ じしん いわなだれ ブレイククロー すなあらし 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 029 ニドラン♀ オボンのみ かみくだく にどげり おだてる てだすけ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 030 ニドリーナ きあいのハチマキ にどげり かみつく つばめがえし おだてる 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 031 ニドクイン きあいのハチマキ ヘドロばくだん にどげり のしかかり カウンター 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 031 ニドクイン かいがらのすず すてみタックル じしん つばめがえし いわなだれ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 031 ニドクイン ラムのみ 10まんボルト かえんほうしゃ れいとうビーム かみくだく 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 031 ニドクイン しろいハーブ ばかぢから ヘドロばくだん じしん シャドーボール 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 032 ニドラン♂ オボンのみ にどげり どくばり かなしばり てだすけ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 033 ニドリーノ きあいのハチマキ にどげり みずのはどう どろかけ おだてる 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 034 ニドキング せんせいのツメ つのドリル にどげり のしかかり カウンター 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 034 ニドキング かいがらのすず メガトンキック じしん シャドーボール かわらわり 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 034 ニドキング ヒメリのみ つのドリル だいもんじ ふぶき なみのり 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 034 ニドキング ラムのみ メガホーン ヘドロばくだん じしん かみなり 0 0 0 0 0 0 すなお 0 255 0 255 0 0 035 ピッピ のんきのおこう このゆびとまれ おんがえし アンコール うたう 0 0 0 0 0 0 さみしがり 255 255 0 0 0 0 036 ピクシー たべのこし ゆびをふる かげぶんしん リフレクター このゆびとまれ 0 0 0 0 0 0 ゆうかん 0 0 255 0 255 0 036 ピクシー きあいのハチマキ コメットパンチ コスモパワー かげぶんしん このゆびとまれ 0 0 0 0 0 0 いじっぱり 0 255 255 0 0 0 036 ピクシー ラムのみ 10まんボルト れいとうビーム かえんほうしゃ マジカルリーフ 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 036 ピクシー きあいのハチマキ メガトンキック サイコキネシス シャドーボール タマゴうみ 0 0 0 0 0 0 すなお 0 255 255 0 0 0 037 ロコン チーゴのみ おにび あやしいひかり ほのおのうず でんこうせっか 0 0 0 0 0 0 すなお 255 0 0 0 0 255 038 キュウコン チーゴのみ かえんほうしゃ ほえる あやしいひかり おにび 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 038 キュウコン ラムのみ ねっぷう のしかかり おんねん にほんばれ 0 0 0 0 0 0 きまぐれ 0 0 0 255 0 255 038 キュウコン ひかりのこな だいもんじ アイアンテール あやしいひかり メロメロ 0 0 0 0 0 0 きまぐれ 0 0 0 255 0 255 038 キュウコン しろいハーブ オーバーヒート すてみタックル あやしいひかり おにび 0 0 0 0 0 0 きまぐれ 0 0 0 255 0 255 039 プリン のんきのおこう うたう ねがいごと ものまね おうふくビンタ 0 0 0 0 0 0 のんき 170 0 170 0 170 0 040 プクリン シルクのスカーフ うたう かなしばり ねがいごと ひみつのちから 0 0 0 0 0 0 のんき 0 0 255 0 255 0 040 プクリン オボンのみ うそなき うたう ゆめくい かわらわり 0 0 0 0 0 0 すなお 0 0 255 0 255 0 041 ズバット クラボのみ どくどくのキバ ふきとばし あやしいひかり つばめがえし 0 0 0 0 0 0 なまいき 255 255 0 0 0 0 042 ゴルバット ピントレンズ エアカッター あやしいひかり どくどく はがねのつばさ 0 0 0 0 0 0 のんき 255 255 0 0 0 0 042 ゴルバット ピントレンズ ヘドロばくだん シャドーボール あやしいひかり エアカッター 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 043 ナゾノクサ モモンのみ ようかいえき しびれごな あまいかおり つきのひかり 0 0 0 0 0 0 のんき 255 255 0 0 0 0 044 クサイハナ キーのみ はなびらのまい ようかいえき しびれごな つきのひかり 0 0 0 0 0 0 きまぐれ 255 0 0 255 0 0 044 クサイハナ モモンのみ ソーラービーム にほんばれ ヘドロばくだん つきのひかり 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 045 ラフレシア キーのみ ヘドロばくだん はなびらのまい つきのひかり アロマセラピー 0 0 0 0 0 0 わんぱく 255 255 0 0 0 0 045 ラフレシア ひかりのこな ねをはる かげぶんしん どくどく ギガドレイン 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 045 ラフレシア たべのこし メロメロ しびれごな ヘドロばくだん ギガドレイン 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 045 ラフレシア せんせいのツメ ソーラービーム ヘドロばくだん にほんばれ こうごうせい 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 046 パラス オボンのみ キノコのほうし きゅうけつ きりさく ひかりのかべ 0 0 0 0 0 0 のんき 255 0 0 255 0 0 047 パラセクト オボンのみ きりさく サイケこうせん しびれごな フラッシュ 0 0 0 0 0 0 うっかりや 0 0 255 0 255 0 047 パラセクト たべのこし キノコのほうし ギガドレイン あなをほる かげぶんしん 0 0 0 0 0 0 おだやか 170 0 170 0 170 0 048 コンパン オボンのみ サイケこうせん ちょうおんぱ しびれごな スキルスワップ 0 0 0 0 0 0 のんき 255 0 0 255 0 0 049 モルフォン キーのみ ぎんいろのかぜ サイケこうせん ねむりごな スキルスワップ 0 0 0 0 0 0 きまぐれ 255 0 0 0 0 255 049 モルフォン ラムのみ シグナルビーム サイコキネシス ヘドロばくだん ギガドレイン 0 0 0 0 0 0 すなお 255 0 0 0 0 255 050 ディグダ おうじゃのしるし マグニチュード きりさく がんせきふうじ すなかけ 0 0 0 0 0 0 むじゃき 0 255 0 0 0 255 051 ダグトリオ やわらかいすな じしん トライアタック きりさく すなじごく 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 051 ダグトリオ おうじゃのしるし じしん げんしのちから つばめがえし トライアタック 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 051 ダグトリオ おうじゃのしるし じしん すてみタックル ヘドロばくだん じわれ 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 051 ダグトリオ おうじゃのしるし じしん すてみタックル いわなだれ じわれ 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 052 ニャース キーのみ きりさく かみつく いやなおと ねこだまし 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 053 ペルシアン シルクのスカーフ ねこだまし きりさく いちゃもん いばる 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 053 ペルシアン シルクのスカーフ やつあたり シャドーボール ほえる ねこだまし 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 054 コダック キーのみ ねんりき みだれひっかき つばめがえし かなしばり 0 0 0 0 0 0 せっかち 0 255 0 255 0 0 055 ゴルダック かいがらのすず ハイドロポンプ あなをほる かわらわり ひかりのかべ 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 055 ゴルダック ラムのみ クロスチョップ なみのり いばる じこあんじ 0 0 0 0 0 0 きまぐれ 0 170 0 170 0 170 055 ゴルダック かいがらのすず ハイドロポンプ クロスチョップ ふぶき まもる 0 0 0 0 0 0 すなお 0 255 0 255 0 0 055 ゴルダック ピントレンズ なみのり クロスチョップ れいとうビーム つばめがえし 0 0 0 0 0 0 すなお 0 255 0 0 0 255 056 マンキー くろおび からてチョップ けたぐり いやなおと いばる 0 0 0 0 0 0 やんちゃ 255 255 0 0 0 0 057 オコリザル ピントレンズ からてチョップ カウンター いばる いやなおと 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 057 オコリザル ピントレンズ クロスチョップ がんせきふうじ オーバーヒート ビルドアップ 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 058 ガーディ チーゴのみ かえんぐるま かみつく ほえる こうそくいどう 0 0 0 0 0 0 すなお 255 0 0 255 0 0 059 ウインディ おうじゃのしるし かえんほうしゃ しんそく かみくだく のしかかり 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 059 ウインディ ラムのみ だいもんじ にほんばれ かみくだく ほえる 0 0 0 0 0 0 すなお 0 0 0 255 0 255 059 ウインディ しろいハーブ オーバーヒート しんそく かみくだく つばめがえし 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 059 ウインディ しろいハーブ オーバーヒート しんそく かみくだく すてみタックル 0 0 0 0 0 0 すなお 0 0 0 255 0 255 060 ニョロモ しんぴのしずく さいみんじゅつ こごえるかぜ みずでっぽう あまごい 0 0 0 0 0 0 のんき 255 0 0 0 0 255 061 ニョロゾ ヤタピのみ みずのはどう おうふくビンタ こごえるかぜ あまごい 0 0 0 0 0 0 きまぐれ 255 0 0 255 0 0 062 ニョロボン くろおび じごくぐるま あなをほる がんせきふうじ バブルこうせん 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 062 ニョロボン カゴのみ かわらわり さいみんじゅつ ねむる はらだいこ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 063 ケーシィ まがったスプーン ものまね ゆびをふる フラッシュ ちきゅうなげ 0 0 0 0 0 0 さみしがり 255 0 0 0 0 255 064 ユンゲラー まがったスプーン ねんりき なりきり みらいよち かなしばり 0 0 0 0 0 0 わんぱく 255 0 255 0 0 0 064 ユンゲラー まがったスプーン サイコキネシス でんじは リフレクター じこさいせい 0 0 0 0 0 0 ひかえめ 255 0 255 0 0 0 065 フーディン きあいのハチマキ かみなりパンチ ほのおのパンチ れいとうパンチ でんじは 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 065 フーディン ラムのみ サイコキネシス めいそう でんじは じこさいせい 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 065 フーディン こだわりハチマキ トリック かなしばり サイコキネシス スキルスワップ 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 065 フーディン ひかりのこな サイコキネシス かみなりパンチ ほのおのパンチ れいとうパンチ 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 066 ワンリキー ピントレンズ ちきゅうなげ リベンジ がんせきふうじ こわいかお 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 067 ゴーリキー きあいのハチマキ けたぐり がんせきふうじ みやぶる こわいかお 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 067 ゴーリキー ピントレンズ クロスチョップ いわなだれ みやぶる こわいかお 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 068 カイリキー ピントレンズ クロスチョップ いわなだれ カウンター こわいかお 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 068 カイリキー カゴのみ クロスチョップ じしん ビルドアップ ねむる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 068 カイリキー せんせいのツメ クロスチョップ だいもんじ かみなりパンチ れいとうパンチ 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 068 カイリキー ピントレンズ クロスチョップ じしん かえんほうしゃ いわなだれ 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 068 カイリキー ピントレンズ クロスチョップ すてみタックル じしん いわなだれ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 068 カイリキー きあいのハチマキ クロスチョップ じしん カウンター がんせきふうじ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 068 カイリキー ひかりのこな きあいパンチ みがわり メロメロ かげぶんしん 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 068 カイリキー きあいのハチマキ リベンジ いわなだれ からげんき カウンター 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 069 マダツボミ オボンのみ はっぱカッター ようかいえき しびれごな まきつく 0 0 0 0 0 0 のうてんき 170 0 170 0 170 0 070 ウツドン ピントレンズ はっぱカッター ようかいえき まきつく あまいかおり 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 070 ウツドン ピントレンズ ヘドロばくだん はっぱカッター ねむりごな リフレクター 0 0 0 0 0 0 きまぐれ 0 0 255 0 255 0 071 ウツボット オボンのみ ギガドレイン ねむりごな あまいかおり こうごうせい 0 0 0 0 0 0 れいせい 0 0 255 0 255 0 071 ウツボット たべのこし ギガドレイン ヘドロばくだん ねむりごな メロメロ 0 0 0 0 0 0 まじめ 0 255 0 255 0 0 071 ウツボット ひかりのこな しびれごな ねをはる ギガドレイン ヘドロばくだん 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 071 ウツボット ひかりのこな ギガドレイン すてみタックル ヘドロばくだん こうごうせい 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 072 メノクラゲ モモンのみ バブルこうせん ようかいえき バリアー まきつく 0 0 0 0 0 0 がんばりや 170 170 0 170 0 0 073 ドククラゲ キーのみ ヘドロばくだん こごえるかぜ バリアー あやしいひかり 0 0 0 0 0 0 わんぱく 0 255 255 0 0 0 073 ドククラゲ たべのこし どくどく ギガドレイン あやしいひかり なみのり 0 0 0 0 0 0 がんばりや 170 0 170 170 0 0 073 ドククラゲ かいがらのすず なみのり ギガドレイン れいとうビーム ミラーコート 0 0 0 0 0 0 ひかえめ 0 0 170 170 0 170 073 ドククラゲ かいがらのすず ハイドロポンプ ヘドロばくだん れいとうビーム ミラーコート 0 0 0 0 0 0 きまぐれ 0 170 170 170 0 0 074 イシツブテ きあいのハチマキ マグニチュード ロックブラスト かいりき まもる 0 0 0 0 0 0 ゆうかん 255 255 0 0 0 0 075 ゴローン きあいのハチマキ マグニチュード いわおとし まるくなる かわらわり 0 0 0 0 0 0 いじっぱり 170 170 0 0 170 0 075 ゴローン きあいのハチマキ じしん いわなだれ かわらわり カウンター 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 076 ゴローニャ せんせいのツメ じしん のしかかり カウンター がんせきふうじ 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 076 ゴローニャ カゴのみ きあいパンチ みがわり かげぶんしん ねむる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 076 ゴローニャ せんせいのツメ だいばくはつ じしん かえんほうしゃ かわらわり 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 076 ゴローニャ せんせいのツメ だいばくはつ じしん いわなだれ すてみタックル 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 077 ポニータ チーゴのみ ほのおのうず とびはねる でんこうせっか しっぽをふる 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 077 ポニータ オボンのみ かえんほうしゃ のしかかり にどげり かげぶんしん 0 0 0 0 0 0 きまぐれ 0 0 0 255 0 255 078 ギャロップ もくたん かえんほうしゃ にどげり でんこうせっか まもる 0 0 0 0 0 0 れいせい 0 0 0 255 0 255 078 ギャロップ たべのこし だいもんじ とびはねる かげぶんしん メロメロ 0 0 0 0 0 0 すなお 0 170 0 170 0 170 078 ギャロップ しろいハーブ オーバーヒート ソーラービーム にほんばれ さいみんじゅつ 0 0 0 0 0 0 ひかえめ 170 0 0 170 0 170 078 ギャロップ しろいハーブ オーバーヒート すてみタックル アイアンテール にどげり 0 0 0 0 0 0 すなお 0 170 0 170 0 170 079 ヤドン オボンのみ ねんりき かなしばり みずのはどう あくび 0 0 0 0 0 0 ゆうかん 255 0 0 255 0 0 080 ヤドラン かいがらのすず なみのり あまごい ずつき れいとうパンチ 0 0 0 0 0 0 れいせい 255 0 0 0 255 0 080 ヤドラン たべのこし なみのり れいとうビーム めいそう あくび 0 0 0 0 0 0 ひかえめ 0 255 0 0 255 0 080 ヤドラン せんせいのツメ なみのり サイコキネシス シャドーボール メロメロ 0 0 0 0 0 0 れいせい 0 0 0 255 255 0 080 ヤドラン せんせいのツメ サイコキネシス なみのり じしん れいとうビーム 0 0 0 0 0 0 なまいき 0 0 0 255 255 0 081 コイル チーゴのみ でんげきは ちょうおんぱ きんぞくおん リフレクター 0 0 0 0 0 0 おとなしい 0 0 0 255 0 255 082 レアコイル クラボのみ でんげきは ソニックブーム でんじは ちょうおんぱ 0 0 0 0 0 0 さみしがり 0 0 0 255 0 255 082 レアコイル ラムのみ かみなり あまごい でんじは きんぞくおん 0 0 0 0 0 0 がんばりや 255 0 0 0 255 0 083 カモネギ ながねぎ きりさく はたきおとす つるぎのまい こうそくいどう 0 0 0 0 0 0 のんき 170 0 170 0 170 0 084 ドードー チイラのみ みだれづき さわぐ どろかけ だましうち 0 0 0 0 0 0 さみしがり 255 0 0 0 0 255 085 ドードリオ カゴのみ ドリルくちばし トライアタック ねごと ねむる 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 085 ドードリオ おうじゃのしるし ドリルくちばし すてみタックル だましうち まもる 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 085 ドードリオ ラムのみ すてみタックル ドリルくちばし はがねのつばさ だましうち 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 085 ドードリオ カムラのみ じたばた こらえる ドリルくちばし からげんき 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 086 パウワウ ナナシのみ オーロラビーム ダイビング のしかかり ねこだまし 0 0 0 0 0 0 がんばりや 255 0 0 255 0 0 087 ジュゴン とけないこおり れいとうビーム こごえるかぜ ずつき ねこだまし 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 087 ジュゴン かいがらのすず ふぶき すてみタックル アンコール かなしばり 0 0 0 0 0 0 すなお 0 255 0 255 0 0 087 ジュゴン カゴのみ つのドリル ぜったいれいど ねごと ねむる 0 0 0 0 0 0 ずぶとい 255 0 255 0 0 0 087 ジュゴン ラムのみ ぜったいれいど れいとうビーム なみのり シグナルビーム 0 0 0 0 0 0 すなお 0 255 0 255 0 0 088 ベトベター モモンのみ ヘドロこうげき がんせきふうじ とける ちいさくなる 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 089 ベトベトン どくバリ ヘドロばくだん のしかかり いやなおと ちいさくなる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 089 ベトベトン カゴのみ のろい ねむる ヘドロばくだん ばくれつパンチ 0 0 0 0 0 0 がんばりや 0 255 255 0 0 0 089 ベトベトン ラムのみ ヘドロばくだん 10まんボルト かえんほうしゃ れいとうパンチ 0 0 0 0 0 0 れいせい 0 0 255 255 0 0 089 ベトベトン せんせいのツメ ヘドロばくだん かわらわり ギガドレイン だいばくはつ 0 0 0 0 0 0 ゆうかん 0 255 255 0 0 0 090 シェルダー クラボのみ つららばり ちょうおんぱ からではさむ からにこもる 0 0 0 0 0 0 のんき 255 0 0 255 0 0 091 パルシェン とけないこおり オーロラビーム とげキャノン ちょうおんぱ まもる 0 0 0 0 0 0 なまいき 255 0 0 0 255 0 091 パルシェン たべのこし ダイビング どくどく かげぶんしん まもる 0 0 0 0 0 0 しんちょう 255 0 0 0 255 0 092 ゴース のんきのおこう ゆめくい さいみんじゅつ ナイトヘッド あやしいひかり 0 0 0 0 0 0 さみしがり 255 0 0 0 0 255 093 ゴースト キーのみ シャドーパンチ あやしいひかり うらみ おんねん 0 0 0 0 0 0 うっかりや 255 255 0 0 0 0 093 ゴースト ラムのみ サイコキネシス さいみんじゅつ あくむ あやしいひかり 0 0 0 0 0 0 のんき 170 0 170 0 170 0 094 ゲンガー たべのこし ゆめくい さいみんじゅつ あやしいひかり メロメロ 0 0 0 0 0 0 おくびょう 170 0 0 170 0 170 094 ゲンガー たべのこし ヘドロばくだん シャドーボール あやしいひかり おにび 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 094 ゲンガー せんせいのツメ サイコキネシス 10まんボルト ギガドレイン スキルスワップ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 094 ゲンガー ラムのみ サイコキネシス ほのおのパンチ れいとうパンチ みちづれ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 094 ゲンガー ひかりのこな サイコキネシス シャドーボール 10まんボルト ほのおのパンチ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 094 ゲンガー ひかりのこな サイコキネシス シャドーボール 10まんボルト れいとうパンチ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 094 ゲンガー ラムのみ サイコキネシス 10まんボルト ほのおのパンチ みちづれ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 094 ゲンガー ラムのみ サイコキネシス 10まんボルト れいとうパンチ みちづれ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 095 イワーク オボンのみ いわなだれ しめつける りゅうのいぶき すなあらし 0 0 0 0 0 0 がんばりや 170 0 170 0 170 0 096 スリープ オボンのみ ねんりき ずつき かなしばり バリアー 0 0 0 0 0 0 きまぐれ 170 170 0 170 0 0 097 スリーパー まがったスプーン かみなりパンチ ほのおのパンチ れいとうパンチ さいみんじゅつ 0 0 0 0 0 0 れいせい 0 0 255 255 0 0 097 スリーパー まがったスプーン さいみんじゅつ あくむ ゆめくい サイコキネシス 0 0 0 0 0 0 ひかえめ 0 0 255 0 255 0 097 スリーパー ラムのみ じこあんじ いばる メガトンキック シャドーボール 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 097 スリーパー ラムのみ サイコキネシス かみなりパンチ ほのおのパンチ れいとうパンチ 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 098 クラブ きあいのハチマキ クラブハンマー マッドショット じたばた はたきおとす 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 099 キングラー ピントレンズ クラブハンマー メタルクロー マッドショット まもる 0 0 0 0 0 0 がんばりや 255 0 0 0 255 0 099 キングラー カムラのみ ハサミギロチン がんせきふうじ じたばた こらえる 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 100 ビリリダマ のんきのおこう スパーク いやなおと ころがる ひかりのかべ 0 0 0 0 0 0 すなお 255 0 0 255 0 0 101 マルマイン きあいのハチマキ 10まんボルト スピードスター ひかりのかべ まもる 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 101 マルマイン ひかりのこな かみなり あまごい かげぶんしん いばる 0 0 0 0 0 0 ひかえめ 170 0 170 0 170 0 101 マルマイン チイラのみ だいばくはつ 10まんボルト でんじは こらえる 0 0 0 0 0 0 やんちゃ 0 255 0 255 0 0 101 マルマイン ラムのみ だいばくはつ 10まんボルト でんじは ミラーコート 0 0 0 0 0 0 やんちゃ 0 255 0 255 0 0 102 タマタマ キーのみ ねんりき げんしのちから やどりぎのタネ ひかりのかべ 0 0 0 0 0 0 やんちゃ 255 0 0 255 0 0 103 ナッシー せんせいのツメ ソーラービーム にほんばれ こうごうせい ひかりのかべ 0 0 0 0 0 0 れいせい 0 0 255 0 255 0 103 ナッシー カゴのみ おんがえし のろい ねむりごな ねむる 0 0 0 0 0 0 がんばりや 0 255 0 0 255 0 103 ナッシー たべのこし やどりぎのタネ ギガドレイン どくどく だいばくはつ 0 0 0 0 0 0 がんばりや 170 0 170 0 170 0 103 ナッシー ひかりのこな サイコキネシス ギガドレイン ヘドロばくだん だいばくはつ 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 104 カラカラ やわらかいすな ホネこんぼう ずつき かわらわり つばめがえし 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 105 ガラガラ ふといホネ ホネブーメラン いわなだれ こごえるかぜ ずつき 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 105 ガラガラ ふといホネ じしん いわなだれ つるぎのまい こごえるかぜ 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 105 ガラガラ ふといホネ じしん いわなだれ つるぎのまい かわらわり 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 105 ガラガラ ふといホネ じしん いわなだれ つるぎのまい メガトンキック 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 106 サワムラー くろおび まわしげり かわらわり きあいだめ からげんき 0 0 0 0 0 0 いじっぱり 255 0 255 0 0 0 106 サワムラー のんきのおこう メガトンキック かわらわり みやぶる がんせきふうじ 0 0 0 0 0 0 いじっぱり 255 0 255 0 0 0 107 エビワラー おうじゃのしるし マッハパンチ スカイアッパー みきり カウンター 0 0 0 0 0 0 いじっぱり 255 0 255 0 0 0 107 エビワラー おうじゃのしるし ばくれつパンチ マッハパンチ みきり カウンター 0 0 0 0 0 0 いじっぱり 255 0 255 0 0 0 108 ベロリンガ オボンのみ たたきつける かわらわり したでなめる どろかけ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 108 ベロリンガ クラボのみ じしん のしかかり シャドーボール いわなだれ 0 0 0 0 0 0 いじっぱり 0 170 170 0 170 0 109 ドガース どくバリ ヘドロこうげき えんまく いちゃもん くろいきり 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 110 マタドガス ひかりのこな ヘドロばくだん おにび シャドーボール えんまく 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 110 マタドガス オボンのみ おきみやげ ヘドロばくだん からげんき みちづれ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 110 マタドガス きあいのハチマキ だいばくはつ ヘドロばくだん かえんほうしゃ 10まんボルト 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 110 マタドガス きあいのハチマキ だいばくはつ ヘドロばくだん やつあたり シャドーボール 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 111 サイホーン きあいのハチマキ ロックブラスト あなをほる こわいかお ほえる 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 112 サイドン せんせいのツメ じしん がんせきふうじ こわいかお かわらわり 0 0 0 0 0 0 いじっぱり 170 170 0 0 170 0 112 サイドン せんせいのツメ じしん つのドリル いわなだれ かわらわり 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 112 サイドン せんせいのツメ メガホーン ブレイククロー じしん つのドリル 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 112 サイドン せんせいのツメ メガホーン じしん いわなだれ つのドリル 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 113 ラッキー オボンのみ ゆびをふる リフレッシュ まるくなる ちいさくなる 0 0 0 0 0 0 のんき 0 0 255 0 255 0 113 ラッキー たべのこし ちきゅうなげ シャドーボール かげぶんしん タマゴうみ 0 0 0 0 0 0 のんき 0 0 255 0 255 0 114 モンジャラ のんきのおこう メガドレイン たたきつける どくどく しめつける 0 0 0 0 0 0 がんばりや 255 0 0 0 255 0 114 モンジャラ カゴのみ ギガドレイン しびれごな ねむる ドわすれ 0 0 0 0 0 0 おだやか 255 0 0 0 255 0 115 ガルーラ きあいのハチマキ ピヨピヨパンチ かわらわり カウンター ねこだまし 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 115 ガルーラ ラムのみ ブレイククロー シャドーボール メロメロ ねむる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 115 ガルーラ カムラのみ きしかいせい こらえる 10まんボルト じしん 0 0 0 0 0 0 ようき 0 255 0 0 0 255 115 ガルーラ ひかりのこな メガトンキック じしん つばめがえし シャドーボール 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 116 タッツー ヤタピのみ みずでっぽう こうそくいどう こごえるかぜ たつまき 0 0 0 0 0 0 のんき 255 0 0 255 0 0 117 シードラ しんぴのしずく オーロラビーム えんまく みずでっぽう あまごい 0 0 0 0 0 0 なまいき 255 0 0 255 0 0 117 シードラ かいがらのすず ハイドロポンプ やつあたり りゅうのいぶき りゅうのまい 0 0 0 0 0 0 すなお 255 0 0 0 255 0 118 トサキント ヤタピのみ たきのぼり みだれづき こうそくいどう サイケこうせん 0 0 0 0 0 0 すなお 255 0 0 255 0 0 119 アズマオウ オボンのみ みずのはどう サイケこうせん スピードスター こうそくいどう 0 0 0 0 0 0 すなお 255 0 0 0 255 0 119 アズマオウ せんせいのツメ つのドリル メガホーン ねごと ねむる 0 0 0 0 0 0 わんぱく 170 0 170 0 170 0 120 ヒトデマン かいがらのすず バブルこうせん ちいさくなる スピードスター ひかりのかべ 0 0 0 0 0 0 きまぐれ 255 0 0 255 0 0 121 スターミー かいがらのすず サイコキネシス あやしいひかり でんじは じこさいせい 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 121 スターミー かいがらのすず ハイドロポンプ かみなり あまごい じこさいせい 0 0 0 0 0 0 ひかえめ 170 0 170 0 170 0 121 スターミー ラムのみ なみのり サイコキネシス 10まんボルト れいとうビーム 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 121 スターミー ラムのみ サイコキネシス 10まんボルト れいとうビーム じこさいせい 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 121 スターミー ラムのみ なみのり サイコキネシス じこさいせい ひかりのかべ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 121 スターミー たべのこし なみのり あやしいひかり でんじは じこさいせい 0 0 0 0 0 0 おだやか 170 0 170 0 170 0 121 スターミー ひかりのこな サイコキネシス れいとうビーム コスモパワー じこさいせい 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 121 スターミー ひかりのこな なみのり 10まんボルト コスモパワー じこさいせい 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 122 バリヤード たべのこし サイコキネシス マジカルリーフ ねこだまし リフレクター 0 0 0 0 0 0 のんき 255 0 255 0 0 0 122 バリヤード チイラのみ バトンタッチ いばる じこあんじ サイコキネシス 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 122 バリヤード こだわりハチマキ トリック いちゃもん サイコキネシス 10まんボルト 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 122 バリヤード ひかりのこな サイコキネシス 10まんボルト れいとうパンチ ほのおのパンチ 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 123 ストライク チイラのみ れんぞくぎり つばめがえし ひかりのかべ かげぶんしん 0 0 0 0 0 0 のんき 255 255 0 0 0 0 123 ストライク ひかりのこな ぎんいろのかぜ つばめがえし つるぎのまい かげぶんしん 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 124 ルージュラ かいがらのすず れいとうビーム ねこだまし あくまのキッス メロメロ 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 124 ルージュラ ひかりのこな ほろびのうた くろいまなざし あくまのキッス まもる 0 0 0 0 0 0 わんぱく 255 0 255 0 0 0 124 ルージュラ せんせいのツメ ゆめくい あくまのキッス メロメロ みがわり 0 0 0 0 0 0 がんばりや 255 0 255 0 0 0 124 ルージュラ ラムのみ サイコキネシス れいとうビーム あくまのキッス うそなき 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 125 エレブー クラボのみ 10まんボルト でんじは かわらわり ひかりのかべ 0 0 0 0 0 0 のんき 170 0 170 170 0 0 125 エレブー たべのこし かみなり あまごい メロメロ きあいパンチ 0 0 0 0 0 0 きまぐれ 0 170 0 170 0 170 125 エレブー ラムのみ ほのおのパンチ れいとうパンチ 10まんボルト クロスチョップ 0 0 0 0 0 0 きまぐれ 0 0 0 255 0 255 125 エレブー ピントレンズ 10まんボルト サイコキネシス メガトンキック クロスチョップ 0 0 0 0 0 0 すなお 0 255 0 255 0 0 126 ブーバー チーゴのみ かえんほうしゃ えんまく かわらわり バリアー 0 0 0 0 0 0 のんき 170 0 170 170 0 0 126 ブーバー せんせいのツメ だいもんじ えんまく かみなりパンチ あやしいひかり 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 126 ブーバー ピントレンズ メガトンキック クロスチョップ アイアンテール カウンター 0 0 0 0 0 0 わんぱく 0 255 255 0 0 0 126 ブーバー ピントレンズ かえんほうしゃ サイコキネシス クロスチョップ あやしいひかり 0 0 0 0 0 0 すなお 255 0 255 0 0 0 127 カイロス くろおび じごくぐるま きあいだめ つるぎのまい リベンジ 0 0 0 0 0 0 やんちゃ 255 255 0 0 0 0 127 カイロス カムラのみ ハサミギロチン つるぎのまい じたばた こらえる 0 0 0 0 0 0 ようき 255 0 0 0 0 255 128 ケンタロス キーのみ じしん あばれる いばる からげんき 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 128 ケンタロス カゴのみ すてみタックル じしん かげぶんしん ねむる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 128 ケンタロス たべのこし すてみタックル じしん かえんほうしゃ れいとうビーム 0 0 0 0 0 0 すなお 0 255 0 255 0 0 128 ケンタロス ひかりのこな すてみタックル がんせきふうじ 10まんボルト なみのり 0 0 0 0 0 0 すなお 0 255 0 255 0 0 129 コイキング きあいのハチマキ じたばた 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 130 ギャラドス ラムのみ おんがえし かみつく でんじは りゅうのまい 0 0 0 0 0 0 しんちょう 255 0 0 0 255 0 130 ギャラドス かいがらのすず ハイドロポンプ 10まんボルト だいもんじ ふぶき 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 130 ギャラドス せんせいのツメ なみのり かみなり あまごい じしん 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 130 ギャラドス カゴのみ おんがえし じしん りゅうのまい ねむる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 131 ラプラス たべのこし なみのり メロメロ あやしいひかり うたう 0 0 0 0 0 0 ずぶとい 0 0 255 0 255 0 131 ラプラス せんせいのツメ なみのり れいとうビーム のしかかり ほえる 0 0 0 0 0 0 おくびょう 0 0 0 255 0 255 131 ラプラス ひかりのこな すてみタックル サイコキネシス あやしいひかり りゅうのまい 0 0 0 0 0 0 すなお 170 0 170 0 170 0 131 ラプラス ラムのみ なみのり れいとうビーム 10まんボルト サイコキネシス 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 131 ラプラス かいがらのすず サイコキネシス 10まんボルト アイアンテール すてみタックル 0 0 0 0 0 0 すなお 0 255 0 255 0 0 131 ラプラス ひかりのこな ハイドロポンプ かみなり あまごい ふぶき 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 131 ラプラス ヒメリのみ ぜったいれいど つのドリル ねむる ねごと 0 0 0 0 0 0 おだやか 170 0 170 0 170 0 131 ラプラス せんせいのツメ ぜったいれいど つのドリル うたう メロメロ 0 0 0 0 0 0 おだやか 170 0 170 0 170 0 132 メタモン メタルパウダー へんしん 0 0 0 0 0 0 がんばりや 255 0 0 0 0 255 133 イーブイ カムラのみ あまえる メロメロ じたばた こらえる 0 0 0 0 0 0 すなお 255 0 0 0 0 255 134 シャワーズ しんぴのしずく なみのり ほえる かみつく でんこうせっか 0 0 0 0 0 0 ひかえめ 0 0 170 170 170 0 134 シャワーズ かいがらのすず なみのり れいとうビーム のしかかり シャドーボール 0 0 0 0 0 0 すなお 170 0 170 0 170 0 134 シャワーズ せんせいのツメ なみのり れいとうビーム とける バトンタッチ 0 0 0 0 0 0 おだやか 170 0 170 0 170 0 134 シャワーズ ラムのみ なみのり れいとうビーム とける ねむる 0 0 0 0 0 0 おだやか 170 0 0 170 170 0 135 サンダース クラボのみ 10まんボルト でんじは メロメロ まもる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 135 サンダース ピントレンズ 10まんボルト あなをほる にどげり ほえる 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 135 サンダース ひかりのこな 10まんボルト でんじは こうそくいどう バトンタッチ 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 135 サンダース おうじゃのしるし 10まんボルト でんじは かみつく シャドーボール 0 0 0 0 0 0 おくびょう 0 0 0 255 0 255 136 ブースター オボンのみ かえんほうしゃ ほえる かみつく すなかけ 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 136 ブースター せんせいのツメ のろい メロメロ すてみタックル シャドーボール 0 0 0 0 0 0 のんき 170 0 170 0 170 0 136 ブースター せんせいのツメ シャドーボール じたばた こらえる オーバーヒート 0 0 0 0 0 0 ようき 0 255 0 0 0 255 136 ブースター せんせいのツメ オーバーヒート にほんばれ すてみタックル シャドーボール 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 137 ポリゴン オボンのみ サイケこうせん こごえるかぜ リサイクル こうそくいどう 0 0 0 0 0 0 のんき 255 0 0 255 0 0 137 ポリゴン クラボのみ トライアタック サイコキネシス でんじは じこさいせい 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 138 オムナイト オボンのみ マッドショット みずでっぽう げんしのちから くすぐる 0 0 0 0 0 0 きまぐれ 170 170 0 170 0 0 139 オムスター かいがらのすず バブルこうせん とげキャノン くすぐる げんしのちから 0 0 0 0 0 0 きまぐれ 255 0 0 255 0 0 139 オムスター オボンのみ ハイドロポンプ あまごい れいとうビーム まもる 0 0 0 0 0 0 ひかえめ 255 0 0 0 255 0 140 カブト オボンのみ メガドレイン げんしのちから すなかけ まもる 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 141 カブトプス ピントレンズ きりさく あなをほる れんぞくぎり はたきおとす 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 141 カブトプス カムラのみ きりさく いわなだれ じたばた こらえる 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 142 プテラ おうじゃのしるし げんしのちから りゅうのいぶき つばめがえし ほえる 0 0 0 0 0 0 いじっぱり 170 170 0 0 0 170 142 プテラ こだわりハチマキ はかいこうせん じしん つばめがえし げんしのちから 0 0 0 0 0 0 いじっぱり 170 170 0 0 0 170 142 プテラ おうじゃのしるし すてみタックル いわなだれ だいもんじ ドラゴンクロー 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 142 プテラ おうじゃのしるし すてみタックル じしん だいもんじ かみつく 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 143 カビゴン たべのこし からげんき シャドーボール メロメロ かげぶんしん 0 0 0 0 0 0 いじっぱり 0 255 255 0 0 0 143 カビゴン カゴのみ じしん いわなだれ のろい ねむる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 143 カビゴン せんせいのツメ メガトンキック シャドーボール いばる じこあんじ 0 0 0 0 0 0 いじっぱり 0 0 255 0 255 0 143 カビゴン せんせいのツメ すてみタックル シャドーボール かわらわり のろい 0 0 0 0 0 0 いじっぱり 0 255 255 0 0 0 143 カビゴン せんせいのツメ メガトンキック シャドーボール かわらわり カウンター 0 0 0 0 0 0 いじっぱり 0 255 255 0 0 0 143 カビゴン たべのこし じしん シャドーボール かわらわり カウンター 0 0 0 0 0 0 いじっぱり 0 255 255 0 0 0 143 カビゴン せんせいのツメ はかいこうせん シャドーボール じしん のろい 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 143 カビゴン カゴのみ おんがえし シャドーボール はらだいこ ねむる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 144 フリーザー ラムのみ れいとうビーム みずのはどう こごえるかぜ ほえる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 144 フリーザー たべのこし みがわり どくどく ふぶき かげぶんしん 0 0 0 0 0 0 わんぱく 170 0 170 0 170 0 144 フリーザー ひかりのこな れいとうビーム からげんき つばめがえし まもる 0 0 0 0 0 0 すなお 0 255 0 255 0 0 144 フリーザー カゴのみ ふぶき すてみタックル ねむる リフレクター 0 0 0 0 0 0 すなお 0 255 0 255 0 0 144 フリーザー きあいのハチマキ ふぶき すてみタックル こうそくいどう いばる 0 0 0 0 0 0 すなお 0 255 0 255 0 0 144 フリーザー カゴのみ れいとうビーム つばめがえし リフレクター ねむる 0 0 0 0 0 0 すなお 0 255 0 255 0 0 145 サンダー ラムのみ 10まんボルト ドリルくちばし でんじは ほえる 0 0 0 0 0 0 すなお 0 0 0 255 0 255 145 サンダー ひかりのこな かみなり あまごい ドリルくちばし かげぶんしん 0 0 0 0 0 0 すなお 0 255 0 0 0 255 145 サンダー たべのこし 10まんボルト ドリルくちばし でんじは みがわり 0 0 0 0 0 0 すなお 0 170 0 170 0 170 145 サンダー かいがらのすず 10まんボルト ドリルくちばし でんじは ひかりのかべ 0 0 0 0 0 0 すなお 0 255 0 255 0 0 145 サンダー ピントレンズ 10まんボルト ドリルくちばし すてみタックル でんじは 0 0 0 0 0 0 すなお 0 255 0 255 0 0 145 サンダー ラムのみ かみなり ドリルくちばし あまごい すてみタックル 0 0 0 0 0 0 すなお 0 170 0 170 0 170 146 ファイヤー ラムのみ かえんほうしゃ つばめがえし どろかけ ほえる 0 0 0 0 0 0 すなお 0 255 0 255 0 0 146 ファイヤー しろいハーブ オーバーヒート つばめがえし かげぶんしん まもる 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 146 ファイヤー カゴのみ だいもんじ にほんばれ かげぶんしん ねむる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 146 ファイヤー しろいハーブ オーバーヒート すてみタックル はがねのつばさ しんぴのまもり 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 146 ファイヤー しろいハーブ オーバーヒート にほんばれ いばる からげんき 0 0 0 0 0 0 すなお 0 0 0 255 0 255 146 ファイヤー しろいハーブ オーバーヒート すてみタックル つばめがえし はがねのつばさ 0 0 0 0 0 0 すなお 0 255 0 255 0 0 147 ミニリュウ キーのみ げきりん でんじは ちょうおんぱ みずのはどう 0 0 0 0 0 0 すなお 255 0 0 255 0 0 148 ハクリュー クラボのみ りゅうのいぶき にらみつける まきつく しんぴのまもり 0 0 0 0 0 0 すなお 255 0 0 0 255 0 148 ハクリュー カゴのみ おんがえし ねむる でんじは りゅうのまい 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 149 カイリュー ひかりのこな じしん つばめがえし かわらわり りゅうのまい 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 149 カイリュー ひかりのこな じしん すてみタックル つばめがえし りゅうのまい 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 149 カイリュー たべのこし はかいこうせん メロメロ かげぶんしん でんじは 0 0 0 0 0 0 いじっぱり 0 170 170 0 170 0 149 カイリュー カゴのみ はかいこうせん でんじは りゅうのまい ねむる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 149 カイリュー ラムのみ げきりん すてみタックル でんじは ほえる 0 0 0 0 0 0 すなお 0 255 0 255 0 0 149 カイリュー かいがらのすず ドラゴンクロー 10まんボルト なみのり かえんほうしゃ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 149 カイリュー かいがらのすず ドラゴンクロー 10まんボルト なみのり れいとうビーム 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 149 カイリュー かいがらのすず ドラゴンクロー かえんほうしゃ れいとうビーム かわらわり 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 149 カイリュー せんせいのツメ かみなり なみのり あまごい じしん 0 0 0 0 0 0 すなお 255 0 0 255 0 0 149 カイリュー せんせいのツメ だいもんじ ふぶき にほんばれ じしん 0 0 0 0 0 0 すなお 255 0 0 255 0 0 152 チコリータ ひかりのこな ひみつのちから タネマシンガン どろかけ ひかりのかべ 0 0 0 0 0 0 のんき 255 0 0 255 0 0 153 ベイリーフ ひかりのこな はっぱカッター どくどく しんぴのまもり ひかりのかべ 0 0 0 0 0 0 すなお 255 0 0 255 0 0 153 ベイリーフ カゴのみ ギガドレイン のしかかり くさぶえ ねむる 0 0 0 0 0 0 すなお 170 0 170 0 170 0 154 メガニウム ひかりのこな ソーラービーム にほんばれ ひかりのかべ こうごうせい 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 154 メガニウム たべのこし やどりぎのタネ みがわり かげぶんしん くさぶえ 0 0 0 0 0 0 おだやか 170 0 170 0 170 0 154 メガニウム カムラのみ じしん じたばた こらえる ギガドレイン 0 0 0 0 0 0 ようき 0 255 0 0 0 255 154 メガニウム ひかりのこな ギガドレイン じしん げんしのちから のしかかり 0 0 0 0 0 0 がんばりや 170 170 0 170 0 0 155 ヒノアラシ オボンのみ ひのこ スピードスター でんこうせっか えんまく 0 0 0 0 0 0 すなお 255 0 0 255 0 0 156 マグマラシ きあいのハチマキ かえんぐるま みだれひっかき スピードスター えんまく 0 0 0 0 0 0 すなお 255 0 0 255 0 0 156 マグマラシ ひかりのこな かえんほうしゃ ブレイククロー のしかかり えんまく 0 0 0 0 0 0 すなお 0 255 0 255 0 0 157 バクフーン きあいのハチマキ だいもんじ にほんばれ えんまく ほえる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 157 バクフーン ピントレンズ かえんほうしゃ かみなりパンチ つばめがえし いわなだれ 0 0 0 0 0 0 がんばりや 0 170 0 170 0 170 157 バクフーン カムラのみ じしん オーバーヒート こらえる きしかいせい 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 157 バクフーン しろいハーブ オーバーヒート かみなりパンチ じしん ブレイククロー 0 0 0 0 0 0 がんばりや 0 170 0 170 0 170 158 ワニノコ ピントレンズ きりさく みずのはどう いやなおと こごえるかぜ 0 0 0 0 0 0 すなお 255 0 0 255 0 0 159 アリゲイツ ピントレンズ きりさく みずのはどう かみつく こわいかお 0 0 0 0 0 0 すなお 0 255 0 255 0 0 159 アリゲイツ きあいのハチマキ メガトンキック つばめがえし いわなだれ あなをほる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 160 オーダイル ラムのみ なみのり あまごい つばめがえし ほえる 0 0 0 0 0 0 れいせい 170 0 0 170 170 0 160 オーダイル せんせいのツメ なみのり ドラゴンクロー かわらわり こわいかお 0 0 0 0 0 0 なまいき 170 0 0 170 170 0 160 オーダイル ピントレンズ ハイドロポンプ かみくだく じしん いわなだれ 0 0 0 0 0 0 がんばりや 170 170 0 170 0 0 160 オーダイル ピントレンズ ハイドロポンプ れいとうビーム じしん つばめがえし 0 0 0 0 0 0 がんばりや 170 170 0 170 0 0 161 オタチ おうじゃのしるし でんこうせっか このゆびとまれ てだすけ ねこのて 0 0 0 0 0 0 すなお 255 255 0 0 0 0 162 オオタチ チイラのみ たたきつける まもる てだすけ このゆびとまれ 0 0 0 0 0 0 まじめ 0 0 255 0 255 0 162 オオタチ こだわりハチマキ トリック やつあたり シャドーボール このゆびとまれ 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 163 ホーホー キーのみ ねんりき さいみんじゅつ ちょうおんぱ リフレクター 0 0 0 0 0 0 きまぐれ 255 0 0 255 0 0 164 ヨルノズク キーのみ ねんりき つばめがえし だましうち リフレクター 0 0 0 0 0 0 のんき 255 0 255 0 0 0 164 ヨルノズク キーのみ サイコキネシス だましうち つばめがえし リフレクター 0 0 0 0 0 0 れいせい 0 0 255 255 0 0 165 レディバ オボンのみ サイケこうせん こうそくいどう バトンタッチ ひかりのかべ 0 0 0 0 0 0 てれや 255 0 0 255 0 0 166 レディアン きあいのハチマキ れんぞくパンチ バトンタッチ つるぎのまい こうそくいどう 0 0 0 0 0 0 てれや 0 255 0 0 0 255 167 イトマル チイラのみ シグナルビーム ナイトヘッド クモのす こわいかお 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 168 アリアドス のんきのおこう シグナルビーム クモのす ナイトヘッド どくどく 0 0 0 0 0 0 まじめ 255 255 0 0 0 0 169 クロバット おうじゃのしるし ヘドロばくだん かみつく おどろかす いやなおと 0 0 0 0 0 0 きまぐれ 170 170 0 170 0 0 169 クロバット たべのこし どくどく ギガドレイン あやしいひかり かげぶんしん 0 0 0 0 0 0 おだやか 170 0 170 0 170 0 169 クロバット ピントレンズ エアカッター すてみタックル シャドーボール いやなおと 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 169 クロバット ひかりのこな ヘドロばくだん つばめがえし シャドーボール あやしいひかり 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 170 チョンチー のんきのおこう スパーク ダイビング あやしいひかり とっしん 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 171 ランターン クラボのみ なみのり あやしいひかり メロメロ でんじは 0 0 0 0 0 0 れいせい 0 0 255 255 0 0 171 ランターン カムラのみ じたばた こらえる 10まんボルト なみのり 0 0 0 0 0 0 すなお 0 255 0 255 0 0 171 ランターン ひかりのこな ハイドロポンプ かみなり あやしいひかり あまごい 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 171 ランターン ラムのみ なみのり 10まんボルト れいとうビーム あやしいひかり 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 172 ピチュー オボンのみ てんしのキッス でんじは メロメロ でんげきは 0 0 0 0 0 0 うっかりや 255 0 0 255 0 0 173 ピィ のんきのおこう てんしのキッス うたう メロメロ ゆびをふる 0 0 0 0 0 0 まじめ 255 0 0 255 0 0 174 ププリン きあいのハチマキ てんしのキッス うたう メロメロ ちきゅうなげ 0 0 0 0 0 0 すなお 255 255 0 0 0 0 175 トゲピー のんきのおこう おんがえし あくび ねがいごと てんしのキッス 0 0 0 0 0 0 のんき 255 255 0 0 0 0 176 トゲチック のんきのおこう つばめがえし マジカルリーフ ねがいごと このゆびとまれ 0 0 0 0 0 0 のんき 255 0 255 0 0 0 176 トゲチック ピントレンズ おんがえし てんしのキッス つばめがえし あくび 0 0 0 0 0 0 のんき 255 0 255 0 0 0 177 ネイティ まがったスプーン ナイトヘッド みらいよち あやしいひかり フラッシュ 0 0 0 0 0 0 のんき 255 0 0 255 0 0 178 ネイティオ するどいくちばし ドリルくちばし ナイトヘッド ねがいごと みらいよち 0 0 0 0 0 0 がんばりや 170 170 0 170 0 0 178 ネイティオ たべのこし そらをとぶ どくどく あやしいひかり メロメロ 0 0 0 0 0 0 わんぱく 170 0 170 0 170 0 178 ネイティオ おうじゃのしるし ドリルくちばし サイコキネシス ギガドレイン はがねのつばさ 0 0 0 0 0 0 ようき 0 170 0 170 0 170 178 ネイティオ ヤタピのみ サイコキネシス ドリルくちばし シャドーボール あやしいひかり 0 0 0 0 0 0 すなお 0 255 0 255 0 0 179 メリープ クラボのみ でんげきは フラッシュ リフレクター わたほうし 0 0 0 0 0 0 のんき 255 0 0 255 0 0 180 モココ じしゃく でんげきは でんじは わたほうし ひかりのかべ 0 0 0 0 0 0 おっとり 255 0 0 255 0 0 181 デンリュウ じしゃく かみなり あまごい でんじは メロメロ 0 0 0 0 0 0 のんき 255 0 0 255 0 0 181 デンリュウ ひかりのこな かみなりパンチ ほのおのパンチ きあいパンチ でんじは 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 181 デンリュウ きあいのハチマキ 10まんボルト メガトンキック アイアンテール かわらわり 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 181 デンリュウ ラムのみ 10まんボルト ほのおのパンチ でんじは リフレクター 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 182 キレイハナ キーのみ はなびらのまい しんぴのまもり にほんばれ こうごうせい 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 182 キレイハナ ひかりのこな ソーラービーム メロメロ にほんばれ こうごうせい 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 183 マリル しんぴのしずく みずのはどう あまごい ひかりのかべ おんがえし 0 0 0 0 0 0 おとなしい 255 255 0 0 0 0 184 マリルリ オボンのみ バブルこうせん からげんき あなをほる まもる 0 0 0 0 0 0 すなお 0 0 255 0 255 0 184 マリルリ かいがらのすず メガトンキック かわらわり アイアンテール あなをほる 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 185 ウソッキー かたいいし いわなだれ だましうち すなあらし とおせんぼう 0 0 0 0 0 0 がんばりや 255 0 0 0 255 0 185 ウソッキー きあいのハチマキ メガトンキック じしん けたぐり じばく 0 0 0 0 0 0 がんばりや 255 0 0 0 255 0 186 ニョロトノ かいがらのすず ダイビング あなをほる さいみんじゅつ いばる 0 0 0 0 0 0 のんき 0 0 255 0 255 0 186 ニョロトノ のんきのおこう なみのり サイコキネシス どろかけ いばる 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 187 ハネッコ のんきのおこう メガドレイン やどりぎのタネ ねむりごな しびれごな 0 0 0 0 0 0 のうてんき 0 0 255 0 255 0 188 ポポッコ キーのみ メガドレイン ねんりき わたほうし こうごうせい 0 0 0 0 0 0 すなお 255 0 0 255 0 0 189 ワタッコ のんきのおこう つばめがえし いばる じこあんじ こうごうせい 0 0 0 0 0 0 すなお 255 0 0 0 0 255 189 ワタッコ たべのこし やどりぎのタネ ねむりごな ギガドレイン かげぶんしん 0 0 0 0 0 0 ずぶとい 0 0 255 0 255 0 190 エイパム シルクのスカーフ みだれひっかき すなかけ バトンタッチ こうそくいどう 0 0 0 0 0 0 のんき 255 255 0 0 0 0 191 ヒマナッツ のんきのおこう メガドレイン てだすけ にほんばれ ひかりのかべ 0 0 0 0 0 0 のんき 255 0 0 255 0 0 192 キマワリ キーのみ はなびらのまい ねをはる やどりぎのタネ ひかりのかべ 0 0 0 0 0 0 きまぐれ 255 0 255 0 0 0 192 キマワリ たべのこし ギガドレイン くさぶえ せいちょう かげぶんしん 0 0 0 0 0 0 れいせい 255 0 255 0 0 0 193 ヤンヤンマ のんきのおこう シグナルビーム つばめがえし かげぶんしん みきり 0 0 0 0 0 0 のんき 0 0 255 0 255 0 194 ウパー オボンのみ あくび あなをほる みずのはどう あまごい 0 0 0 0 0 0 すなお 255 255 0 0 0 0 195 ヌオー きあいのハチマキ じしん かわらわり カウンター どろかけ 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 195 ヌオー たべのこし のろい メロメロ あくび げんしのちから 0 0 0 0 0 0 なまいき 0 0 255 0 255 0 195 ヌオー せんせいのツメ じしん ヘドロばくだん すてみタックル のろい 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 195 ヌオー たべのこし なみのり じしん れいとうビーム ドわすれ 0 0 0 0 0 0 なまいき 0 170 0 170 170 0 196 エーフィ ラムのみ サイコキネシス あまえる めいそう バトンタッチ 0 0 0 0 0 0 ひかえめ 0 0 170 0 170 170 196 エーフィ カゴのみ サイコキネシス シャドーボール めいそう ねむる 0 0 0 0 0 0 すなお 0 255 0 0 0 255 196 エーフィ ラムのみ サイコキネシス かみつく ねがいごと リフレクター 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 196 エーフィ ひかりのこな サイコキネシス かみつく メロメロ めいそう 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 197 ブラッキー ひかりのこな あやしいひかり だましうち かげぶんしん バトンタッチ 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 197 ブラッキー たべのこし のろい いやなおと かげぶんしん すてみタックル 0 0 0 0 0 0 いじっぱり 170 170 0 0 170 0 197 ブラッキー ひかりのこな いばる じこあんじ メロメロ シャドーボール 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 197 ブラッキー たべのこし あやしいひかり どくどく だましうち かげぶんしん 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 198 ヤミカラス のんきのおこう だましうち そらをとぶ いちゃもん ちょうはつ 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 198 ヤミカラス ひかりのこな ほろびのうた くろいまなざし かげぶんしん でんじは 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 199 ヤドキング たべのこし サイコキネシス かわらわり ドわすれ メロメロ 0 0 0 0 0 0 れいせい 255 0 255 0 0 0 199 ヤドキング かいがらのすず あくび でんじは なみのり サイコキネシス 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 199 ヤドキング せんせいのツメ サイコキネシス なみのり れいとうビーム じしん 0 0 0 0 0 0 れいせい 0 170 170 170 0 0 199 ヤドキング せんせいのツメ サイコキネシス なみのり れいとうビーム かえんほうしゃ 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 200 ムウマ きあいのハチマキ いたみわけ シャドーボール あやしいひかり でんじは 0 0 0 0 0 0 わんぱく 255 0 255 0 0 0 200 ムウマ たべのこし サイコキネシス メロメロ でんじは あやしいひかり 0 0 0 0 0 0 ずぶとい 0 0 255 255 0 0 200 ムウマ ひかりのこな ほろびのうた くろいまなざし でんじは あやしいひかり 0 0 0 0 0 0 ずぶとい 255 0 255 0 0 0 200 ムウマ ラムのみ みちづれ サイコキネシス シャドーボール 10まんボルト 0 0 0 0 0 0 おくびょう 0 0 0 255 0 255 201 アンノーン のんきのおこう めざめるパワー 0 0 0 0 0 0 がんばりや 170 170 0 170 0 0 202 ソーナンス きあいのハチマキ カウンター ミラーコート あまえる しんぴのまもり 0 0 0 0 0 0 しんちょう 170 0 170 0 170 0 202 ソーナンス きあいのハチマキ カウンター ミラーコート アンコール みちづれ 0 0 0 0 0 0 しんちょう 0 0 255 0 255 0 203 キリンリキ ヤタピのみ サイケこうせん ふみつけ ねがいごと スキルスワップ 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 203 キリンリキ ラムのみ サイコキネシス かみくだく バトンタッチ こうそくいどう 0 0 0 0 0 0 ひかえめ 0 0 255 0 255 0 204 クヌギダマ きあいのハチマキ じばく とっしん リフレクター ひかりのかべ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 205 フォレトス きあいのハチマキ すてみタックル いわなだれ ひかりのかべ まきびし 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 205 フォレトス ラムのみ じしん すてみタックル カウンター まもる 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 205 フォレトス きあいのハチマキ だいばくはつ じしん ギガドレイン でんじほう 0 0 0 0 0 0 れいせい 0 170 0 170 170 0 205 フォレトス せんせいのツメ だいばくはつ じしん いわなだれ すてみタックル 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 206 ノコッチ のんきのおこう ずつき へびにらみ まるくなる ころがる 0 0 0 0 0 0 すなお 255 255 0 0 0 0 206 ノコッチ のんきのおこう れいとうビーム がんせきふうじ かみつく シャドーボール 0 0 0 0 0 0 れいせい 0 0 255 0 255 0 207 グライガー ピントレンズ メタルクロー あなをほる つばめがえし でんこうせっか 0 0 0 0 0 0 せっかち 255 0 0 0 255 0 207 グライガー せんせいのツメ じしん つばめがえし ハサミギロチン いやなおと 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 208 ハガネール オボンのみ じしん りゅうのいぶき がんせきふうじ ほえる 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 208 ハガネール たべのこし じしん りゅうのいぶき すなあらし とおせんぼう 0 0 0 0 0 0 がんばりや 0 255 0 0 255 0 208 ハガネール せんせいのツメ じしん のしかかり いわなだれ だいばくはつ 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 208 ハガネール せんせいのツメ じしん アイアンテール すてみタックル だいばくはつ 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 209 ブルー ピントレンズ かみつく あまえる いばる こわいかお 0 0 0 0 0 0 のんき 255 255 0 0 0 0 210 グランブル クラボのみ メガトンキック きつけ でんじは ほえる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 210 グランブル しろいハーブ オーバーヒート 10まんボルト れいとうパンチ からげんき 0 0 0 0 0 0 れいせい 0 0 0 255 255 0 210 グランブル せんせいのツメ すてみタックル じしん ヘドロばくだん いわなだれ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 210 グランブル こだわりハチマキ メガトンキック じしん かみくだく シャドーボール 0 0 0 0 0 0 ゆうかん 0 255 0 255 0 0 211 ハリーセン クラボのみ バブルこうせん ミサイルばり まきびし ちいさくなる 0 0 0 0 0 0 わんぱく 0 0 0 255 255 0 211 ハリーセン きあいのハチマキ リベンジ ヘドロばくだん シャドーボール みちづれ 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 212 ハッサム きあいのハチマキ メタルクロー つばめがえし カウンター でんこうせっか 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 212 ハッサム せんせいのツメ ぎんいろのかぜ はがねのつばさ つるぎのまい ひかりのかべ 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 212 ハッサム きあいのハチマキ きしかいせい こらえる こうそくいどう きりさく 0 0 0 0 0 0 しんちょう 0 255 0 0 255 0 212 ハッサム ひかりのこな ぎんいろのかぜ つるぎのまい こうそくいどう バトンタッチ 0 0 0 0 0 0 しんちょう 255 0 0 0 255 0 213 ツボツボ カゴのみ ころがる まるくなる ねごと ねむる 0 0 0 0 0 0 ゆうかん 0 0 255 0 255 0 213 ツボツボ たべのこし すなあらし あなをほる フラッシュ かげぶんしん 0 0 0 0 0 0 しんちょう 0 0 255 0 255 0 213 ツボツボ たべのこし みがわり メロメロ どくどく かげぶんしん 0 0 0 0 0 0 しんちょう 0 0 255 0 255 0 213 ツボツボ カゴのみ どくどく かげぶんしん まきつく ねむる 0 0 0 0 0 0 しんちょう 0 0 255 0 255 0 214 ヘラクロス きあいのハチマキ メガホーン かわらわり がんせきふうじ カウンター 0 0 0 0 0 0 いじっぱり 0 255 255 0 0 0 214 ヘラクロス ラムのみ メガホーン じしん メロメロ ビルドアップ 0 0 0 0 0 0 ようき 255 0 0 0 0 255 214 ヘラクロス ひかりのこな メガホーン じしん いわなだれ かわらわり 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 214 ヘラクロス カムラのみ メガホーン じしん きしかいせい こらえる 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 215 ニューラ キーのみ だましうち ねこだまし こごえるかぜ でんこうせっか 0 0 0 0 0 0 のんき 170 0 170 0 170 0 215 ニューラ おうじゃのしるし ブレイククロー かわらわり つばめがえし いやなおと 0 0 0 0 0 0 ようき 170 0 170 0 0 170 216 ヒメグマ カゴのみ ひみつのちから うそなき だましうち ねむる 0 0 0 0 0 0 のんき 255 255 0 0 0 0 217 リングマ せんせいのツメ メガトンキック かみくだく つばめがえし カウンター 0 0 0 0 0 0 すなお 170 170 0 170 0 0 217 リングマ せんせいのツメ すてみタックル じしん かわらわり カウンター 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 217 リングマ ラムのみ ほのおのパンチ かみなりパンチ れいとうパンチ かみくだく 0 0 0 0 0 0 ひかえめ 170 0 0 170 0 170 217 リングマ ひかりのこな すてみタックル じしん いわなだれ つばめがえし 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 217 リングマ こだわりハチマキ メガトンキック つばめがえし いわなだれ かわらわり 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 217 リングマ きあいのハチマキ はかいこうせん あくび つるぎのまい かげぶんしん 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 217 リングマ せんせいのツメ からげんき じしん かみくだく ビルドアップ 0 0 0 0 0 0 すなお 170 170 0 170 0 0 217 リングマ せんせいのツメ からげんき じしん かみくだく かわらわり 0 0 0 0 0 0 すなお 170 170 0 170 0 0 218 マグマッグ オボンのみ ひのこ いわなだれ あくび のしかかり 0 0 0 0 0 0 なまいき 170 0 170 0 170 0 219 マグカルゴ のんきのおこう いわなだれ ひのこ とける すなあらし 0 0 0 0 0 0 おとなしい 255 0 0 0 255 0 219 マグカルゴ せんせいのツメ オーバーヒート じしん いわなだれ のしかかり 0 0 0 0 0 0 れいせい 255 0 0 0 255 0 220 ウリムー オボンのみ こごえるかぜ あなをほる がんせきふうじ こらえる 0 0 0 0 0 0 おとなしい 0 255 0 255 0 0 221 イノムー やわらかいすな あなをほる げんしのちから あられ ひかりのかべ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 221 イノムー かいがらのすず じしん いわなだれ のしかかり ほえる 0 0 0 0 0 0 いじっぱり 0 0 255 0 255 0 222 サニーゴ オボンのみ バブルこうせん ミラーコート メロメロ げんしのちから 0 0 0 0 0 0 わんぱく 170 0 170 0 170 0 223 テッポウオ ヤタピのみ バブルこうせん オーロラビーム サイケこうせん まもる 0 0 0 0 0 0 きまぐれ 0 0 0 255 0 255 224 オクタン かいがらのすず オクタンほう オーロラビーム サイケこうせん ロックブラスト 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 224 オクタン のんきのおこう オクタンほう だいもんじ でんじは どろかけ 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 225 デリバード とけないこおり プレゼント アイスボール つばめがえし あられ 0 0 0 0 0 0 すなお 255 0 0 255 0 0 226 マンタイン しんぴのしずく バブルこうせん つばめがえし あまごい こごえるかぜ 0 0 0 0 0 0 すなお 255 0 0 0 255 0 226 マンタイン かいがらのすず なみのり れいとうビーム あまごい あやしいひかり 0 0 0 0 0 0 ひかえめ 255 0 255 0 0 0 227 エアームド ピントレンズ はがねのつばさ エアカッター カウンター こうそくいどう 0 0 0 0 0 0 いじっぱり 170 170 0 0 170 0 227 エアームド ひかりのこな まきびし ほえる ドリルくちばし どくどく 0 0 0 0 0 0 しんちょう 170 170 0 0 170 0 227 エアームド カゴのみ どくどく のろい ねむる そらをとぶ 0 0 0 0 0 0 しんちょう 255 0 0 0 255 0 227 エアームド せんせいのツメ ドリルくちばし はがねのつばさ カウンター いわなだれ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 228 デルビル もくたん かみくだく ひのこ ほえる まもる 0 0 0 0 0 0 すなお 255 0 0 255 0 0 229 ヘルガー きあいのハチマキ かえんほうしゃ シャドーボール カウンター おにび 0 0 0 0 0 0 きまぐれ 0 170 0 170 0 170 229 ヘルガー ラムのみ だいもんじ かみくだく ほえる ねむる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 229 ヘルガー しろいハーブ オーバーヒート シャドーボール ヘドロばくだん すてみタックル 0 0 0 0 0 0 きまぐれ 0 255 0 0 0 255 229 ヘルガー しろいハーブ オーバーヒート ソーラービーム かみくだく にほんばれ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 230 キングドラ ラムのみ ハイドロポンプ りゅうのいぶき こごえるかぜ メロメロ 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 230 キングドラ カゴのみ なみのり れいとうビーム りゅうのいぶき ねむる 0 0 0 0 0 0 ひかえめ 170 0 170 0 170 0 230 キングドラ カムラのみ じたばた ハイドロポンプ りゅうのまい こらえる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 230 キングドラ カゴのみ すてみタックル れいとうビーム りゅうのまい ねむる 0 0 0 0 0 0 がんばりや 170 0 170 0 170 0 231 ゴマゾウ のんきのおこう ころがる まるくなる がんせきふうじ すなあらし 0 0 0 0 0 0 やんちゃ 255 255 0 0 0 0 232 ドンファン カゴのみ じしん げんしのちから いばる ねむる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 232 ドンファン せんせいのツメ じたばた こらえる じしん がんせきふうじ 0 0 0 0 0 0 ようき 0 255 0 0 0 255 232 ドンファン せんせいのツメ じわれ じしん いわなだれ ひみつのちから 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 232 ドンファン せんせいのツメ じわれ じしん いわなだれ アイアンテール 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 233 ポリゴン2 たべのこし トライアタック つばめがえし シャドーボール じこさいせい 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 233 ポリゴン2 ラムのみ ソーラービーム にほんばれ でんじは じこさいせい 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 233 ポリゴン2 ラムのみ サイコキネシス トライアタック でんじは じこさいせい 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 233 ポリゴン2 ひかりのこな サイコキネシス 10まんボルト れいとうビーム じこさいせい 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 234 オドシシ まがったスプーン じんつうりき あやしいひかり ふみつけ すなかけ 0 0 0 0 0 0 おとなしい 255 0 0 255 0 0 234 オドシシ のんきのおこう やつあたり シャドーボール でんじは あやしいひかり 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 235 ドーブル おうじゃのしるし しんそく ねこだまし でんこうせっか マッハパンチ 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 236 バルキー きあいのハチマキ マッハパンチ まもる かげぶんしん からげんき 0 0 0 0 0 0 すなお 255 255 0 0 0 0 237 カポエラー チイラのみ トリプルキック あなをほる マッハパンチ でんこうせっか 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 237 カポエラー きあいのハチマキ すてみタックル ちきゅうなげ いわなだれ カウンター 0 0 0 0 0 0 いじっぱり 255 0 255 0 0 0 238 ムチュール ひかりのこな てんしのキッス うたう どろかけ ねこだまし 0 0 0 0 0 0 すなお 255 255 0 0 0 0 239 エレキッド クラボのみ かみなりパンチ でんこうせっか スピードスター ひかりのかべ 0 0 0 0 0 0 むじゃき 255 0 0 255 0 0 240 ブビィ のんきのおこう ほのおのパンチ えんまく あやしいひかり スモッグ 0 0 0 0 0 0 すなお 255 0 0 255 0 0 241 ミルタンク きあいのハチマキ からげんき シャドーボール カウンター ミルクのみ 0 0 0 0 0 0 しんちょう 170 0 170 0 170 0 241 ミルタンク たべのこし きあいパンチ シャドーボール メロメロ でんじは 0 0 0 0 0 0 しんちょう 170 170 0 0 170 0 241 ミルタンク カムラのみ きしかいせい こらえる じしん シャドーボール 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 241 ミルタンク ラムのみ すてみタックル のろい かげぶんしん ミルクのみ 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 242 ハピナス ひかりのこな どくどく かげぶんしん うたう タマゴうみ 0 0 0 0 0 0 ずぶとい 0 0 255 0 255 0 242 ハピナス たべのこし ちきゅうなげ うたう メロメロ みがわり 0 0 0 0 0 0 ずぶとい 0 0 255 0 255 0 242 ハピナス きあいのハチマキ だいもんじ ふぶき めいそう タマゴうみ 0 0 0 0 0 0 ずぶとい 0 0 255 0 255 0 242 ハピナス きあいのハチマキ れいとうビーム めいそう カウンター タマゴうみ 0 0 0 0 0 0 ずぶとい 0 0 255 0 255 0 243 ライコウ カゴのみ 10まんボルト でんじは めいそう ねむる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 243 ライコウ ひかりのこな かみなり あまごい かげぶんしん リフレクター 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 243 ライコウ おうじゃのしるし 10まんボルト でんじは でんこうせっか ほえる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 243 ライコウ ラムのみ 10まんボルト かみつく でんじは リフレクター 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 243 ライコウ ひかりのこな 10まんボルト すてみタックル ほえる リフレクター 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 243 ライコウ カゴのみ 10まんボルト めいそう みがわり ねむる 0 0 0 0 0 0 ひかえめ 255 0 255 0 0 0 244 エンテイ カゴのみ かえんほうしゃ かげぶんしん めいそう ねむる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 244 エンテイ ひかりのこな だいもんじ にほんばれ ソーラービーム リフレクター 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 244 エンテイ ラムのみ かえんほうしゃ すてみタックル いばる じこあんじ 0 0 0 0 0 0 すなお 0 255 0 0 0 255 244 エンテイ おうじゃのしるし かえんほうしゃ かみつく かげぶんしん リフレクター 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 244 エンテイ カムラのみ だいもんじ すてみタックル こらえる リフレクター 0 0 0 0 0 0 すなお 0 0 255 0 255 0 244 エンテイ カゴのみ かえんほうしゃ めいそう ほえる ねむる 0 0 0 0 0 0 ひかえめ 0 0 255 0 255 0 245 スイクン カゴのみ なみのり かげぶんしん めいそう ねむる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 245 スイクン たべのこし どくどく ダイビング かげぶんしん まもる 0 0 0 0 0 0 おだやか 170 0 170 0 170 0 245 スイクン ラムのみ なみのり れいとうビーム あまごい ほえる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 245 スイクン ひかりのこな なみのり れいとうビーム かみつく リフレクター 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 245 スイクン ラムのみ なみのり れいとうビーム めいそう こごえるかぜ 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 245 スイクン カゴのみ なみのり れいとうビーム めいそう ねむる 0 0 0 0 0 0 ひかえめ 170 0 170 0 170 0 246 ヨーギラス キーのみ あばれる いわなだれ あなをほる りゅうのまい 0 0 0 0 0 0 やんちゃ 255 255 0 0 0 0 247 サナギラス やわらかいすな あなをほる かみつく こわいかお すなあらし 0 0 0 0 0 0 がんばりや 255 0 0 0 0 255 247 サナギラス ピントレンズ じしん いわなだれ かみくだく こわいかお 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 248 バンギラス ひかりのこな じしん つばめがえし 10まんボルト なみのり 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 248 バンギラス ひかりのこな じしん いわなだれ かみくだく 10まんボルト 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 248 バンギラス きあいのハチマキ じしん いわなだれ カウンター りゅうのまい 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 248 バンギラス せんせいのツメ かみくだく れいとうビーム 10まんボルト かえんほうしゃ 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 248 バンギラス カゴのみ じしん いわなだれ りゅうのまい ねむる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 248 バンギラス カゴのみ じしん いわなだれ のろい ねむる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 248 バンギラス せんせいのツメ いわなだれ つばめがえし かわらわり のろい 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 248 バンギラス ラムのみ いわなだれ でんじは りゅうのまい ねむる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 248 バンギラス せんせいのツメ かみくだく じしん つばめがえし メロメロ 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 248 バンギラス ラムのみ すてみタックル じしん いわなだれ りゅうのまい 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 252 キモリ ピントレンズ タネマシンガン つばめがえし でんこうせっか かげぶんしん 0 0 0 0 0 0 さみしがり 0 255 0 255 0 0 253 ジュプトル ひかりのこな れんぞくぎり がむしゃら かわらわり かげぶんしん 0 0 0 0 0 0 のんき 255 255 0 0 0 0 253 ジュプトル ラムのみ ギガドレイン ブレイククロー いやなおと がんせきふうじ 0 0 0 0 0 0 すなお 0 255 0 0 0 255 254 ジュカイン たべのこし リーフブレード やどりぎのタネ つばめがえし みきり 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 254 ジュカイン ラムのみ リーフブレード かみなりパンチ メロメロ かげぶんしん 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 254 ジュカイン ピントレンズ リーフブレード じしん ブレイククロー つばめがえし 0 0 0 0 0 0 すなお 0 170 0 170 0 170 254 ジュカイン ひかりのこな リーフブレード ドラゴンクロー かみくだく かみなりパンチ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 255 アチャモ ひかりのこな ほのおのうず でんこうせっか すなかけ かげぶんしん 0 0 0 0 0 0 さみしがり 255 0 0 255 0 0 256 ワカシャモ ピントレンズ ひのこ にどげり でんこうせっか すなかけ 0 0 0 0 0 0 すなお 0 255 0 255 0 0 256 ワカシャモ ピントレンズ かえんほうしゃ スカイアッパー きりさく すなかけ 0 0 0 0 0 0 すなお 0 170 0 170 0 170 257 バシャーモ せんせいのツメ かえんほうしゃ にほんばれ にどげり ほえる 0 0 0 0 0 0 すなお 0 255 0 255 0 0 257 バシャーモ ピントレンズ ブレイズキック メガトンキック かみなりパンチ かわらわり 0 0 0 0 0 0 すなお 0 255 0 255 0 0 257 バシャーモ カムラのみ オーバーヒート じしん こらえる きしかいせい 0 0 0 0 0 0 がんばりや 0 255 0 0 0 255 257 バシャーモ しろいハーブ オーバーヒート じしん かみなりパンチ いわなだれ 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 258 ミズゴロウ きあいのハチマキ うずしお がむしゃら どろあそび どろかけ 0 0 0 0 0 0 すなお 255 0 0 255 0 0 259 ヌマクロー きあいのハチマキ マッドショット みずでっぽう がんせきふうじ どろかけ 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 259 ヌマクロー きあいのハチマキ だくりゅう じしん どろかけ まもる 0 0 0 0 0 0 すなお 0 255 0 255 0 0 260 ラグラージ ラムのみ じしん カウンター ねむる のろい 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 260 ラグラージ せんせいのツメ なみのり じしん カウンター ミラーコート 0 0 0 0 0 0 すなお 170 0 170 0 170 0 260 ラグラージ かいがらのすず なみのり じしん れいとうビーム カウンター 0 0 0 0 0 0 ゆうかん 0 255 0 255 0 0 260 ラグラージ かいがらのすず なみのり じしん れいとうビーム ミラーコート 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 261 ポチエナ ヤタピのみ かみくだく いばる ほえる すなかけ 0 0 0 0 0 0 のんき 255 0 0 255 0 0 262 グラエナ メンタルハーブ かみつく どくどくのキバ ちょうはつ ほえる 0 0 0 0 0 0 おくびょう 0 255 0 255 0 0 262 グラエナ おうじゃのしるし かみくだく シャドーボール やつあたり こわいかお 0 0 0 0 0 0 きまぐれ 0 0 255 255 0 0 263 ジグザグマ シルクのスカーフ ずつき ミサイルばり スピードスター すなかけ 0 0 0 0 0 0 おくびょう 255 255 0 0 0 0 264 マッスグマ しろいハーブ ひみつのちから すなかけ ほしがる くすぐる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 264 マッスグマ こだわりハチマキ トリック やつあたり でんじは すなかけ 0 0 0 0 0 0 ようき 0 255 0 0 0 255 265 ケムッソ のんきのおこう たいあたり いとをはく どくばり 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 266 カラサリス のんきのおこう かたくなる 0 0 0 0 0 0 てれや 255 0 0 0 255 0 267 アゲハント メンタルハーブ ぎんいろのかぜ メガドレイン メロメロ ふきとばし 0 0 0 0 0 0 すなお 255 0 0 0 0 255 268 マユルド のんきのおこう かたくなる 0 0 0 0 0 0 てれや 255 0 0 0 255 0 269 ドクケイル ぎんのこな ぎんいろのかぜ どくどく サイケこうせん ふきとばし 0 0 0 0 0 0 すなお 255 0 0 0 0 255 270 ハスボー のんきのおこう あまごい みずのはどう にほんばれ メガドレイン 0 0 0 0 0 0 すなお 255 0 0 255 0 0 271 ハスブレロ のんきのおこう みずのはどう ねこだまし かわらわり すいとる 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 272 ルンパッパ かいがらのすず なみのり あまごい かみなりパンチ ほのおのパンチ 0 0 0 0 0 0 れいせい 170 0 170 170 0 0 272 ルンパッパ かいがらのすず なみのり れいとうビーム かみなりパンチ ほのおのパンチ 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 272 ルンパッパ たべのこし やどりぎのタネ あまごい かげぶんしん ギガドレイン 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 272 ルンパッパ たべのこし やどりぎのタネ あまごい かげぶんしん どくどく 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 273 タネボー きあいのハチマキ タネマシンガン がまん まるくなる ころがる 0 0 0 0 0 0 すなお 255 255 0 0 0 0 274 コノハナ オボンのみ じんつうりき ねこだまし かまいたち だましうち 0 0 0 0 0 0 がんばりや 255 0 0 255 0 0 275 ダーテング きせきのタネ ギガドレイン だましうち でんこうせっか ねこだまし 0 0 0 0 0 0 れいせい 0 0 170 170 170 0 275 ダーテング カゴのみ やどりぎのタネ あなをほる かげぶんしん ねむる 0 0 0 0 0 0 わんぱく 0 0 255 0 255 0 275 ダーテング きあいのハチマキ ソーラービーム にほんばれ だいばくはつ こうごうせい 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 275 ダーテング きあいのハチマキ だいばくはつ ギガドレイン メガトンキック ねこだまし 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 276 スバメ カムラのみ そらをとぶ でんこうせっか がむしゃら きあいだめ 0 0 0 0 0 0 おとなしい 170 170 0 0 0 170 277 オオスバメ おうじゃのしるし そらをとぶ がむしゃら からげんき でんこうせっか 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 277 オオスバメ おうじゃのしるし からげんき つばめがえし おいうち かげぶんしん 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 278 キャモメ キーのみ みずのはどう そらをとぶ でんこうせっか はがねのつばさ 0 0 0 0 0 0 がんばりや 255 0 0 255 0 0 279 ペリッパー オボンのみ みずのはどう つばめがえし たくわえる のみこむ 0 0 0 0 0 0 れいせい 255 0 0 0 255 0 279 ペリッパー かいがらのすず なみのり ふぶき つばめがえし まもる 0 0 0 0 0 0 れいせい 255 0 0 0 255 0 280 ラルトス まがったスプーン ねんりき ふういん かげぶんしん ひかりのかべ 0 0 0 0 0 0 すなお 255 0 0 255 0 0 281 キルリア しろいハーブ ねんりき おにび みらいよち ひかりのかべ 0 0 0 0 0 0 すなお 255 0 0 0 0 255 282 サーナイト たべのこし ゆめくい さいみんじゅつ マジカルリーフ リフレクター 0 0 0 0 0 0 おくびょう 170 0 170 0 0 170 282 サーナイト カゴのみ サイコキネシス めいそう かげぶんしん ねむる 0 0 0 0 0 0 ひかえめ 255 0 255 0 0 0 282 サーナイト ラムのみ サイコキネシス れいとうパンチ ほのおのパンチ マジカルリーフ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 282 サーナイト ひかりのこな サイコキネシス 10まんボルト れいとうパンチ ほのおのパンチ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 282 サーナイト カムラのみ サイコキネシス シャドーボール こらえる みちづれ 0 0 0 0 0 0 すなお 170 0 170 0 0 170 282 サーナイト ラムのみ サイコキネシス 10まんボルト おにび みちづれ 0 0 0 0 0 0 おくびょう 255 0 0 0 0 255 282 サーナイト せんせいのツメ サイコキネシス めいそう おにび みちづれ 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 282 サーナイト ひかりのこな サイコキネシス マジカルリーフ メロメロ かげぶんしん 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 283 アメタマ しんぴのしずく バブルこうせん あまごい あまいかおり でんこうせっか 0 0 0 0 0 0 のんき 255 0 0 255 0 0 284 アメモース クラボのみ ぎんいろのかぜ つばめがえし こごえるかぜ しびれごな 0 0 0 0 0 0 のんき 0 255 255 0 0 0 284 アメモース のんきのおこう ハイドロポンプ れいとうビーム ギガドレイン しびれごな 0 0 0 0 0 0 れいせい 0 0 255 255 0 0 285 キノココ きせきのタネ キノコのほうし タネマシンガン やどりぎのタネ ずつき 0 0 0 0 0 0 のんき 255 0 0 255 0 0 286 キノガッサ おうじゃのしるし スカイアッパー マッハパンチ ずつき カウンター 0 0 0 0 0 0 ようき 0 255 0 0 0 255 286 キノガッサ ひかりのこな ギガドレイン やどりぎのタネ きあいパンチ キノコのほうし 0 0 0 0 0 0 すなお 0 0 0 255 0 255 286 キノガッサ たべのこし アイアンテール きあいパンチ メロメロ キノコのほうし 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 286 キノガッサ せんせいのツメ きあいパンチ ヘドロばくだん キノコのほうし かげぶんしん 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 287 ナマケロ たべのこし あくび ひっかく アンコール カウンター 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 288 ヤルキモノ きあいのハチマキ きりさく カウンター アンコール さわぐ 0 0 0 0 0 0 さみしがり 255 255 0 0 0 0 288 ヤルキモノ カムラのみ ブレイククロー きしかいせい こらえる シャドーボール 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 289 ケッキング ピントレンズ あくび ビルドアップ いばる つばめがえし 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 289 ケッキング たべのこし メガトンキック シャドーボール あくび ドわすれ 0 0 0 0 0 0 いじっぱり 0 0 255 0 255 0 289 ケッキング こだわりハチマキ じしん シャドーボール つばめがえし かわらわり 0 0 0 0 0 0 いじっぱり 0 0 255 0 255 0 289 ケッキング ラムのみ 10まんボルト かえんほうしゃ れいとうビーム あくび 0 0 0 0 0 0 ひかえめ 0 0 0 255 255 0 290 ツチニン モモンのみ どろかけ あなをほる どくどく まもる 0 0 0 0 0 0 おだやか 255 255 0 0 0 0 291 テッカニン ヤタピのみ バトンタッチ つるぎのまい こらえる あなをほる 0 0 0 0 0 0 おっとり 170 0 170 0 170 0 291 テッカニン きあいのハチマキ きりさく シャドーボール つるぎのまい バトンタッチ 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 292 ヌケニン のんきのおこう シャドーボール あやしいひかり ぎんいろのかぜ おんねん 0 0 0 0 0 0 むじゃき 255 0 0 0 0 255 293 ゴニョニョ クラボのみ さわぐ いばる のしかかり きつけ 0 0 0 0 0 0 のんき 255 255 0 0 0 0 294 ドゴーム きあいのハチマキ ふみつけ とおぼえ おどろかす ちょうおんぱ 0 0 0 0 0 0 のんき 255 255 0 0 0 0 295 バクオング カゴのみ ハイパーボイス シャドーボール ねごと ねむる 0 0 0 0 0 0 わんぱく 255 255 0 0 0 0 295 バクオング きあいのハチマキ ソーラービーム にほんばれ じしん カウンター 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 295 バクオング しろいハーブ オーバーヒート れいとうビーム かみなりパンチ じんつうりき 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 295 バクオング しろいハーブ メガトンキック じしん シャドーボール オーバーヒート 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 296 マクノシタ ピントレンズ ねこだまし ちきゅうなげ みきり ふきとばし 0 0 0 0 0 0 すなお 255 255 0 0 0 0 297 ハリテヤマ きあいのハチマキ クロスチョップ いわなだれ カウンター ねこだまし 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 297 ハリテヤマ せんせいのツメ クロスチョップ ほのおのパンチ れいとうパンチ かみなりパンチ 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 297 ハリテヤマ せんせいのツメ クロスチョップ じしん いわなだれ からげんき 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 297 ハリテヤマ ピントレンズ クロスチョップ じしん いわなだれ ねこだまし 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 298 ルリリ クラボのみ みずのはどう メロメロ うたう あまえる 0 0 0 0 0 0 うっかりや 255 0 0 255 0 0 299 ノズパス かたいいし いわなだれ でんげきは でんじは すなあらし 0 0 0 0 0 0 なまいき 255 0 0 0 255 0 300 エネコ ひかりのこな うたう メロメロ あまえる おうふくビンタ 0 0 0 0 0 0 すなお 255 255 0 0 0 0 301 エネコロロ オボンのみ ひみつのちから だましうち かげぶんしん いやしのすず 0 0 0 0 0 0 さみしがり 255 255 0 0 0 0 301 エネコロロ せんせいのツメ うそなき うたう 10まんボルト れいとうビーム 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 302 ヤミラミ くろいメガネ だましうち あやしいひかり はたきおとす ねこだまし 0 0 0 0 0 0 さみしがり 255 255 0 0 0 0 302 ヤミラミ ラムのみ シャドーボール だましうち あやしいひかり じこさいせい 0 0 0 0 0 0 きまぐれ 170 170 0 170 0 0 303 クチート ひかりのこな かみくだく うそなき てっぺき バトンタッチ 0 0 0 0 0 0 すなお 255 0 0 255 0 0 304 ココドラ キーのみ メタルクロー つばめがえし きんぞくおん ほえる 0 0 0 0 0 0 すなお 255 255 0 0 0 0 305 コドラ メタルコート メタルクロー がんせきふうじ てっぺき まもる 0 0 0 0 0 0 なまいき 255 0 0 0 255 0 305 コドラ オボンのみ じしん アイアンテール ほえる まもる 0 0 0 0 0 0 なまいき 255 0 0 0 255 0 306 ボスゴドラ せんせいのツメ アイアンテール じしん つばめがえし ほえる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 306 ボスゴドラ ピントレンズ きあいパンチ じしん いわなだれ でんじは 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 306 ボスゴドラ ひかりのこな なみのり かみなり だいもんじ ふぶき 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 306 ボスゴドラ せんせいのツメ すてみタックル じしん いわなだれ つばめがえし 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 307 アサナン メンタルハーブ とびひざげり ヨガのポーズ いばる じこあんじ 0 0 0 0 0 0 やんちゃ 255 255 0 0 0 0 308 チャーレム きあいのハチマキ サイコキネシス とびひざげり めいそう バトンタッチ 0 0 0 0 0 0 すなお 0 255 0 0 0 255 308 チャーレム カムラのみ きしかいせい こらえる サイコキネシス ねこだまし 0 0 0 0 0 0 がんばりや 0 255 0 0 0 255 308 チャーレム ピントレンズ ばくれつパンチ かみなりパンチ れいとうパンチ ほのおのパンチ 0 0 0 0 0 0 がんばりや 0 0 0 255 0 255 308 チャーレム ラムのみ メガトンキック サイコキネシス シャドーボール いわなだれ 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 309 ラクライ クラボのみ スパーク でんじは ほえる でんこうせっか 0 0 0 0 0 0 すなお 255 0 0 0 0 255 310 ライボルト じしゃく 10まんボルト フラッシュ でんこうせっか ほえる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 310 ライボルト ヤタピのみ かみなり あまごい かみくだく ほえる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 310 ライボルト ラムのみ 10まんボルト アイアンテール でんじは ほえる 0 0 0 0 0 0 きまぐれ 0 0 0 255 0 255 310 ライボルト ラムのみ 10まんボルト かみくだく でんじは ほえる 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 311 プラスル ヤタピのみ スパーク うそなき でんこうせっか てだすけ 0 0 0 0 0 0 すなお 255 0 255 0 0 0 311 プラスル ヤタピのみ 10まんボルト でんじは ちきゅうなげ ねがいごと 0 0 0 0 0 0 すなお 0 0 0 255 0 255 312 マイナン カムラのみ スパーク あまえる アンコール てだすけ 0 0 0 0 0 0 すなお 255 0 255 0 0 0 312 マイナン カムラのみ 10まんボルト メロメロ あまえる ねがいごと 0 0 0 0 0 0 すなお 0 0 0 255 0 255 313 バルビート チイラのみ ぎんいろのかぜ あやしいひかり でんこうせっか てだすけ 0 0 0 0 0 0 きまぐれ 0 255 0 0 0 255 313 バルビート ヤタピのみ シグナルビーム 10まんボルト れいとうパンチ ほたるび 0 0 0 0 0 0 きまぐれ 0 0 0 255 0 255 314 イルミーゼ チイラのみ ぎんいろのかぜ ねがいごと でんこうせっか てだすけ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 314 イルミーゼ ヤタピのみ ぎんいろのかぜ 10まんボルト れいとうパンチ ギガドレイン 0 0 0 0 0 0 きまぐれ 0 0 0 255 0 255 315 ロゼリア モモンのみ マジカルリーフ どくどく くさぶえ わたほうし 0 0 0 0 0 0 すなお 255 0 255 0 0 0 315 ロゼリア せんせいのツメ ギガドレイン ヘドロばくだん くさぶえ こうごうせい 0 0 0 0 0 0 すなお 255 0 255 0 0 0 316 ゴクリン のんきのおこう どくどく あくび いたみわけ メロメロ 0 0 0 0 0 0 まじめ 170 0 170 0 170 0 317 マルノーム のんきのおこう たくわえる のみこむ はきだす ヘドロこうげき 0 0 0 0 0 0 きまぐれ 0 0 255 0 255 0 317 マルノーム たべのこし ヘドロばくだん シャドーボール のしかかり カウンター 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 318 キバニア かいがらのすず かみつく いやなおと こわいかお いばる 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 319 サメハダー ピントレンズ きりさく かみつく みずのはどう こわいかお 0 0 0 0 0 0 いじっぱり 0 255 0 0 255 0 319 サメハダー ピントレンズ すてみタックル かみくだく じしん なみのり 0 0 0 0 0 0 きまぐれ 0 170 0 170 0 170 320 ホエルコ のんきのおこう うずしお ほえる まるくなる ころがる 0 0 0 0 0 0 すなお 0 0 255 0 255 0 320 ホエルコ カゴのみ しおふき じしん のしかかり ねむる 0 0 0 0 0 0 すなお 0 0 255 0 255 0 321 ホエルオー かいがらのすず なみのり こごえるかぜ のしかかり ほえる 0 0 0 0 0 0 なまいき 170 0 170 0 170 0 321 ホエルオー カゴのみ すてみタックル ねむる のろい ドわすれ 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 321 ホエルオー カゴのみ ハイドロポンプ じわれ かげぶんしん ねむる 0 0 0 0 0 0 ひかえめ 170 0 170 0 170 0 321 ホエルオー せんせいのツメ なみのり れいとうビーム じしん じわれ 0 0 0 0 0 0 がんばりや 170 0 170 0 170 0 322 ドンメル のんきのおこう ひのこ マグニチュード がんせきふうじ すなあらし 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 323 バクーダ きあいのハチマキ マグニチュード まもる すなあらし いわなだれ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 323 バクーダ のんきのおこう じしん ふんか のしかかり こわいかお 0 0 0 0 0 0 きまぐれ 0 255 0 255 0 0 324 コータス オボンのみ ひのこ ほのおのうず えんまく ドわすれ 0 0 0 0 0 0 のんき 255 0 0 0 255 0 324 コータス しろいハーブ オーバーヒート のしかかり えんまく まもる 0 0 0 0 0 0 なまいき 255 0 0 0 255 0 325 バネブー オボンのみ サイコウェーブ とびはねる マジックコート あやしいひかり 0 0 0 0 0 0 のんき 255 0 0 255 0 0 326 ブーピッグ ヤタピのみ サイケこうせん あやしいひかり みらいよち マジックコート 0 0 0 0 0 0 のんき 255 0 0 255 0 0 326 ブーピッグ ラムのみ サイコキネシス れいとうパンチ かみなりパンチ ほのおのパンチ 0 0 0 0 0 0 ひかえめ 0 0 255 255 0 0 327 パッチール オボンのみ ピヨピヨパンチ フラフラダンス サイケこうせん だましうち 0 0 0 0 0 0 のんき 255 255 0 0 0 0 328 ナックラー のんきのおこう どくどく あなをほる すなあらし すなかけ 0 0 0 0 0 0 まじめ 255 255 0 0 0 0 329 ビブラーバ クラボのみ りゅうのいぶき あなをほる いやなおと がんせきふうじ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 330 フライゴン ひかりのこな じしん はがねのつばさ だましうち からげんき 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 330 フライゴン ひかりのこな ソーラービーム だいもんじ かみくだく にほんばれ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 330 フライゴン ピントレンズ じしん ドラゴンクロー かえんほうしゃ ギガドレイン 0 0 0 0 0 0 がんばりや 0 170 0 170 0 170 330 フライゴン ピントレンズ じしん ドラゴンクロー すてみタックル かみくだく 0 0 0 0 0 0 がんばりや 0 170 0 170 0 170 331 サボネア オボンのみ ニードルアーム だましうち わたほうし すなかけ 0 0 0 0 0 0 きまぐれ 255 255 0 0 0 0 332 ノクタス ピントレンズ ニードルアーム だましうち ようかいえき メガトンパンチ 0 0 0 0 0 0 せっかち 255 0 0 0 0 255 332 ノクタス キーのみ メガトンキック フラフラダンス だましうち すなあらし 0 0 0 0 0 0 がんばりや 0 0 255 0 255 0 333 チルット メンタルハーブ とっしん ゆめくい うたう メロメロ 0 0 0 0 0 0 さみしがり 255 0 0 255 0 0 334 チルタリス クラボのみ ドラゴンクロー つばめがえし リフレッシュ のしかかり 0 0 0 0 0 0 すなお 255 255 0 0 0 0 334 チルタリス たべのこし ほろびのうた りゅうのいぶき おいうち メロメロ 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 334 チルタリス ラムのみ うたう りゅうのまい じしん つばめがえし 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 334 チルタリス かいがらのすず ドラゴンクロー じしん かえんほうしゃ れいとうビーム 0 0 0 0 0 0 すなお 0 255 0 255 0 0 335 ザングース キーのみ きりさく にどげり ほえる でんこうせっか 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 335 ザングース ピントレンズ ブレイククロー シャドーボール かわらわり つばめがえし 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 336 ハブネーク ピントレンズ ポイズンテール かみつく へびにらみ いやなおと 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 336 ハブネーク せんせいのツメ ヘドロばくだん じしん かみくだく ギガドレイン 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 337 ルナトーン オボンのみ ねんりき コスモパワー ひかりのかべ すなあらし 0 0 0 0 0 0 れいせい 255 0 255 0 0 0 337 ルナトーン のんきのおこう サイコキネシス れいとうビーム コスモパワー めいそう 0 0 0 0 0 0 れいせい 255 0 255 0 0 0 338 ソルロック オボンのみ ねんりき ほのおのうず ひかりのかべ すなあらし 0 0 0 0 0 0 れいせい 255 0 0 0 255 0 338 ソルロック しろいハーブ じしん いわなだれ コスモパワー オーバーヒート 0 0 0 0 0 0 がんばりや 255 0 0 0 255 0 339 ドジョッチ きあいのハチマキ マグニチュード みずのはどう スパーク みらいよち 0 0 0 0 0 0 てれや 0 255 0 255 0 0 340 ナマズン カゴのみ じしん いわなだれ ドわすれ ねむる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 340 ナマズン かいがらのすず なみのり じしん スパーク みらいよち 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 340 ナマズン カゴのみ ねごと ねむる なみのり じわれ 0 0 0 0 0 0 がんばりや 0 0 255 0 255 0 340 ナマズン せんせいのツメ じわれ なみのり じしん れいとうビーム 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 341 ヘイガニ しんぴのしずく クラブハンマー みずのはどう どろかけ まもる 0 0 0 0 0 0 ゆうかん 255 0 0 255 0 0 342 シザリガー キーのみ バブルこうせん はさむ はたきおとす まもる 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 342 シザリガー せんせいのツメ ハサミギロチン やつあたり げんしのちから つばめがえし 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 343 ヤジロン キーのみ サイケこうせん げんしのちから ひかりのかべ どろかけ 0 0 0 0 0 0 やんちゃ 0 255 0 255 0 0 344 ネンドール ラムのみ じしん いわなだれ いばる じこあんじ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 344 ネンドール たべのこし サイコキネシス じしん かげぶんしん コスモパワー 0 0 0 0 0 0 おだやか 170 0 170 0 170 0 344 ネンドール かいがらのすず サイコキネシス れいとうビーム ソーラービーム にほんばれ 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 344 ネンドール きあいのハチマキ サイコキネシス じしん シャドーボール だいばくはつ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 345 リリーラ のんきのおこう げんしのちから ようかいえき ねをはる あやしいひかり 0 0 0 0 0 0 すなお 255 255 0 0 0 0 346 ユレイドル たべのこし ギガドレイン いわなだれ バリアー あやしいひかり 0 0 0 0 0 0 のんき 170 0 170 0 170 0 346 ユレイドル オボンのみ じしん げんしのちから いばる じこあんじ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 346 ユレイドル たべのこし みがわり ソーラービーム にほんばれ じこさいせい 0 0 0 0 0 0 ひかえめ 0 0 170 170 170 0 346 ユレイドル たべのこし どくどく ねをはる ミラーコート ギガドレイン 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 347 アノプス ピントレンズ メタルクロー れんぞくぎり げんしのちから みずでっぽう 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 348 アーマルド ピントレンズ きりさく つばめがえし げんしのちから まもる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 348 アーマルド せんせいのツメ アイアンテール げんしのちから かわらわり はたきおとす 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 348 アーマルド せんせいのツメ じしん いわなだれ かわらわり つるぎのまい 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 348 アーマルド こだわりハチマキ すてみタックル じしん つばめがえし いわなだれ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 349 ヒンバス きあいのハチマキ じたばた ミラーコート 0 0 0 0 0 0 さみしがり 255 255 0 0 0 0 350 ミロカロス ラムのみ ハイドロポンプ こごえるかぜ じこさいせい ミラーコート 0 0 0 0 0 0 ひかえめ 170 0 170 170 0 0 350 ミロカロス きあいのハチマキ なみのり れいとうビーム しんぴのまもり ミラーコート 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 350 ミロカロス たべのこし なみのり ふぶき メロメロ じこさいせい 0 0 0 0 0 0 ずぶとい 170 0 170 0 170 0 350 ミロカロス たべのこし なみのり れいとうビーム じこさいせい ミラーコート 0 0 0 0 0 0 ひかえめ 0 0 170 170 170 0 351 ポワルン ヤタピのみ ひのこ みずのはどう でんげきは こごえるかぜ 0 0 0 0 0 0 せっかち 255 0 0 255 0 0 351 ポワルン のんきのおこう 10まんボルト かえんほうしゃ れいとうビーム みずのはどう 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 352 カクレオン きあいのハチマキ ひみつのちから サイケこうせん マジックコート ちきゅうなげ 0 0 0 0 0 0 むじゃき 170 170 170 0 0 0 352 カクレオン こだわりハチマキ トリック かわらわり シャドーボール スキルスワップ 0 0 0 0 0 0 すなお 255 0 255 0 0 0 353 カゲボウズ チーゴのみ おにび ナイトヘッド おんねん はたきおとす 0 0 0 0 0 0 うっかりや 255 255 0 0 0 0 354 ジュペッタ チーゴのみ ナイトヘッド おにび うらみ はたきおとす 0 0 0 0 0 0 なまいき 170 0 170 0 170 0 354 ジュペッタ のんきのおこう シャドーボール やつあたり いやなおと おにび 0 0 0 0 0 0 いじっぱり 0 0 255 0 255 0 355 ヨマワル キーのみ スキルスワップ ナイトヘッド かなしばり あやしいひかり 0 0 0 0 0 0 きまぐれ 255 0 0 0 0 255 356 サマヨール たべのこし おにび ちきゅうなげ いたみわけ あやしいひかり 0 0 0 0 0 0 わんぱく 170 0 170 0 170 0 356 サマヨール たべのこし どくどく あやしいひかり かげぶんしん まもる 0 0 0 0 0 0 わんぱく 170 0 170 0 170 0 356 サマヨール たべのこし じこあんじ いばる シャドーボール じしん 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 356 サマヨール カゴのみ すてみタックル シャドーボール のろい ねむる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 357 トロピウス オボンのみ マジカルリーフ ふきとばし つばめがえし はがねのつばさ 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 357 トロピウス きあいのハチマキ ソーラービーム にほんばれ こうごうせい のしかかり 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 358 チリーン まがったスプーン サイコウェーブ とっしん いやしのすず しんぴのまもり 0 0 0 0 0 0 なまいき 255 0 0 255 0 0 358 チリーン まがったスプーン サイコキネシス さいみんじゅつ ゆめくい いやしのすず 0 0 0 0 0 0 れいせい 170 0 170 0 170 0 359 アブソル ひかりのこな かみつく かまいたち みらいよち でんこうせっか 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 359 アブソル こだわりハチマキ すてみタックル シャドーボール つばめがえし アイアンテール 0 0 0 0 0 0 いじっぱり 0 255 0 0 0 255 360 ソーナノ のんきのおこう アンコール カウンター ミラーコート あまえる 0 0 0 0 0 0 ようき 0 0 255 0 255 0 361 ユキワラシ キーのみ こごえるかぜ ずつき にらみつける かみつく 0 0 0 0 0 0 ゆうかん 255 255 0 0 0 0 362 オニゴーリ ヤタピのみ れいとうビーム かみくだく あられ まもる 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 362 オニゴーリ カムラのみ だいばくはつ こらえる のしかかり こごえるかぜ 0 0 0 0 0 0 きまぐれ 0 255 0 0 0 255 362 オニゴーリ かいがらのすず ふぶき じしん すてみタックル シャドーボール 0 0 0 0 0 0 がんばりや 0 170 0 170 0 170 362 オニゴーリ たべのこし れいとうビーム じしん かみくだく シャドーボール 0 0 0 0 0 0 がんばりや 170 170 0 170 0 0 363 タマザラシ とけないこおり アイスボール みずのはどう あられ どろかけ 0 0 0 0 0 0 すなお 255 0 0 255 0 0 364 トドグラー キーのみ アイスボール あられ いびき ねむる 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 364 トドグラー オボンのみ れいとうビーム なみのり のしかかり あられ 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 365 トドゼルガ たべのこし ふぶき あられ あくび まもる 0 0 0 0 0 0 れいせい 170 0 170 0 170 0 365 トドゼルガ きあいのハチマキ じしん れいとうビーム のろい かげぶんしん 0 0 0 0 0 0 きまぐれ 170 0 170 0 170 0 365 トドゼルガ せんせいのツメ ぜったいれいど じわれ なみのり メロメロ 0 0 0 0 0 0 がんばりや 170 0 170 0 170 0 365 トドゼルガ ひかりのこな なみのり れいとうビーム じしん ぜったいれいど 0 0 0 0 0 0 れいせい 0 255 0 255 0 0 366 パールル しんかいのウロコ ダイビング どくどく てっぺき かげぶんしん 0 0 0 0 0 0 すなお 170 0 170 0 170 0 367 ハンテール キーのみ うずしお こわいかお どろかけ かみつく 0 0 0 0 0 0 れいせい 255 255 0 0 0 0 367 ハンテール かいがらのすず なみのり あまごい かみくだく のしかかり 0 0 0 0 0 0 れいせい 255 0 0 0 255 0 368 サクラビス キーのみ うずしお ドわすれ こごえるかぜ ねんりき 0 0 0 0 0 0 ゆうかん 255 0 0 255 0 0 368 サクラビス かいがらのすず なみのり あまごい サイコキネシス のしかかり 0 0 0 0 0 0 れいせい 255 0 0 0 255 0 369 ジーランス チイラのみ げんしのちから みずのはどう かたくなる ドわすれ 0 0 0 0 0 0 なまいき 170 0 0 170 170 0 369 ジーランス カゴのみ じしん いわなだれ ドわすれ ねむる 0 0 0 0 0 0 なまいき 255 0 0 0 255 0 370 ラブカス せんせいのツメ てんしのキッス メロメロ ダイビング あまごい 0 0 0 0 0 0 のんき 255 0 0 255 0 0 371 タツベイ チイラのみ りゅうのいぶき ずつき かわらわり こわいかお 0 0 0 0 0 0 やんちゃ 255 255 0 0 0 0 372 コモルー クラボのみ ずつき りゅうのいぶき まもる こわいかお 0 0 0 0 0 0 がんばりや 170 170 0 0 170 0 372 コモルー きあいのハチマキ やつあたり りゅうのまい かみくだく こわいかお 0 0 0 0 0 0 がんばりや 255 0 0 0 255 0 373 ボーマンダ おうじゃのしるし ドラゴンクロー つばめがえし ずつき いわなだれ 0 0 0 0 0 0 がんばりや 0 255 0 0 0 255 373 ボーマンダ たべのこし すてみタックル かみくだく いばる まもる 0 0 0 0 0 0 がんばりや 0 170 0 170 0 170 373 ボーマンダ カムラのみ すてみタックル じしん かみくだく こらえる 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 373 ボーマンダ ひかりのこな すてみタックル じしん つばめがえし りゅうのまい 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 373 ボーマンダ ひかりのこな からげんき じしん いわなだれ りゅうのまい 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 373 ボーマンダ ラムのみ ずつき つばめがえし かみくだく りゅうのまい 0 0 0 0 0 0 がんばりや 170 0 170 0 170 0 373 ボーマンダ ラムのみ かえんほうしゃ ドラゴンクロー かみくだく かわらわり 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 373 ボーマンダ たべのこし かえんほうしゃ ドラゴンクロー かみくだく メロメロ 0 0 0 0 0 0 ひかえめ 0 0 0 255 0 255 374 ダンバル こだわりハチマキ とっしん 0 0 0 0 0 0 がんばりや 255 255 0 0 0 0 375 メタング きあいのハチマキ メタルクロー ねんりき おいうち こわいかお 0 0 0 0 0 0 がんばりや 0 255 0 0 255 0 375 メタング きあいのハチマキ コメットパンチ サイコキネシス のしかかり こわいかお 0 0 0 0 0 0 きまぐれ 255 0 0 255 0 0 376 メタグロス たべのこし コメットパンチ つばめがえし からげんき ひかりのかべ 0 0 0 0 0 0 いじっぱり 0 170 0 0 170 170 376 メタグロス ラムのみ じしん コメットパンチ じこあんじ いばる 0 0 0 0 0 0 いじっぱり 170 0 0 0 170 170 376 メタグロス カゴのみ じしん コメットパンチ かげぶんしん ねむる 0 0 0 0 0 0 いじっぱり 170 170 0 0 0 170 376 メタグロス せんせいのツメ コメットパンチ サイコキネシス じしん シャドーボール 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 376 メタグロス せんせいのツメ だいばくはつ じしん いわなだれ かわらわり 0 0 0 0 0 0 ようき 170 170 0 0 0 170 376 メタグロス ひかりのこな コメットパンチ サイコキネシス れいとうパンチ かみなりパンチ 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 376 メタグロス かいがらのすず じしん シャドーボール れいとうパンチ かみなりパンチ 0 0 0 0 0 0 がんばりや 0 255 0 255 0 0 376 メタグロス せんせいのツメ コメットパンチ じしん かわらわり だいばくはつ 0 0 0 0 0 0 いじっぱり 170 170 0 0 0 170 377 レジロック しろいハーブ ばかぢから じしん いわなだれ だいばくはつ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 377 レジロック せんせいのツメ じしん いわなだれ カウンター だいばくはつ 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 377 レジロック カゴのみ いわなだれ じしん のろい ねむる 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 377 レジロック たべのこし いわなだれ かわらわり かげぶんしん でんじは 0 0 0 0 0 0 しんちょう 170 170 0 0 170 0 377 レジロック せんせいのツメ はかいこうせん きあいパンチ いわなだれ かげぶんしん 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 377 レジロック ひかりのこな いばる じこあんじ いわなだれ だいばくはつ 0 0 0 0 0 0 いじっぱり 255 0 0 0 255 0 378 レジアイス カゴのみ れいとうビーム 10まんボルト ドわすれ ねむる 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 378 レジアイス ひかりのこな かみなり あまごい ふぶき かわらわり 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 378 レジアイス ラムのみ れいとうビーム 10まんボルト でんじは だいばくはつ 0 0 0 0 0 0 れいせい 255 0 0 255 0 0 378 レジアイス たべのこし れいとうビーム あられ かげぶんしん でんじは 0 0 0 0 0 0 ずぶとい 255 0 255 0 0 0 378 レジアイス たべのこし じしん れいとうビーム のろい カウンター 0 0 0 0 0 0 ゆうかん 170 0 170 170 0 0 378 レジアイス カゴのみ れいとうビーム 10まんボルト ねごと ねむる 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 379 レジスチル カゴのみ メタルクロー のろい ドわすれ ねむる 0 0 0 0 0 0 いじっぱり 255 255 0 0 0 0 379 レジスチル ひかりのこな 10まんボルト れいとうパンチ じしん つばめがえし 0 0 0 0 0 0 れいせい 170 170 0 170 0 0 379 レジスチル せんせいのツメ げんしのちから ドわすれ カウンター だいばくはつ 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 379 レジスチル たべのこし げんしのちから じしん かげぶんしん でんじは 0 0 0 0 0 0 わんぱく 170 0 170 0 170 0 379 レジスチル たべのこし きあいパンチ みがわり どくどく かげぶんしん 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 379 レジスチル しろいハーブ ばかぢから つばめがえし いばる じこあんじ 0 0 0 0 0 0 いじっぱり 170 0 170 0 170 0 380 ラティアス ラムのみ サイコキネシス 10まんボルト れいとうビーム ドラゴンクロー 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 380 ラティアス せんせいのツメ サイコキネシス 10まんボルト れいとうビーム じしん 0 0 0 0 0 0 すなお 0 255 0 255 0 0 380 ラティアス きあいのハチマキ ドラゴンクロー 10まんボルト れいとうビーム じしん 0 0 0 0 0 0 すなお 0 255 0 255 0 0 380 ラティアス たべのこし ミストボール シャドーボール あまえる リフレクター 0 0 0 0 0 0 すなお 170 170 0 170 0 0 380 ラティアス ひかりのこな ドラゴンクロー でんじは めいそう じこさいせい 0 0 0 0 0 0 ひかえめ 170 0 170 0 170 0 380 ラティアス かいがらのすず ミストボール ドラゴンクロー メロメロ でんじは 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 380 ラティアス たべのこし じしん シャドーボール いばる じこあんじ 0 0 0 0 0 0 いじっぱり 255 0 255 0 0 0 380 ラティアス おうじゃのしるし サイコキネシス シャドーボール じしん つばめがえし 0 0 0 0 0 0 すなお 0 170 0 170 0 170 381 ラティオス ラムのみ サイコキネシス 10まんボルト れいとうビーム ドラゴンクロー 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 381 ラティオス せんせいのツメ サイコキネシス 10まんボルト れいとうビーム じしん 0 0 0 0 0 0 すなお 0 255 0 255 0 0 381 ラティオス きあいのハチマキ ドラゴンクロー 10まんボルト れいとうビーム じしん 0 0 0 0 0 0 すなお 0 255 0 255 0 0 381 ラティオス ラムのみ ラスターパージ 10まんボルト れいとうビーム ドラゴンクロー 0 0 0 0 0 0 ひかえめ 255 0 0 255 0 0 381 ラティオス ひかりのこな ドラゴンクロー でんじは めいそう じこさいせい 0 0 0 0 0 0 ひかえめ 170 0 170 0 170 0 381 ラティオス かいがらのすず ラスターパージ シャドーボール ドラゴンクロー でんじは 0 0 0 0 0 0 すなお 0 255 0 255 0 0 381 ラティオス ひかりのこな じしん シャドーボール りゅうのまい じこさいせい 0 0 0 0 0 0 いじっぱり 255 0 255 0 0 0 381 ラティオス おうじゃのしるし サイコキネシス シャドーボール じしん つばめがえし 0 0 0 0 0 0 すなお 0 170 0 170 0 170 上記の表を見ながら ツール を用いると、効率的な努力値配分がわかると思います。（ex.ラティオスを最速にすると実数値178となるが、上記の表より172~180間の素早さをとるポケモンがいないため、173とすれば十分である。） ダメージ計算ツール 上記の表から相手の、以下の表から自分のポケモンをそれぞれ選んでください。（※色のついている部分が選択されていれば大丈夫です。） 自分のポケモン 自分のポケモン ポケモン とくせい ---- 性別 -- 性格 さみしがり (A↑ B↓) いじっぱり (A↑ C↓) やんちゃ (A↑ D↓) ゆうかん (A↑ S↓) ずぶとい (B↑ A↓) わんぱく (B↑ C↓) のうてんき (B↑ D↓) のんき (B↑ S↓) ひかえめ (C↑ A↓) おっとり (C↑ B↓) うっかりや (C↑ D↓) れいせい (C↑ S↓) おだやか (D↑ A↓) おとなしい (D↑ B↓) しんちょう (D↑ C↓) なまいき (D↑ S↓) おくびょう (S↑ A↓) せっかち (S↑ B↓) ようき (S↑ C↓) むじゃき (S↑ D↓) てれや がんばりや すなお きまぐれ まじめ H A B C D S 種族値 個体値 努力値 実数値","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-27.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-27.html"},{"title":"JS.26 モーダル（ポップアップ）の作成","text":"画像や広告などが表示され、クリックや閉じるなどの操作をしないとページが閲覧できないような表現を モーダル と呼ぶ。今回は、これをライブラリを使わない素のJavascriptによるDOM操作で作った。 作ったもの HTML CSS JavaScript Show Popup 以下のように、id= ID の div タグの中にポップアップ時に表示されるコンテンツを入れ、id= ID + \"-show\" の要素をクリックすることでこれを表示できるようにした。 < div class = \"popup\" id = \"js-popup\" > Any thing You Want !! </ div > < button id = \"js-popup-show\" > Show Popup </ button > コード js window . onload = function (){ var popuplists = document . getElementsByClassName ( \"popup\" ); for ( let i = 0 ; i < popuplists . length ; i ++ ){ let e = popuplists [ i ]; let id = e . id ; let e_s = document . getElementById ( id + \"-show\" ) if ( e_s != null ){ e . innerHTML = `<div class=\"popup-inner\"><div class=\"close-btn\"><i class=\"fas fa-times\"></i></div>` + e . innerHTML + `</div><div class=\"black-background\"></div>` addPopupEvent ( id ); // ページ読み込み時に表示させるかどうか。 // document.getElementById(id + \"-show\") } } function addPopupEvent ( id ){ var t = document . getElementById ( id ); function togglePopUp ( e ) { if ( e ){ e . addEventListener ( 'click' , function () { t . classList . toggle ( 'is-show' ); }); } } togglePopUp ( t . querySelector ( \".black-background\" )); togglePopUp ( t . querySelector ( \".close-btn\" )); togglePopUp ( document . getElementById ( id + \"-show\" )); } }; css . popup { position : fixed ; left : 0 ; top : 0 ; width : 100 % ; height : 100 % ; z-index : 9999 ; opacity : 0 ; visibility : hidden ; transition : .6 s ; } . popup . is-show { opacity : 1 ; visibility : visible ; } . popup-inner { position : absolute ; left : 50 % ; top : 50 % ; transform : translate ( -50 % , -50 % ); max-width : 80 % ; max-height : 80 % ; overflow : auto ; padding : 50 px ; background-color : #fff ; z-index : 2 ; } . popup-inner img { width : 100 % ; } . close-btn { position : absolute ; right : 0 ; top : 0 ; width : 50 px ; height : 50 px ; line-height : 50 px ; text-align : center ; cursor : pointer ; } . close-btn i { font-size : 40 px ; color : #333 ; border : 3 px solid ; border-radius : 50 % ; width : 40 px ; } . black-background { position : absolute ; left : 0 ; top : 0 ; width : 100 % ; height : 100 % ; background-color : rgba ( 0 , 0 , 0 , .8 ); z-index : 1 ; cursor : pointer ; }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-26.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-26.html"},{"title":"JS.25 ポケモンエメラルドでフロンティア マスターを目指す（その１）","text":"フロンティア マスターへの道 〜厳選効率化〜 個人的にポケモンが非常に好きなのですが、実際のゲームはルビー・エメラルドしか持っておらず、そのためか定期的に \"ポケモンエメラルドでバトルフロンティア完全制覇\" をしたくなります。 しかし、過去作の情報は時を経るごとに埋もれてしまい、新作のデータによって書き換えられてしまっています。（めざパは廃止され、新タイプの追加、新技の追加など…。タイプごとに物理/特殊が決まっているエメラルドにおいて、現在の情報は当てになりません。）そこで、様々なツールを自作しておくことで、いつでもエメラルドの世界に戻ってこられる環境を整えました。 ※ なので、今回の記事は完全に自己満ツール群です🙇‍♂️ 基本データ ポケモン 001.フシギダネ 002.フシギソウ 003.フシギバナ 004.ヒトカゲ 005.リザード 006.リザードン 007.ゼニガメ 008.カメール 009.カメックス 010.キャタピー 011.トランセル 012.バタフリー 013.ビードル 014.コクーン 015.スピアー 016.ポッポ 017.ピジョン 018.ピジョット 019.コラッタ 020.ラッタ 021.オニスズメ 022.オニドリル 023.アーボ 024.アーボック 025.ピカチュウ 026.ライチュウ 027.サンド 028.サンドパン 029.ニドラン♀ 030.ニドリーナ 031.ニドクイン 032.ニドラン♂ 033.ニドリーノ 034.ニドキング 035.ピッピ 036.ピクシー 037.ロコン 038.キュウコン 039.プリン 040.プクリン 041.ズバット 042.ゴルバット 043.ナゾノクサ 044.クサイハナ 045.ラフレシア 046.パラス 047.パラセクト 048.コンパン 049.モルフォン 050.ディグダ 051.ダグトリオ 052.ニャース 053.ペルシアン 054.コダック 055.ゴルダック 056.マンキー 057.オコリザル 058.ガーディ 059.ウインディ 060.ニョロモ 061.ニョロゾ 062.ニョロボン 063.ケーシィ 064.ユンゲラー 065.フーディン 066.ワンリキー 067.ゴーリキー 068.カイリキー 069.マダツボミ 070.ウツドン 071.ウツボット 072.メノクラゲ 073.ドククラゲ 074.イシツブテ 075.ゴローン 076.ゴローニャ 077.ポニータ 078.ギャロップ 079.ヤドン 080.ヤドラン 081.コイル 082.レアコイル 083.カモネギ 084.ドードー 085.ドードリオ 086.パウワウ 087.ジュゴン 088.ベトベター 089.ベトベトン 090.シェルダー 091.パルシェン 092.ゴース 093.ゴースト 094.ゲンガー 095.イワーク 096.スリープ 097.スリーパー 098.クラブ 099.キングラー 100.ビリリダマ 101.マルマイン 102.タマタマ 103.ナッシー 104.カラカラ 105.ガラガラ 106.サワムラー 107.エビワラー 108.ベロリンガ 109.ドガース 110.マタドガス 111.サイホーン 112.サイドン 113.ラッキー 114.モンジャラ 115.ガルーラ 116.タッツー 117.シードラ 118.トサキント 119.アズマオウ 120.ヒトデマン 121.スターミー 122.バリヤード 123.ストライク 124.ルージュラ 125.エレブー 126.ブーバー 127.カイロス 128.ケンタロス 129.コイキング 130.ギャラドス 131.ラプラス 132.メタモン 133.イーブイ 134.シャワーズ 135.サンダース 136.ブースター 137.ポリゴン 138.オムナイト 139.オムスター 140.カブト 141.カブトプス 142.プテラ 143.カビゴン 144.フリーザー 145.サンダー 146.ファイヤー 147.ミニリュウ 148.ハクリュー 149.カイリュー 150.ミュウツー 151.ミュウ 152.チコリータ 153.ベイリーフ 154.メガニウム 155.ヒノアラシ 156.マグマラシ 157.バクフーン 158.ワニノコ 159.アリゲイツ 160.オーダイル 161.オタチ 162.オオタチ 163.ホーホー 164.ヨルノズク 165.レディバ 166.レディアン 167.イトマル 168.アリアドス 169.クロバット 170.チョンチー 171.ランターン 172.ピチュー 173.ピィ 174.ププリン 175.トゲピー 176.トゲチック 177.ネイティ 178.ネイティオ 179.メリープ 180.モココ 181.デンリュウ 182.キレイハナ 183.マリル 184.マリルリ 185.ウソッキー 186.ニョロトノ 187.ハネッコ 188.ポポッコ 189.ワタッコ 190.エイパム 191.ヒマナッツ 192.キマワリ 193.ヤンヤンマ 194.ウパー 195.ヌオー 196.エーフィ 197.ブラッキー 198.ヤミカラス 199.ヤドキング 200.ムウマ 201.アンノーン 202.ソーナンス 203.キリンリキ 204.クヌギダマ 205.フォレトス 206.ノコッチ 207.グライガー 208.ハガネール 209.ブルー 210.グランブル 211.ハリーセン 212.ハッサム 213.ツボツボ 214.ヘラクロス 215.ニューラ 216.ヒメグマ 217.リングマ 218.マグマッグ 219.マグカルゴ 220.ウリムー 221.イノムー 222.サニーゴ 223.テッポウオ 224.オクタン 225.デリバード 226.マンタイン 227.エアームド 228.デルビル 229.ヘルガー 230.キングドラ 231.ゴマゾウ 232.ドンファン 233.ポリゴン2 234.オドシシ 235.ドーブル 236.バルキー 237.カポエラー 238.ムチュール 239.エレキッド 240.ブビィ 241.ミルタンク 242.ハピナス 243.ライコウ 244.エンテイ 245.スイクン 246.ヨーギラス 247.サナギラス 248.バンギラス 249.ルギア 250.ホウオウ 251.セレビィ 252.キモリ 253.ジュプトル 254.ジュカイン 255.アチャモ 256.ワカシャモ 257.バシャーモ 258.ミズゴロウ 259.ヌマクロー 260.ラグラージ 261.ポチエナ 262.グラエナ 263.ジグザグマ 264.マッスグマ 265.ケムッソ 266.カラサリス 267.アゲハント 268.マユルド 269.ドクケイル 270.ハスボー 271.ハスブレロ 272.ルンパッパ 273.タネボー 274.コノハナ 275.ダーテング 276.スバメ 277.オオスバメ 278.キャモメ 279.ペリッパー 280.ラルトス 281.キルリア 282.サーナイト 283.アメタマ 284.アメモース 285.キノココ 286.キノガッサ 287.ナマケロ 288.ヤルキモノ 289.ケッキング 290.ツチニン 291.テッカニン 292.ヌケニン 293.ゴニョニョ 294.ドゴーム 295.バクオング 296.マクノシタ 297.ハリテヤマ 298.ルリリ 299.ノズパス 300.エネコ 301.エネコロロ 302.ヤミラミ 303.クチート 304.ココドラ 305.コドラ 306.ボスゴドラ 307.アサナン 308.チャーレム 309.ラクライ 310.ライボルト 311.プラスル 312.マイナン 313.バルビート 314.イルミーゼ 315.ロゼリア 316.ゴクリン 317.マルノーム 318.キバニア 319.サメハダー 320.ホエルコ 321.ホエルオー 322.ドンメル 323.バクーダ 324.コータス 325.バネブー 326.ブーピッグ 327.パッチール 328.ナックラー 329.ビブラーバ 330.フライゴン 331.サボネア 332.ノクタス 333.チルット 334.チルタリス 335.ザングース 336.ハブネーク 337.ルナトーン 338.ソルロック 339.ドジョッチ 340.ナマズン 341.ヘイガニ 342.シザリガー 343.ヤジロン 344.ネンドール 345.リリーラ 346.ユレイドル 347.アノプス 348.アーマルド 349.ヒンバス 350.ミロカロス 351.ポワルン 352.カクレオン 353.カゲボウズ 354.ジュペッタ 355.ヨマワル 356.サマヨール 357.トロピウス 358.チリーン 359.アブソル 360.ソーナノ 361.ユキワラシ 362.オニゴーリ 363.タマザラシ 364.トドグラー 365.トドゼルガ 366.パールル 367.ハンテール 368.サクラビス 369.ジーランス 370.ラブカス 371.タツベイ 372.コモルー 373.ボーマンダ 374.ダンバル 375.メタング 376.メタグロス 377.レジロック 378.レジアイス 379.レジスチル 380.ラティアス 381.ラティオス 382.カイオーガ 383.グラードン 384.レックウザ 385.ジラーチ 386.デオキシスＳ とくせい ---- 性別 -- 性格 さみしがり (A↑ B↓) いじっぱり (A↑ C↓) やんちゃ (A↑ D↓) ゆうかん (A↑ S↓) ずぶとい (B↑ A↓) わんぱく (B↑ C↓) のうてんき (B↑ D↓) のんき (B↑ S↓) ひかえめ (C↑ A↓) おっとり (C↑ B↓) うっかりや (C↑ D↓) れいせい (C↑ S↓) おだやか (D↑ A↓) おとなしい (D↑ B↓) しんちょう (D↑ C↓) なまいき (D↑ S↓) おくびょう (S↑ A↓) せっかち (S↑ B↓) ようき (S↑ C↓) むじゃき (S↑ D↓) てれや がんばりや すなお きまぐれ まじめ 能力値 Lv: H A B C D S 個体値 努力値 計算値 めざめるパワー（クリックするとチートシートがみれます） ： めざパ チートシート タイプ H 1 0 1 0 1 0 1 0 A 1 1 0 0 1 1 0 0 B 1 1 1 1 0 0 0 0 C D S 1 1 1 悪 竜 竜 竜 竜 氷 氷 氷 0 1 1 電 草 草 草 草 草 水 水 1 0 1 鋼 鋼 霊 霊 霊 霊 虫 虫 0 0 1 地 地 地 毒 毒 毒 毒 飛 1 1 0 氷 超 超 超 超 電 電 電 0 1 0 水 水 炎 炎 炎 炎 炎 鋼 1 0 0 虫 虫 虫 岩 岩 岩 岩 地 0 0 0 飛 飛 飛 格 格 格 格 格 威力 ×=4n,4n+1 ○=4n+2,4n+3 H × ○ × ○ × ○ × ○ A × × ○ ○ × × ○ ○ B × × × × ○ ○ ○ ○ S C D × × × 30 30 31 31 32 33 33 34 ○ × × 35 35 36 36 37 38 38 39 × ○ × 40 40 41 42 42 43 43 44 ○ ○ × 45 45 46 47 47 48 49 49 × × ○ 50 50 51 52 52 53 54 54 ○ × ○ 55 56 56 57 57 58 59 59 × ○ ○ 60 61 61 62 63 63 64 64 ○ ○ ○ 65 66 66 67 68 68 69 70 H A B C D S Total 種族値 実数値 コード ポケモンエメラルドで理想個体を厳選するのは非常に骨が折れる作業です。そこで、 個人の利用範囲内であれば 、以下の プログラムコードを実行 することで上記で設定した値を持つポケモンとの「エンカウント/イベント入手」が可能になります。 ※ 努力値を振られた状態での「エンカウント/イベント入手」はできません。 ※ ローマ字が全角で出力されているので、注意してください！ 任意乱数値指定系 性格値 目標乱数値( seed[n] ) 指定乱数値( seed[n-2] ) ボックス名5 [かッンＮテぞさタ] ボックス名6 [アぃＢＦＣ] ボックス名7 任意 ボックス名8 [アｌコ う] ボックス名9 [] 任意ポケモンエンカウント ボックス名1 [あああああもけぬ] ボックス名2 [] ボックス名3 [ゆぢあ] 任意ポケモンイベント入手 ボックス名1 [] ボックス名2 [] ボックス名3 [] 上記の色違いを入手したい場合は、 以下 でIDを変更すると楽かと思います。 ポケモンのコードは https://m.bulbapedia.bulbagarden.net/wiki/List_of_locations_by_index_number_(Generation_III) を参照した。 文字コードは https://wikiwiki.jp/pokemonhack/文字コード を参照した コード実行とは ポケモンエメラルドにおいて、バグポケモン 0x085F をザロクバグにより入手し､特殊な環境整備(汎用コード導入)を行うことで、バグポケモン 0x085F の\"ようすをみる\"をトリガーに（？）任意コードが実行できるようになるようです。（ HN｢デテロニー｣さん という方が発見されたようで、以下の 動画 や ブログ 等で解説をされています。 この手法で取得したポケモンをオンライン環境で使用するのは 「不正競争防止法違反」 に抵触するはずなので、注意してください。 上記の他にも、以下のような実用的なコードが多数存在する。詳しくは ブログ記事 を参照。 任意アイテム入手(主人公のボックスに追加) マスターボール ハイパーボール スーパーボール モンスターボール サファリボール ネットボール ダイブボール ネストボール リピートボール タイマーボール ゴージャスボール プレミアボール キズぐすり どくけし やけどなおし こおりなおし ねむけざまし まひなおし かいふくのくすり まんたんのくすり すごいキズぐすり いいキズぐすり なんでもなおし げんきのかけら げんきのかたまり おいしいみず サイコソーダ ミックスオレ モーモーミルク ちからのこな ちからのねっこ ばんのうごな ふっかつそう ピーピーエイド ピーピーリカバー ピーピーエイダー ピーピーマックス フエンせんべい あおいビードロ きいろビードロ あかいビードロ くろいビードロ しろいビードロ きのみジュース せいなるはい あさせのしお あさせのかいがら あかいかけら あおいかけら きいろいかけら みどりのかけら マックスアップ タウリン ブロムヘキシン インドメタシン リゾチウム ふしぎなアメ ポイントアップ キトサン ポイントマックス エフェクトガード クリティカッター プラスパワー ディフェンダー スピーダー ヨクアタール スペシャルアップ ピッピにんぎょう エネコのシッポ シルバースプレー ゴールドスプレー あなぬけのヒモ むしよけスプレー たいようのいし つきのいし ほのおのいし かみなりのいし みずのいし リーフのいし ちいさなキノコ おおきなキノコ しんじゅ おおきなしんじゅ ほしのすな ほしのかけら きんのたま ハートのウロコ オレンジメール ハーバーメール キラキラメール メカニカルメール ウッディメール クロスメール トレジャーメール シャドーメール トロピカルメール ドリームメール ミラクルメール レトロメール クラボのみ カゴのみ モモンのみ チーゴのみ ナナシのみ ヒメリのみ オレンのみ キーのみ ラムのみ オボンのみ フィラのみ ウイのみ マゴのみ バンジのみ イアのみ ズリのみ ブリーのみ ナナのみ セシナのみ パイルのみ ザロクのみ ネコブのみ タポルのみ ロメのみ ウブのみ マトマのみ モコシのみ ゴスのみ ラブタのみ ノメルのみ ノワキのみ シーヤのみ カイスのみ ドリのみ ベリブのみ チイラのみ リュガのみ カムラのみ ヤタピのみ ズアのみ サンのみ スターのみ ナゾのみ ひかりのこな しろいハーブ きょうせいギプス がくしゅうそうち せんせいのツメ やすらぎのすず メンタルハーブ こだわりハチマキ おうじゃのしるし ぎんのこな おまもりこばん きよめのおふだ こころのしずく しんかいのキバ しんかいのウロコ けむりだま かわらずのいし きあいのハチマキ しあわせタマゴ ピントレンズ メタルコート たべのこし りゅうのウロコ でんきだま やわらかいすな かたいいし きせきのタネ くろいメガネ くろおび じしゃく しんぴのしずく するどいくちばし どくバリ とけないこおり のろいのおふだ まがったスプーン もくたん りゅうのキバ シルクのスカーフ アップグレード かいがらのすず うしおのおこう のんきのおこう ラッキーパンチ メタルパウダー ふといホネ ながねぎ あかいバンダナ あおいバンダナ ピンクのバンダナ みどりのバンダナ きいろのバンダナ マッハじてんしゃ コインケース ダウジングマシン ボロのつりざお いいつりざお すごいつりざお ふねのチケット コンテストパス ホエルコじょうろ デボンのにもつ はいぶくろ ちかのカギ ダートじてんしゃ ポロックケース ダイゴへのてがみ むげんのチケット べにいろのたま あいいろのたま たんちき ゴーゴーゴーグル いんせき １ごうしつのカギ ２ごうしつのカギ ４ごうしつのカギ ６ごうしつのカギ そうこのカギ ねっこのカセキ ツメのカセキ デボンスコープ わざマシン０１ きあいパンチ わざマシン０２ ドラゴンクロー わざマシン０３ みずのはどう わざマシン０４ めいそう わざマシン０５ ほえる わざマシン０６ どくどく わざマシン０７ あられ わざマシン０８ ビルドアップ わざマシン０９ タネマシンガン わざマシン１０ めざめるパワー わざマシン１１ にほんばれ わざマシン１２ ちょうはつ わざマシン１３ れいとうビーム わざマシン１４ ふぶき わざマシン１５ はかいこうせん わざマシン１６ ひかりのかべ わざマシン１７ まもる わざマシン１８ あまごい わざマシン１９ ギガドレイン わざマシン２０ しんぴのまもり わざマシン２１ やつあたり わざマシン２２ ソーラービーム わざマシン２３ アイアンテール わざマシン２４ １０まんボルト わざマシン２５ かみなり わざマシン２６ じしん わざマシン２７ おんがえし わざマシン２８ あなをほる わざマシン２９ サイコキネシス わざマシン３０ シャドーボール わざマシン３１ かわらわり わざマシン３２ かげぶんしん わざマシン３３ リフレクター わざマシン３４ でんげきは わざマシン３５ かえんほうしゃ わざマシン３６ ヘドロばくだん わざマシン３７ すなあらし わざマシン３８ だいもんじ わざマシン３９ がんせきふうじ わざマシン４０ つばめがえし わざマシン４１ いちゃもん わざマシン４２ からげんき わざマシン４３ ひみつのちから わざマシン４４ ねむる わざマシン４５ メロメロ わざマシン４６ どろぼう わざマシン４７ はがねのつばさ わざマシン４８ スキルスワップ わざマシン４９ よこどり わざマシン５０ オーバーヒート ひでんマシン０１ いあいぎり ひでんマシン０２ そらをとぶ ひでんマシン０３ なみのり ひでんマシン０４ かいりき ひでんマシン０５ フラッシュ ひでんマシン０６ いわくだき ひでんマシン０７ たきのぼり ひでんマシン０８ ダイビング おとどけもの ポケモンのふえ ひみつのカギ ひきかえけん きんのいれば ひみつのコハク カードキー エレベータのカギ かいのカセキ こうらのカセキ シルフスコープ じてんしゃ タウンマップ バトルサーチャー ボイスチェッカー わざマシンケース きのみぶくろ おしえテレビ トライパス レインボーパス おちゃ しんぴのチケット オーロラチケット こないれ ルビー サファイア マグマのしるし ふるびたかいず 個数： ボックス名1 [] ※ アイテムコードは https://wikiwiki.jp/pokemonhack/アイテムコード を参照した。 所持金加算： 円 ボックス名1 [] 所持BP加算： BP ボックス名1 [] 任意技教え あくび あくまのキッス あくむ あさのひざし あてみなげ あなをほる あばれる あまいかおり あまえる あまごい あやしいひかり あられ あわ いあいぎり いかり いかりのまえば いたみわけ いちゃもん いとをはく いばる いびき いやしのすず いやなおと いわおとし いわくだき いわなだれ うずしお うそなき うたう うらみ えんまく おいうち おうふくビンタ おきみやげ おだてる おどろかす おにび おんがえし おんねん かいりき かえんぐるま かえんほうしゃ かぎわける かくばる かげぶんしん かぜおこし かたくなる かなしばり かまいたち かみくだく かみつく かみなり かみなりパンチ からげんき からてチョップ からではさむ からにこもる からみつく かわらわり がまん がむしゃら がんせきふうじ きあいだめ きあいパンチ きしかいせい きつけ きゅうけつ きりさく きんぞくおん ぎんいろのかぜ くさぶえ くすぐる くろいきり くろいまなざし けたぐり げきりん げんしのちから こうごうせい こうそくいどう こうそくスピン こころのめ こごえるかぜ こなゆき このゆびとまれ こらえる ころがる こわいかお さいみんじゅつ さわぐ しおふき しぜんのちから したでなめる しっぽをふる しびれごな しめつける しろいきり しんそく しんぴのまもり じこあんじ じこさいせい じごくぐるま じしん じたばた じばく じゅうでん じわれ じんつうりき すいとる すてみタックル すなあらし すなかけ すなじごく ずつき せいちょう せいなるほのお ぜったいれいど そらをとぶ たいあたり たきのぼり たくわえる たたきつける たつまき たまなげ だいばくはつ だいもんじ だくりゅう だましうち ちいさくなる ちきゅうなげ ちょうおんぱ ちょうはつ つきのひかり つっぱり つつく つのでつく つのドリル つばさでうつ つばめがえし つららばり つるぎのまい つるのムチ てだすけ てっぺき てんしのキッス でんきショック でんげきは でんこうせっか でんじは でんじほう とおせんぼう とおぼえ とける とげキャノン とっしん とびげり とびはねる とびひざげり どくどく どくどくのキバ どくのこな どくばり どくガス どろあそび どろかけ どろぼう なきごえ なまける なみのり なりきり にどげり にほんばれ にらみつける ねがいごと ねこだまし ねこのて ねごと ねっぷう ねむりごな ねむる ねをはる ねんりき のしかかり のみこむ のろい はかいこうせん はがねのつばさ はきだす はさむ はたきおとす はたく はっぱカッター はなびらのまい はねる はめつのねがい はらだいこ ばかぢから ばくれつパンチ ひかりのかべ ひっかく ひっさつまえば ひのこ ひみつのちから ふういん ふきとばし ふくろだたき ふぶき ふみつけ ふんか へびにらみ へんしん ほえる ほごしょく ほしがる ほたるび ほのおのうず ほのおのパンチ ほろびのうた まきつく まきびし まもる まるくなる まわしげり みがわり みきり みずあそび みずでっぽう みずのはどう みだれづき みだれひっかき みちづれ みねうち みやぶる みらいよち めいそう めざめるパワー ものまね やつあたり やどりぎのタネ ゆびをふる ゆめくい ようかいえき よこどり りゅうのいかり りゅうのいぶき りゅうのまい れいとうパンチ れいとうビーム れんぞくぎり れんぞくパンチ わたほうし わるあがき アイアンテール アイスボール アロマセラピー アンコール ウェザーボール エアカッター エアロブラスト オウムがえし オクタンほう オーバーヒート オーロラビーム カウンター キノコのほうし ギガドレイン クモのす クラブハンマー クロスチョップ コスモパワー コメットパンチ ゴッドバード サイケこうせん サイコウェーブ サイコキネシス サイコブースト シグナルビーム シャドーパンチ シャドーボール スカイアッパー スキルスワップ スケッチ スパーク スピードスター スプーンまげ スモッグ ソニックブーム ソーラービーム タネマシンガン タマゴうみ タマゴばくだん ダイビング ダブルニードル テクスチャー テクスチャー２ テレポート トライアタック トリック トリプルキック ドわすれ ドラゴンクロー ドリルくちばし ナイトヘッド ニードルアーム ネコにこばん ハイドロカノン ハイドロポンプ ハイパーボイス ハサミギロチン ハードプラント バトンタッチ バブルこうせん バリアー ビルドアップ ピヨピヨパンチ フェザーダンス フラッシュ フラフラダンス ブラストバーン ブレイククロー ブレイズキック プレゼント ヘドロこうげき ヘドロばくだん ホネこんぼう ホネブーメラン ボルテッカー ボーンラッシュ ポイズンテール マグニチュード マジカルリーフ マジックコート マッドショット マッハパンチ ミサイルばり ミストボール ミラーコート ミルクのみ メガトンキック メガトンパンチ メガドレイン メガホーン メタルクロー メロメロ ヨガのポーズ ラスターパージ リサイクル リフレクター リフレッシュ リベンジ リーフブレード ロケットずつき ロックオン ロックブラスト １０まんボルト を手持ち 匹目の 番目の技に割り当てる。 ボックス名1 [] ボックス名2 [] ボックス名3 [] ボックス名4 [] ボックス名5 [] ※ 技コードは https://wikiwiki.jp/pokemonhack/技コード を参照した。 ID変更（表ID: , 裏ID: ） ボックス名1 [もけぬうい] ボックス名5 [かッンＮテぞけノ] ボックス名6 [アぱゥひし ｌ] ボックス名7 [ゴゥぃＢＦＣ] ボックス名8 [アｌコ う] ボックス名9 []","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-25.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-25.html"},{"title":"JS.24 ヌンキル (눈길)を作る","text":"ヌンキル (눈길) Tensorflow.js を用いて、 Start-Up(Netflix) に出てくる ヌンキル (눈길) のようなものを作成しました。 ※音声が出ます switch Camera Loading Model 喋る部分は、以下のようなコードで実装しています。 var u = new SpeechSynthesisUtterance (); u . lang = 'en-US' ; u . rate = 1.0 ; u . text = \"Hello World!\" ; speechSynthesis . speak ( u ); また、モデルは Object Detection (coco-ssd) を利用しています。判断できるクラスは80種（ 以下 に記載。） < script src = \"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs\" > </ script > < script src = \"https://cdn.jsdelivr.net/npm/@tensorflow-models/coco-ssd\" > </ script > // Load COCO SSD model. cocoSsd.load().then(function(pretrainedModel){ model = pretrainedModel; predictition_button.innerHTML = \"ヌンキル（눈길）\"; }); Class List ※ 詳しくは classes.ts を見てください。 classes = [ 'person' , 'bicycle' , 'car' , 'motorcycle' , 'airplane' , 'bus' , 'train' , 'truck' , 'boat' , 'traffic light' , 'fire hydrant' , 'stop sign' , 'parking meter' , 'bench' , 'bird' , 'cat' , 'dog' , 'horse' , 'sheep' , 'cow' , 'elephant' , 'bear' , 'zebra' , 'giraffe' , 'backpack' , 'umbrella' , 'handbag' , 'tie' , 'suitcase' , 'frisbee' , 'skis' , 'snowboard' , 'sports ball' , 'kite' , 'baseball bat' , 'baseball glove' , 'skateboard' , 'surfboard' , 'tennis racket' , 'bottle' , 'wine glass' , 'cup' , 'fork' , 'knife' , 'spoon' , 'bowl' , 'banana' , 'apple' , 'sandwich' , 'orange' , 'broccoli' , 'carrot' , 'hot dog' , 'pizza' , 'donut' , 'cake' , 'chair' , 'couch' , 'potted plant' , 'bed' , 'dining table' , 'toilet' , 'tv' , 'laptop' , 'mouse' , 'remote' , 'keyboard' , 'cell phone' , 'microwave' , 'oven' , 'toaster' , 'sink' , 'refrigerator' , 'book' , 'clock' , 'vase' , 'scissors' , 'teddy bear' , 'hair drier' , 'toothbrush' ]","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-24.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-24.html"},{"title":"JS.23 Twitterのタイムライン上でMNIST","text":"JS.11 TensorFlow.jsでMNIST と同じ内容なのですが、これを < meta name = \"twitter:card\" content = \"player\" > < meta name = \"twitter:player\" content = \"https://iwasakishuto.github.io/Front-End/tips/JavaScript-23.html\" > < meta name = \"twitter:player:width\" content = \"960\" > < meta name = \"twitter:player:height\" content = \"540\" > というタグを用いてTwitterのタイムライン上で動かします👍 作ったもの reset Number Accuracy 0 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 -","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-23.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-23.html"},{"title":"JS.22 ページを多言語に対応する。","text":"国旗のマークを押すと、対応する言語に翻訳されます。 🇺🇸 🇨🇳 🇲🇽 🇫🇷 🇯🇵 こんにちは コード html < div class = \"frame\" style = \"text-align: center\" > < a href = \"#googtrans(ja|en)\" class = \"lang-select\" data-lang = \"en\" > 🇺🇸 </ a > < a href = \"#googtrans(ja|zh-CN)\" class = \"lang-select\" data-lang = \"zh-CN\" > 🇨🇳 </ a > < a href = \"#googtrans(ja|es)\" class = \"lang-select\" data-lang = \"es\" > 🇲🇽 </ a > < a href = \"#googtrans(ja|fr)\" class = \"lang-select\" data-lang = \"fr\" > 🇫🇷 </ a > < a href = \"#googtrans(ja|ja)\" class = \"lang-select\" data-lang = \"ja\" > 🇯🇵 </ a > < h1 style = \"text-decoration: underline solid red; font-size: 3em;\" > こんにちは </ h1 > </ div > js < script src = \"https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit\" type = \"text/javascript\" ></ script > < script src = \"https://iwasakishuto.github.io/js/jquery.js\" type = \"text/javascript\" ></ script > < script > $ ( '.lang-select' ). click ( function () { var lang = $ ( this ). attr ( 'data-lang' ); window . location = $ ( this ). attr ( 'href' ); location . reload (); }); function googleTranslateElementInit () { new google . translate . TranslateElement ({ pageLanguage : 'ja' , layout : google . translate . TranslateElement . FloatPosition . TOP_LEFT }, 'google_translate_element' ); } </ script >","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-22.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-22.html"},{"title":"JS.21 画像認識用アノテーションツール。","text":"JS.19 で作成したフォトギャラリー JS.20 で作成したアノテーションツール を合わせて、画像用のアノテーションツールを作成しました。使い方は以下の通り。 なお、このページはGithub Pagesで作成されている静的サイトのため、アップロードされた画像がサーバー等に送信されることはなく、安心してご利用できます。 Registration で属性( attribute )に対する（複数の）ラベル( label )とそれに対応するキー( key )を登録する。 登録した内容は、 Registered Attributes に記載されています。 全ての属性の登録が済んだら、画像をクリックしてフォトギャラリー状態にする。 その状態で先ほど登録したキーを入力すれば、対応するラベルが対応する属性に付加される。 ESC: フォトギャラリーを終了 →: 次の画像に進む ←: 前の画像に戻る download ボタン（画面下部のものと、フォトギャラリー状態で出てくるものは同じです。）を押せば、json形式でラベル化データをダウンロードすることができます。 Registration Attributes: Key Label Copy Delete Registered Attributes attribute label command ディレクトリを選択してください。 画像サイズ（現在 12% ）：5% 100% Download JSON","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-21.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-21.html"},{"title":"JS.20 Formの登録内容を可視化する。","text":"JS.19 でフォトギャラリーを作成したので、これを用いてアノテーションを楽にするツールの作成を試みる。 キーボードから楽にアノテーションができるようにするため、属性( attribute )に対して（複数の）ラベル( label )とそれに対応するキー( key )用意し、それぞれキーボードから指定可能にした。 Registration で属性( attribute )に対する（複数の）ラベル( label )とそれに対応するキー( key )を登録する。 登録した内容は、 Registered Attributes に記載されています。 全ての属性の登録が済んだら、画像をクリックしてフォーカス状態にする。 その状態で先ほど登録したキーを入力すれば、対応するラベルが対応する属性に付加される。 download ボタンを押せば、json形式でダウンロード可能。 Registration Attributes: Key Label Copy Delete Registered Attributes attribute label command attribute current label download コード html < div class = \"annotation-attrs\" > < div class = \"registration-col\" style = \"margin-left: 10px; float: left;\" > < h2 > Registration </ h2 > < form id = \"registration-attrs-form\" action = \"#\" onsubmit = \"return false;\" > < table > < thead id = \"registration-attrs-thead\" > < tr >< th colspan = \"4\" > Attributes: < input id = \"attr-name\" type = \"text\" class = \"form-control\" placeholder = \"attribute\" required ></ th ></ tr > < tr > < th > Key </ th > < th > Label </ th > < th > Copy </ th > < th > Delete </ th > </ tr > </ thead > < tbody id = \"registration-attrs-tbody\" > < tr > < td >< input type = \"text\" class = \"command-key\" maxlength = \"1\" size = \"1\" ></ td > < td >< input type = \"text\" class = \"label-name\" placeholder = \"label name\" ></ td > < td >< input type = \"button\" value = \"＋\" class = \"add\" tabindex = \"-1\" ></ td > < td >< input type = \"button\" value = \"－\" class = \"del\" tabindex = \"-1\" ></ td > </ tr > </ tbody > < tbody id = \"registration-attrs-ttail\" > < tr >< td colspan = \"4\" > < input id = \"form-reset\" type = \"reset\" name = \"reset\" value = \"Clear\" /> < input type = \"submit\" value = \"Register\" onclick = \"return register_attrs();\" > </ td ></ tr > </ tbody > </ table > </ form > </ div > < div class = \"registration-col\" style = \"margin-right: 10px; float: right;\" > < h2 > Registered Attributes </ h2 > < table id = \"registered-attrs\" > < thead id = \"registered-attrs-thead\" > < tr > < th > attribute </ th > < th > label </ th > < th > command </ th > </ tr > </ thead > < tbody id = \"registered-attrs-tbody\" > </ tbody > </ table > </ div > </ div > < div class = \"sample-box\" style = \"text-align: center; width: 50%; margin: 0 auto;\" > < a href = \"#\" id = \"img-wrapper\" > < img id = \"sample-img\" src = \"https://iwasakishuto.github.io/images/profile/twitter.png\" > </ a > < table id = \"annotation-label\" > < thead id = \"annotation-label-thead\" > < tr > < th > attribute </ th > < th > current label </ th > </ tr > </ thead > < tbody id = \"annotation-label-tbody\" > </ tbody > </ table > < button onclick = \"download_json();\" > download </ button > </ div > js ※ jquery を使用した。 // Add and Delete input tags. $ ( document ). on ( \"click\" , \".add\" , function () { var target = $ ( this ). parent (). parent () target . clone ( true ). insertAfter ( target ); }); $ ( document ). on ( \"click\" , \".del\" , function () { var target = $ ( this ). parent (). parent (); if ( target . parent (). children (). length > 1 ) { target . remove (); } }); var sample_img_annotation = {} $ ( \"#img-wrapper\" ). keydown ( function ( event ) { const key = event . key ; if ( command_keys . hasOwnProperty ( key )){ attr_label = command_keys [ key ] sample_img_annotation [ attr_label [ 0 ]] = attr_label [ 1 ] } generate_annotation_table () }); // Cancel Default event. document . getElementById ( \"img-wrapper\" ). addEventListener ( \"click\" , function ( e ){ e . preventDefault (); }, false ); // Change background-color when input is focused. $ ( function () { $ ( 'input[type=\"text\"]' ) . focusin ( function ( e ) { $ ( this ). css ( 'background-color' , '#ffc' ); }) . focusout ( function ( e ) { $ ( this ). css ( 'background-color' , '' ); }); }); // Register Annotation labels. var anno_dataset = {} var command_keys = {} function register_attrs (){ var attr_name = $ ( \"#attr-name\" )[ 0 ]. value ; var msg = \"\" ; if ( attr_name != \"\" ){ if ( attr_name in anno_dataset ){ msg += \"[×] \" . concat ( \"Attribute \" , attr_name , \" is already registered.\" , \"\\n\" ); } else { var attrs = {} msg += \"[○] \" . concat ( \"Attribute \" , attr_name , \" is registered.\" , \"\\n\" ); $ ( \"#registration-attrs-tbody\" ). children ( \"tr\" ). each ( function ( i , e ) { let inputs = e . getElementsByTagName ( \"input\" ); let key = inputs [ 0 ]. value ; let label = inputs [ 1 ]. value ; if ( key != \"\" && label != \"\" ){ if ( command_keys . hasOwnProperty ( key )){ msg += \"\\t[×] \" . concat ( key , \" is already used.\" , \"\\n\" ); } else { command_keys [ key ] = [ attr_name , label ]; attrs [ key ] = label ; msg += \"\\t[○] \" . concat ( key , \" is registered to mean label: \" , label , \"\\n\" ); } } }); anno_dataset [ attr_name ] = attrs ; } } else { msg += \"[×] Please enter 'Attribute name'.\\n\" ; } alert ( msg ); reset_registration_table (); generate_registered_table (); generate_annotation_table (); return false ; } // Reset Registration Form table. function reset_registration_table (){ $ ( \"#form-reset\" ). click (); del_btns = $ ( \"input[class='del']\" ); for ( let i = 0 ; i < del_btns . length ; i ++ ){ del_btns [ i ]. click (); console . log ( del_btns [ i ]) } } // Generate Registered Attributes table. function generate_registered_table (){ var registered_tbody = $ ( \"#registered-attrs-tbody\" ); registered_tbody . empty (); for ( let attr_name in anno_dataset ){ let attrs = anno_dataset [ attr_name ]; let num_labels = Object . keys ( attrs ). length ; var row = \"\" ; var is_attr_added = false ; for ( let key in attrs ){ row += \"<tr>\" if ( ! is_attr_added ){ row += \"<td rowspan='\" + num_labels + \"'>\" + attr_name + \"</td>\" ; is_attr_added = true ; } row += \"\" . concat ( \"<td>\" , attrs [ key ], \"</td>\" ); row += \"\" . concat ( \"<td>\" , key , \"</td>\" ); row += \"</td>\" } registered_tbody . append ( row ); } } // Generate annotation table. function generate_annotation_table (){ var annotation_tbody = $ ( \"#annotation-label-tbody\" ); annotation_tbody . empty (); var row = \"\" for ( let attr_name in anno_dataset ){ var label = sample_img_annotation [ attr_name ]; var label = typeof ( label ) == \"undefined\" ? \"\" : label row += \"\" . concat ( \"<tr>\" , \"<td>\" , attr_name , \"</td>\" , \"<td>\" , label , \"</td>\" ); } annotation_tbody . append ( row ); } function download_json (){ var jsonString = JSON . stringify ( sample_img_annotation , null , '\\t' ); var blob = new Blob ([ jsonString ], { type : 'application/json' }); let link = document . createElement ( 'a' ); link . href = window . URL . createObjectURL ( blob ); link . download = 'annotations.json' ; link . click (); }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-20.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-20.html"},{"title":"JS.19 ディレクトリ内の画像をフォトギャラリーで表示する。","text":"ディレクトリ内部の画像全てでフォトギャラリーを作成します。なお、 LIGHTBOX というライブラリを用いています。 ディレクトリを選択してください。 画像サイズ（現在 12% ）：5% 100% コード html < div style = 'text-align: center;' > < label for = 'InputFiles' > ディレクトリを選択してください。 < input id = \"InputFiles\" type = \"file\" webkitdirectory style = 'display:none;' > </ label > </ div > < ul id = \"gallery\" class = \"galleryCover\" > </ ul > js // 以下のライブラリを使用。 < script src = \"https://iwasakishuto.github.io/js/jquery.js\" type = \"text/javascript\" >< /script> < script src = \"https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.7.1/js/lightbox.min.js\" type = \"text/javascript\" >< /script> < script > var DirInputTag = document . getElementById ( 'InputFiles' ); var GalleryTag = document . getElementById ( 'gallery' ); var sizeRange = document . getElementById ( 'sizeRange' ); var currentSize = document . getElementById ( 'currentSize' ); var files , file ; sizeRange . addEventListener ( 'change' , function ( e ) { let size = sizeRange . value + \"%\" ; currentSize . innerHTML = size ; let target = document . getElementsByClassName ( \"__canvas\" ); for ( var i = 0 ; i < target . length ; i ++ ) { target [ i ]. style . width = size ; } }); DirInputTag . addEventListener ( 'change' , function ( e ){ files = e . target . files ; var img , div ; var files = []. slice . call ( files ) // Sort files by file name. files . sort ( function ( a , b ){ if ( a . name < b . name ) return - 1 ; if ( a . name > b . name ) return 1 ; return 0 ; }); const validImageTypes = [ 'image/gif' , 'image/jpeg' , 'image/png' ]; for ( var i = 0 ; i < files . length ; i ++ ) { if ( validImageTypes . includes ( files [ i ][ 'type' ])){ let reader = new FileReader (); reader . fileName = files [ i ]. name reader . onload = function ( e ) { // <img src=\"{e.target.result}\" class=\"__canvas\"> img = document . createElement ( 'img' ); img . setAttribute ( 'src' , e . target . result ); img . className = '__canvas' ; // <a href=\"{e.target.result}\" data-title=\"{e.target.name}\" data-lightbox=\"photowall\"> a = document . createElement ( 'a' ); a . setAttribute ( 'href' , e . target . result ); a . setAttribute ( 'data-title' , e . target . fileName ); a . setAttribute ( 'data-lightbox' , \"photowall\" ) a . appendChild ( img ); // <li> li = document . createElement ( 'li' ); li . appendChild ( a ); li . className = 'galleryElements' ; GalleryTag . appendChild ( li ) } reader . readAsDataURL ( files [ i ]); } } }); < /script>","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-19.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-19.html"},{"title":"JS.18 ディレクトリ内の画像を全て表示する。","text":"ディレクトリ内部の画像を全て表示します。 今後 focus などを用いてラベル付けが楽にできるようにしたいと思います。 ディレクトリを選択してください。 画像サイズ（現在 12% ）：5% 100% コード html < div style = 'text-align: center;' > < label for = 'InputFiles' > ディレクトリを選択してください。 < input id = \"InputFiles\" type = \"file\" webkitdirectory style = 'display:none;' > </ label > </ div > < ul id = \"gallery\" class = \"galleryCover\" > </ ul > js var DirInputTag = document . getElementById ( 'InputFiles' ); var GalleryTag = document . getElementById ( 'gallery' ); var files ; var file ; DirInputTag . addEventListener ( 'change' , function ( e ){ files = e . target . files ; var img var div ; for ( var i = 0 ; i < files . length ; i ++ ) { let reader = new FileReader (); reader . onload = function ( e ) { img = document . createElement ( 'img' ); img . setAttribute ( 'src' , e . target . result ); li = document . createElement ( 'li' ); li . appendChild ( img ); li . className = 'galleryElements' ; GalleryTag . appendChild ( li ) } reader . readAsDataURL ( files [ i ]); } });","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-18.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-18.html"},{"title":"JS.17 アノテーションデータ（バウンディングボックス）作成ツールのコード","text":"アノテーションデータ（バウンディングボックス）作成ツール のコードを簡単に解説します。 ディレクトリを受け取る これは非常に簡単で、 <input> タグに webkitdirectory と書けばそれで終了です。 < input id = \"ex1\" type = \"file\" webkitdirectory > なお、以下のようにすれば、ディレクトリの各種情報を得ることができます。 document . getElementById ( 'ex1' ). addEventListener ( 'change' , function ( e ){ dir = e . target . files ; // これでディレクトリを受け取る。 dirname = dir [ 0 ]. webkitRelativePath ; // 一つめのファイルのパス filenum = dir . length ; // ファイルの数 }); マウスの座標を可視化する。 < canvas id = \"ex2\" width = \"200px\" height = \"200px\" style = \"border: 1.5px solid #000; background-color: #eee\" ></ canvas > < script > window . addEventListener ( 'load' , function () { var Canvas = document . getElementById ( 'ex2' ); var Context = Canvas . getContext ( '2d' ); Context . strokeStyle = \"#0082af\" ; Context . lineWidth = 1 ; function ex2draw ( x , y ){ Context . clearRect ( 0 , 0 , Canvas . width , Canvas . height ); // Draw Indicator. Context . beginPath (); Context . moveTo ( 0 , y ); Context . lineTo ( Canvas . width , y ); Context . moveTo ( x , 0 ); Context . lineTo ( x , Canvas . height ); Context . closePath (); Context . stroke (); } Canvas . addEventListener ( 'mousemove' , function ( e ) { ex2draw ( e . layerX , e . layerY ); }); }); </ script > <canvas> には、 Context.beginPath() から Context.closePath() までに描いたものが Context.stroke() によって描かれます。 バウンディングボックスを描く < canvas id = \"ex3\" width = \"200px\" height = \"200px\" style = \"border: 1.5px solid #000; background-color: #fff\" ></ canvas > < script > var Canvas ; var Context ; var RectEdgeColor = \"#FB0\" ; var RectInnerColor = \"rgba(255,230,174,0.3)\" ; var IndicatorColor = \"#0082af\" ; var index = 0 ; var DrawingMemory = { 0 : { x : null , y : null , w : null , h : null } }; window . addEventListener ( 'load' , function () { Canvas = document . getElementById ( 'ex3' ); Context = Canvas . getContext ( '2d' ); Context . strokeStyle = IndicatorColor ; Context . fillStyle = RectInnerColor ; Context . lineWidth = 1 ; var startPosition = { x : null , y : null }; var isDrag ; function dragStart ( x , y ){ isDrag = true ; startPosition . x = x ; startPosition . y = y ; } function dragEnd ( x , y ){ if ( isDrag ){ DrawingMemory [ index ] = { x : startPosition . x , y : startPosition . y , w : x - startPosition . x , h : y - startPosition . y }; index += 1 ; drawFromMemory (); } else { clear (); drawFromMemory (); } isDrag = false ; } function drawFromMemory (){ Context . strokeStyle = RectEdgeColor ; for ( i = 0 ; i < index ; i ++ ){ Context . fillRect ( DrawingMemory [ i ]. x , DrawingMemory [ i ]. y , DrawingMemory [ i ]. w , DrawingMemory [ i ]. h ); } for ( i = 0 ; i < index ; i ++ ){ Context . strokeRect ( DrawingMemory [ i ]. x , DrawingMemory [ i ]. y , DrawingMemory [ i ]. w , DrawingMemory [ i ]. h ); } Context . strokeStyle = IndicatorColor ; } function draw ( x , y ){ clear (); // Initialization. drawFromMemory (); // Draw Bounding Boxes. // Draw Indicator. Context . beginPath (); Context . moveTo ( 0 , y ); // start Context . lineTo ( Canvas . width , y ); // end Context . moveTo ( x , 0 ); // start Context . lineTo ( x , Canvas . height ); // end Context . closePath (); Context . stroke (); // Draw the current Bounding Box. if ( isDrag ){ Context . strokeStyle = RectEdgeColor ; Context . fillRect ( startPosition . x , startPosition . y , x - startPosition . x , y - startPosition . y ); Context . strokeRect ( startPosition . x , startPosition . y , x - startPosition . x , y - startPosition . y ); Context . strokeStyle = IndicatorColor ; } } function mouseHandler (){ Canvas . addEventListener ( 'mousedown' , function ( e ){ dragStart ( e . layerX , e . layerY ); }); Canvas . addEventListener ( 'mouseup' , function ( e ){ dragEnd ( e . layerX , e . layerY ); }); Canvas . addEventListener ( 'mouseout' , function ( e ){ dragEnd ( e . layerX , e . layerY ); }); Canvas . addEventListener ( 'mousemove' , function ( e ) { draw ( e . layerX , e . layerY ); }); } mouseHandler (); }); function clear (){ Context . clearRect ( 0 , 0 , Canvas . width , Canvas . height ); } </ script > あとは、バウンディングボックスの情報を保持して、最後にラベルデータや width , height と一緒に JSON.stringify で json データにしてダウンロードすれば終了です。","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-17.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-17.html"},{"title":"JS.16 アノテーションデータ（バウンディングボックス）作成ツール","text":"U-Net で大腸菌カウンターを作るなど、 Object Detection や Semantic Segmentation のモデルを実際に作ってみたいなと思ったので、まずは バウンディングボックス のアノテーションデータ作成ツールを作りました。 今後やるべきこと 画像サイズを「固定」 or 「可変」で選べるようにする。 バウンディングボックスを取り消せるようにする。 Semantic Segmentationのデータ作成ツールを作る。 width が負の値を取るとデータの整形時に面倒なので、 to , right , bottom , left の形にする。 作ったもの NEXT Download label width px height px なお、コードは ここ で簡単に解説しています。","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-16.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-16.html"},{"title":"css.2 ::befere & ::after","text":"::before や ::after は 擬似要素(Pseudo-elements) と呼ばれるもので、HTMLに直接書くことなく、選択された要素の 後 ・ 前 にスタイル付けすることができます。 作ったもの ポイント 重要な何か。 < p class = \"ex1\" > 重要な何か。 </ p > < style > p . ex1 :: before { content : \"point\" ; background : #f00 ; color : white ; margin-right : 2 px ; padding : 1 px ; font-weight : bold ; } </ style > チェック事項 チェック事項的な何か。 < p class = \"ex2\" > チェック事項的な何か。 </ p > < style > p . ex2 :: before { font-family : FontAwesome ; content : \"\\f00c\" ; margin-right : 3 px ; } </ style > フローチャート 手順１ 手順２ 手順３ < ul class = \"ex3\" > < li > 手順１ </ li > < li > 手順２ </ li > < li > 手順３ </ li > </ ul > < style > . ex3 { text-align : center ; list-style : none ; /*黒ぽちを消す*/ } . ex3 li :: after { content : '↓' ; display : block ; /*改行*/ padding : 0.3 em ; /*余白*/ } </ style > ただし、これだと最後の矢印が余計になってしまいます。 そこで、 XXX:not(YYY) という、 「XXXに適用するが、YYYは除く」 意味を持つ 否定擬似クラス を用いることで、この問題に対処します。（ 擬似クラス は 擬似要素 とは違い、コロンは1つです。） なお、並んでいる要素のうち最後のものを指すには :last-child という 擬似クラス を用います。 フローチャート（改良版） 風邪ひきーの 医者行きーの 受付済ませーの 待ちーの 名前呼ばれーの トツギーノ < ul class = \"ex4\" > < li > 風邪ひきーの </ li > < li > 医者行きーの </ li > < li > 受付済ませーの </ li > < li > 待ちーの </ li > < li > 名前呼ばれーの </ li > < li style = \"font-family: Impact,Charcoal; font-size: 2em;\" > トツギーノ </ li > </ ul > < style > . ex4 { text-align : center ; list-style : none ; } . ex4 li : not ( : last-child ) :: after { content : '↓' ; display : block ; padding : 0.3 em ; } </ style > 吹き出し ピン芸人になったバカリズム（マセキ芸能社所属）の代表作。厳格な表情でフリップをめくり、そこに描かれた絵に適した解説を「○○ーの」と厳格な口調で発するネタ。でも、オチは必ず「トツギーノ」（「嫁ぎーの」という意） 引用： はてなキーワード < div class = \"ex5\" > < div class = \"ex5__img\" >< img src = \"https://rr.img.naver.jp/mig?src=http%3A%2F%2Fblog.kitamura.jp%2F03%2F4664%2Fimages%2Fm464dc8h5363e5i3_060405totugino.gif&twidth=1200&theight=1200&qlt=80&res_format=jpg&op=r\" ></ div > < div class = \"ex5__callout\" > ピン芸人になったバカリズム（マセキ芸能社所属）の代表作。厳格な表情でフリップをめくり、そこに描かれた絵に適した解説を「○○ーの」と厳格な口調で発するネタ。でも、オチは必ず「トツギーノ」（「嫁ぎーの」という意） < br > 引用： < a href = \"http://d.hatena.ne.jp/keyword/%A5%C8%A5%C4%A5%AE%A1%BC%A5%CE\" > はてなキーワード </ a ></ div > </ div > < style > . ex5 { display : table ; width : 100 % ; } . ex5__img { display : table-cell ; vertical-align : middle ; width : 50 % ; padding-right : 10 px ; } /* ここから */ . ex5__img :: before { content : 'トツギーノ' ; text-align : center ; display : block ; font-family : Impact , Charcoal ; } . ex5__img :: after { content : '出典：https://matome.naver.jp/odai/2142518805695473601' ; text-align : center ; display : block ; font-size : 0.5 em ; } /* ここまでは余計 */ . ex5__callout { border : #0082af solid 4 px ; position : relative ; background : #fff ; padding : 12 px ; border-radius : 13 px ; } . ex5__callout :: before { content : \"\" ; position : absolute ; border-right : 23 px solid #0082af ; border-bottom : 20 px solid transparent ; border-top : 20 px solid transparent ; top : 30 % ; left : -23 px ; } . ex5__callout :: after { content : \"\" ; position : absolute ; border-right : 24 px solid #fff ; border-bottom : 20 px solid transparent ; border-top : 20 px solid transparent ; top : 30 % ; left : -17 px ; } </ style >","tags":"CSS","url":"https://iwasakishuto.github.io/Front-End/tips/css-2.html","loc":"https://iwasakishuto.github.io/Front-End/tips/css-2.html"},{"title":"html.1 テーブルについて理解する。","text":"普段 markdown で文章を書いているのですが、その場合、（おそらく） テーブル内の特定の位置だけ複数列用いてセルを作る 、といったことができません。 しかし、 html のタグを用いて <table> 要素を作れば、問題なくそのようなテーブルを作ることができたので、ここではその方法を記載します。 TL;DR <td> 要素内に rowspan=\"N\" とかけばN行1列のセル colspan=\"M\" とかけば1行M列のセル rowspan=\"N\" colspan=\"M\" とかけばN行M列のセル サンプル 1 2 3 4 5 6 7 8 < table > < tr > < td rowspan = \"3\" bgcolor = \"red\" > 1 </ td > < td > 2 </ td > < td > 3 </ td > < td > 4 </ td > </ tr > < tr > < td colspan = \"2\" bgcolor = \"blue\" > 5 </ td > < td > 6 </ td > </ tr > < tr > < td > 7 </ td > < td colspan = \"2\" bgcolor = \"green\" > 8 </ td > </ tr > </ table > 今後 Timetable のページですが、セルの幅を一定にすることは可能なのですが、文字の量が多すぎるとセルの高さが大きくなってしまい、美しくありません…。 （上の各セルに文字を入力するとサイズが変わることが確認できます。） とはいえ、両方固定して科目名が全てはいらないのも美しくありません。 そこで、 各セルごとに フォントサイズ・文字の量を JavaScript で取得し、セルのサイズを変える必要がなくなるまでフォントサイズを小さくする、といったことをしてこの問題を解決したいと考えています。（時間のある時にやります。） おまけ 自由に使ってください笑 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 < table width = \"240px\" height = \"320px\" > < thead > < tr > < th class = \"M__white\" > 1 </ th > < th class = \"M__white\" > 1 </ th > < th class = \"M__white\" > 1 </ th > < th class = \"M__red\" > 1 </ th > < th class = \"M__red\" > 1 </ th > < th class = \"M__red\" > 1 </ th > < th class = \"M__red\" > 1 </ th > < th class = \"M__red\" > 1 </ th > < th class = \"M__white\" > 1 </ th > < th class = \"M__white\" > 1 </ th > < th class = \"M__white\" > 1 </ th > < th class = \"M__white\" > 1 </ th > </ tr > </ thead > < tbody > < tr > < td colspan = \"2\" class = \"M__white\" > 1 </ td > < td colspan = \"9\" class = \"M__red\" > 1 </ td > < td colspan = \"1\" class = \"M__white\" > 1 </ td > </ tr > < tr > < td colspan = \"2\" class = \"M__white\" > 1 </ td > < td colspan = \"3\" class = \"M__black\" > 1 </ td > < td colspan = \"2\" class = \"M__body\" > 1 </ td > < td colspan = \"1\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__body\" > 1 </ td > < td colspan = \"3\" class = \"M__white\" > 1 </ td > </ tr > < tr > < td colspan = \"1\" class = \"M__white\" > 1 </ td > < td colspan = \"1\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__body\" > 1 </ td > < td colspan = \"1\" class = \"M__black\" > 1 </ td > < td colspan = \"3\" class = \"M__body\" > 1 </ td > < td colspan = \"1\" class = \"M__black\" > 1 </ td > < td colspan = \"3\" class = \"M__body\" > 1 </ td > < td colspan = \"1\" class = \"M__white\" > 1 </ td > </ tr > < tr > < td colspan = \"1\" class = \"M__white\" > 1 </ td > < td colspan = \"1\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__body\" > 1 </ td > < td colspan = \"2\" class = \"M__black\" > 1 </ td > < td colspan = \"3\" class = \"M__body\" > 1 </ td > < td colspan = \"1\" class = \"M__black\" > 1 </ td > < td colspan = \"3\" class = \"M__body\" > 1 </ td > </ tr > < tr > < td colspan = \"1\" class = \"M__white\" > 1 </ td > < td colspan = \"2\" class = \"M__black\" > 1 </ td > < td colspan = \"4\" class = \"M__body\" > 1 </ td > < td colspan = \"4\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__white\" > 1 </ td > </ tr > < tr > < td colspan = \"3\" class = \"M__white\" > 1 </ td > < td colspan = \"7\" class = \"M__body\" > 1 </ td > < td colspan = \"2\" class = \"M__white\" > 1 </ td > </ tr > < tr > < td colspan = \"2\" class = \"M__white\" > 1 </ td > < td colspan = \"2\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__red\" > 1 </ td > < td colspan = \"3\" class = \"M__black\" > 1 </ td > < td colspan = \"4\" class = \"M__white\" > 1 </ td > </ tr > < tr > < td colspan = \"1\" class = \"M__white\" > 1 </ td > < td colspan = \"3\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__red\" > 1 </ td > < td colspan = \"2\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__red\" > 1 </ td > < td colspan = \"3\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__white\" > 1 </ td > </ tr > < tr > < td colspan = \"4\" class = \"M__black\" > 1 </ td > < td colspan = \"4\" class = \"M__red\" > 1 </ td > < td colspan = \"4\" class = \"M__black\" > 1 </ td > </ tr > < tr > < td colspan = \"2\" class = \"M__body\" > 1 </ td > < td colspan = \"1\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__red\" > 1 </ td > < td colspan = \"1\" class = \"M__body\" > 1 </ td > < td colspan = \"2\" class = \"M__red\" > 1 </ td > < td colspan = \"1\" class = \"M__body\" > 1 </ td > < td colspan = \"1\" class = \"M__red\" > 1 </ td > < td colspan = \"1\" class = \"M__black\" > 1 </ td > < td colspan = \"2\" class = \"M__body\" > 1 </ td > </ tr > < tr > < td colspan = \"3\" class = \"M__body\" > 1 </ td > < td colspan = \"6\" class = \"M__red\" > 1 </ td > < td colspan = \"3\" class = \"M__body\" > 1 </ td > </ tr > < tr > < td colspan = \"2\" class = \"M__body\" > 1 </ td > < td colspan = \"8\" class = \"M__red\" > 1 </ td > < td colspan = \"2\" class = \"M__body\" > 1 </ td > </ tr > < tr > < td colspan = \"2\" class = \"M__white\" > 1 </ td > < td colspan = \"3\" class = \"M__red\" > 1 </ td > < td colspan = \"2\" class = \"M__white\" > 1 </ td > < td colspan = \"3\" class = \"M__red\" > 1 </ td > < td colspan = \"2\" class = \"M__white\" > 1 </ td > </ tr > < tr > < td colspan = \"1\" class = \"M__white\" > 1 </ td > < td colspan = \"3\" class = \"M__black\" > 1 </ td > < td colspan = \"4\" class = \"M__white\" > 1 </ td > < td colspan = \"3\" class = \"M__black\" > 1 </ td > < td colspan = \"1\" class = \"M__white\" > 1 </ td > </ tr > < tr > < td colspan = \"4\" class = \"M__black\" > 1 </ td > < td colspan = \"4\" class = \"M__white\" > 1 </ td > < td colspan = \"4\" class = \"M__black\" > 1 </ td > </ tr > </ tbody > </ table > < style > . M__white { background-color : white ; color : white ; } . M__body { background-color : #F6BC52 ; color : #F6BC52 ; } . M__red { background-color : #CC4220 ; color : #CC4220 ; } . M__black { background-color : #867724 ; color : #867724 ; } </ style >","tags":"HTML","url":"https://iwasakishuto.github.io/Front-End/tips/html-1.html","loc":"https://iwasakishuto.github.io/Front-End/tips/html-1.html"},{"title":"css.1 蛍光ペンを引く","text":"ここでは、大学の講義ノート （例） で使っている、 蛍光ペンでマークしたかのようなスタイル を記述しておきます。 赤いマーカー 赤いマーカーは、単純に重要なことをマークする時に使っています。 「色がついて」 「線が引いてあって」 「文字が太い」 の三点を組み合わせています。 . marker-pink { color : #c45a5a ; background : linear-gradient ( transparent 70 % , #ff66ff 60 % ); font-weight : bold ; } 青いマーカー 青いマーカーは、知識の補足が必要な時に用いています。特に生物系の用語はわからなくなることが多いので、 ホバーした時に一言説明が出る ようにしています。 . marker-info { color : #5C7DC4 ; background : linear-gradient ( transparent 70 % , #66FFCC 60 % ); font-weight : bold ; position : relative ; cursor : pointer ; } . marker-info : hover : before { opacity : 1 ; } . marker-info : before { content : attr ( aria - label ); opacity : 0 ; position : absolute ; top : 30 px ; right : -90 px ; font-size : 14 px ; width : 300 px ; padding : 10 px ; color : #fff ; background-color : #555 ; border-radius : 3 px ; pointer-events : none ; }","tags":"CSS","url":"https://iwasakishuto.github.io/Front-End/tips/css-1.html","loc":"https://iwasakishuto.github.io/Front-End/tips/css-1.html"},{"title":"JS.15 ポケモン自己分析を分析してみる","text":"ポケモン自己分析 (Pokémon Self-analysis)とは、16個の質問に答えることで どのポケモンの要素を持つ人材になるか診断してくれる と言う面白いコンテンツです。（まだ遊んでない方は遊んで見てください！！ちなみに僕は イーブイ(eevee) でした。） 自分も含め、周りの人の結果を見ていても 「大体」 当たっており、どういう分析を行なっているのか気になったので、 ポケモン自己分析を分析 してみました。 htmlの中身を見る。 まずは html (https://www.pokemon.co.jp/corporate/job/pokemoncenter/special/question/)の中身を開発者ツールで覗きます。 すると、\b質問の度にページ遷移することなく、 JavaScript (https://www.pokemon.co.jp/corporate/job/pokemoncenter/assets/js/common.js) で要素の書き換えを行なっていることがわかりました。 また、質問を答えるボタンには以下の class が割り当てられており、これは問題番号に依存していませんでした。 < div class = \"answers\" > < button class = \"answer-yes\" id = \"yes\" > はい </ button > < button class = \"answer-no\" id = \"no\" > いいえ </ button > < button class = \"answer-neither-yes\" id = \"neither-yes\" > どちらかといえばはい </ button > < button class = \"answer-neither-no\" id = \"neither-no\" > どちらかといえばいいえ </ button > </ div > jsの中身を見る。 問題文 先ほど特定した JavaScript の中身を見たところ、まず問題文が見つかりました。 { A : { quest : [ \"データや すうじを みることが すき。\" , \"じぜんの じゅんびは しっかりする。\" , \"おおざっぱな ひとを みると イライラする。\" , \"ふかく かんがえることが すきだと おもう。\" ]}, B : { quest : [ \"かんがえる より さきに こうどう する。\" , \"けつろん から はなす ほうが すき。\" , \"つめたいと いわれることが よくある。\" , \"ムダな ことが きらい。\" ]}, C : { quest : [ \"じぶんは うけみ スタンスだ。\" , \"ひとの ためになる ことであれば なんでもできる。\" , \"ひとから やさしいと いわれる ことが よくある。\" , \"いつも そのばの くうきを よんで こうどうする。\" ]}, D : { quest : [ \"しょたいめんでも せっきょくてきに はなしかける。\" , \"いつのまにか はなしの ちゅうしんに なっている。\" , \"ひとから あかるいね と いわれる。\" , \"おもった ことが かおに よくでる。\" ]} } どうやら、 質問にはA~Dのグループが分けられており、それぞれ4種類の問題文がある ようです。 解答ボタンに対する処理 続いて、ボタンに対する処理を見つけました。 必要な部分だけ取り出すために少しプログラムを書き換えていますが、内容は同じです。 if (( e . currentTarget ). hasClass ( \"answer-yes\" )) s [ n [ r ]] += 3 ; else if (( e . currentTarget ). hasClass ( \"answer-neither-yes\" )) s [ n [ r ]] += 2 ; else if (( e . currentTarget ). hasClass ( \"answer-neither-no\" )) s [ n [ r ]] += 1 ; else (( e . currentTarget ). hasClass ( \"answer-no\" )) s [ n [ r ]] += 0 ; 「はい」に近いほど点数が高く「いいえ」に近いほど点数が低い ようです。 この点数を、先ほどのグループごとに足し合わせているようです。（ s[n[r]] は\b各グループの得点を意味。）つまり、 同じグループの問題は（広義）同じことを聞いている問題 であったと言うことです。 得点に対する処理 その後、得点を0~4に圧縮しています。以下の関数がこの役割を担います。 function u ( e ) { return e <= 3 ? 1 : e <= 7 ? 2 : e <= 10 ? 3 : e <= 12 ? 4 : void 0 } ここまでで、グループAの圧縮された得点(1-4),..,グループDの圧縮された得点(1-4)が求められます。 得点をポケモンと結びつける var e = f . default [ \"A\" . concat ( u ( s . A ), \"B\" ). concat ( u ( s . B ), \"C\" ). concat ( u ( s . C ), \"D\" ). concat ( u ( s . D ))]. name ; location . href = \"../result/\" . concat ( p . default [ e ], \".html\" ); ここでは、各種グループ記号（ A など）と圧縮された得点（ u(s.A) など）を連結して、文字列を作っています。（ A1B1C1D1 などができる。） これを、ポケモンに対応させます。これは非常に単純で、コード内に対応関係が書いてありました。 非常に長いので、注意してください。 js t.exports = { A1B1C1D1: { name: \"コイキング\" }, A1B1C1D2: { name: \"コイキング\" }, A1B1C1D3: { name: \"カビゴン\" }, A1B1C1D4: { name: \"ラッキー\" }, A1B1C2D1: { name: \"コイキング\" }, A1B1C2D2: { name: \"コダック\" }, A1B1C2D3: { name: \"カイリュー\" }, A1B1C2D4: { name: \"ラッキー\" }, A1B1C3D1: { name: \"コダック\" }, A1B1C3D2: { name: \"コダック\" }, A1B1C3D3: { name: \"カイリュー\" }, A1B1C3D4: { name: \"ラッキー\" }, A1B1C4D1: { name: \"ラッキー\" }, A1B1C4D2: { name: \"ラプラス\" }, A1B1C4D3: { name: \"ラプラス\" }, A1B1C4D4: { name: \"ラッキー\" }, A1B2C1D1: { name: \"コイキング\" }, A1B2C1D2: { name: \"コイキング\" }, A1B2C1D3: { name: \"カイリュー\" }, A1B2C1D4: { name: \"カイリュー\" }, A1B2C2D1: { name: \"フーディン\" }, A1B2C2D2: { name: \"コイキング\" }, A1B2C2D3: { name: \"カイリュー\" }, A1B2C2D4: { name: \"ラッキー\" }, A1B2C3D1: { name: \"ディグダ\" }, A1B2C3D2: { name: \"コダック\" }, A1B2C3D3: { name: \"ディグダ\" }, A1B2C3D4: { name: \"ラッキー\" }, A1B2C4D1: { name: \"ポリゴン\" }, A1B2C4D2: { name: \"ディグダ\" }, A1B2C4D3: { name: \"ラプラス\" }, A1B2C4D4: { name: \"ポリゴン\" }, A1B3C1D1: { name: \"カイリキー\" }, A1B3C1D2: { name: \"カイリキー\" }, A1B3C1D3: { name: \"メタモン\" }, A1B3C1D4: { name: \"カビゴン\" }, A1B3C2D1: { name: \"カイリキー\" }, A1B3C2D2: { name: \"カイリキー\" }, A1B3C2D3: { name: \"コダック\" }, A1B3C2D4: { name: \"ラッキー\" }, A1B3C3D1: { name: \"ディグダ\" }, A1B3C3D2: { name: \"ディグダ\" }, A1B3C3D3: { name: \"ディグダ\" }, A1B3C3D4: { name: \"ラッキー\" }, A1B3C4D1: { name: \"ポリゴン\" }, A1B3C4D2: { name: \"ポリゴン\" }, A1B3C4D3: { name: \"ポリゴン\" }, A1B3C4D4: { name: \"ラプラス\" }, A1B4C1D1: { name: \"スピアー\" }, A1B4C1D2: { name: \"カイリキー\" }, A1B4C1D3: { name: \"カイリキー\" }, A1B4C1D4: { name: \"イーブイ\" }, A1B4C2D1: { name: \"スピアー\" }, A1B4C2D2: { name: \"スピアー\" }, A1B4C2D3: { name: \"スピアー\" }, A1B4C2D4: { name: \"コダック\" }, A1B4C3D1: { name: \"スピアー\" }, A1B4C3D2: { name: \"スピアー\" }, A1B4C3D3: { name: \"スピアー\" }, A1B4C3D4: { name: \"ディグダ\" }, A1B4C4D1: { name: \"スピアー\" }, A1B4C4D2: { name: \"ポリゴン\" }, A1B4C4D3: { name: \"ラプラス\" }, A1B4C4D4: { name: \"ラプラス\" }, A2B1C1D1: { name: \"コイキング\" }, A2B1C1D2: { name: \"ニャース\" }, A2B1C1D3: { name: \"カビゴン\" }, A2B1C1D4: { name: \"ピッピ\" }, A2B1C2D1: { name: \"コイキング\" }, A2B1C2D2: { name: \"コイキング\" }, A2B1C2D3: { name: \"カイリュー\" }, A2B1C2D4: { name: \"カビゴン\" }, A2B1C3D1: { name: \"ディグダ\" }, A2B1C3D2: { name: \"コダック\" }, A2B1C3D3: { name: \"カイリュー\" }, A2B1C3D4: { name: \"ラッキー\" }, A2B1C4D1: { name: \"ポリゴン\" }, A2B1C4D2: { name: \"ラプラス\" }, A2B1C4D3: { name: \"ラプラス\" }, A2B1C4D4: { name: \"ラッキー\" }, A2B2C1D1: { name: \"マルマイン\" }, A2B2C1D2: { name: \"コイキング\" }, A2B2C1D3: { name: \"カビゴン\" }, A2B2C1D4: { name: \"ピッピ\" }, A2B2C2D1: { name: \"コイキング\" }, A2B2C2D2: { name: \"メタモン\" }, A2B2C2D3: { name: \"カイリュー\" }, A2B2C2D4: { name: \"ピッピ\" }, A2B2C3D1: { name: \"ディグダ\" }, A2B2C3D2: { name: \"ディグダ\" }, A2B2C3D3: { name: \"コダック\" }, A2B2C3D4: { name: \"ラッキー\" }, A2B2C4D1: { name: \"ポリゴン\" }, A2B2C4D2: { name: \"ラプラス\" }, A2B2C4D3: { name: \"ラプラス\" }, A2B2C4D4: { name: \"カビゴン\" }, A2B3C1D1: { name: \"フーディン\" }, A2B3C1D2: { name: \"カイリキー\" }, A2B3C1D3: { name: \"マルマイン\" }, A2B3C1D4: { name: \"ピッピ\" }, A2B3C2D1: { name: \"フーディン\" }, A2B3C2D2: { name: \"カイリキー\" }, A2B3C2D3: { name: \"メタモン\" }, A2B3C2D4: { name: \"カビゴン\" }, A2B3C3D1: { name: \"カイリキー\" }, A2B3C3D2: { name: \"フーディン\" }, A2B3C3D3: { name: \"ディグダ\" }, A2B3C3D4: { name: \"ラッキー\" }, A2B3C4D1: { name: \"ポリゴン\" }, A2B3C4D2: { name: \"ポリゴン\" }, A2B3C4D3: { name: \"コダック\" }, A2B3C4D4: { name: \"ラプラス\" }, A2B4C1D1: { name: \"リザードン\" }, A2B4C1D2: { name: \"リザードン\" }, A2B4C1D3: { name: \"リザードン\" }, A2B4C1D4: { name: \"マルマイン\" }, A2B4C2D1: { name: \"フーディン\" }, A2B4C2D2: { name: \"リザードン\" }, A2B4C2D3: { name: \"フーディン\" }, A2B4C2D4: { name: \"イーブイ\" }, A2B4C3D1: { name: \"スピアー\" }, A2B4C3D2: { name: \"スピアー\" }, A2B4C3D3: { name: \"スピアー\" }, A2B4C3D4: { name: \"コダック\" }, A2B4C4D1: { name: \"スピアー\" }, A2B4C4D2: { name: \"ポリゴン\" }, A2B4C4D3: { name: \"ポリゴン\" }, A2B4C4D4: { name: \"ポリゴン\" }, A3B1C1D1: { name: \"マルマイン\" }, A3B1C1D2: { name: \"ニャース\" }, A3B1C1D3: { name: \"ニャース\" }, A3B1C1D4: { name: \"ピッピ\" }, A3B1C2D1: { name: \"ニャース\" }, A3B1C2D2: { name: \"ニャース\" }, A3B1C2D3: { name: \"カイリュー\" }, A3B1C2D4: { name: \"ピッピ\" }, A3B1C3D1: { name: \"メタモン\" }, A3B1C3D2: { name: \"カイリュー\" }, A3B1C3D3: { name: \"カビゴン\" }, A3B1C3D4: { name: \"カイリュー\" }, A3B1C4D1: { name: \"ディグダ\" }, A3B1C4D2: { name: \"ラプラス\" }, A3B1C4D3: { name: \"ラプラス\" }, A3B1C4D4: { name: \"ラッキー\" }, A3B2C1D1: { name: \"マルマイン\" }, A3B2C1D2: { name: \"ニャース\" }, A3B2C1D3: { name: \"ニャース\" }, A3B2C1D4: { name: \"ピッピ\" }, A3B2C2D1: { name: \"ニャース\" }, A3B2C2D2: { name: \"マルマイン\" }, A3B2C2D3: { name: \"ニャース\" }, A3B2C2D4: { name: \"ピッピ\" }, A3B2C3D1: { name: \"カイリキー\" }, A3B2C3D2: { name: \"メタモン\" }, A3B2C3D3: { name: \"カイリュー\" }, A3B2C3D4: { name: \"カイリュー\" }, A3B2C4D1: { name: \"ディグダ\" }, A3B2C4D2: { name: \"コダック\" }, A3B2C4D3: { name: \"ラプラス\" }, A3B2C4D4: { name: \"カビゴン\" }, A3B3C1D1: { name: \"マルマイン\" }, A3B3C1D2: { name: \"ニャース\" }, A3B3C1D3: { name: \"フーディン\" }, A3B3C1D4: { name: \"ピッピ\" }, A3B3C2D1: { name: \"フーディン\" }, A3B3C2D2: { name: \"マルマイン\" }, A3B3C2D3: { name: \"マルマイン\" }, A3B3C2D4: { name: \"ピッピ\" }, A3B3C3D1: { name: \"カイリキー\" }, A3B3C3D2: { name: \"フーディン\" }, A3B3C3D3: { name: \"イーブイ\" }, A3B3C3D4: { name: \"カビゴン\" }, A3B3C4D1: { name: \"ポリゴン\" }, A3B3C4D2: { name: \"ポリゴン\" }, A3B3C4D3: { name: \"コダック\" }, A3B3C4D4: { name: \"コダック\" }, A3B4C1D1: { name: \"リザードン\" }, A3B4C1D2: { name: \"リザードン\" }, A3B4C1D3: { name: \"リザードン\" }, A3B4C1D4: { name: \"ニャース\" }, A3B4C2D1: { name: \"リザードン\" }, A3B4C2D2: { name: \"リザードン\" }, A3B4C2D3: { name: \"リザードン\" }, A3B4C2D4: { name: \"ニャース\" }, A3B4C3D1: { name: \"スピアー\" }, A3B4C3D2: { name: \"フーディン\" }, A3B4C3D3: { name: \"カイリキー\" }, A3B4C3D4: { name: \"イーブイ\" }, A3B4C4D1: { name: \"スピアー\" }, A3B4C4D2: { name: \"スピアー\" }, A3B4C4D3: { name: \"フーディン\" }, A3B4C4D4: { name: \"ミュウ\" }, A4B1C1D1: { name: \"ナッシー（アローラのすがた）\" }, A4B1C1D2: { name: \"ピカチュウ\" }, A4B1C1D3: { name: \"ピカチュウ\" }, A4B1C1D4: { name: \"ピッピ\" }, A4B1C2D1: { name: \"マルマイン\" }, A4B1C2D2: { name: \"ピカチュウ\" }, A4B1C2D3: { name: \"ピカチュウ\" }, A4B1C2D4: { name: \"コダック\" }, A4B1C3D1: { name: \"マルマイン\" }, A4B1C3D2: { name: \"ピカチュウ\" }, A4B1C3D3: { name: \"ピカチュウ\" }, A4B1C3D4: { name: \"ピッピ\" }, A4B1C4D1: { name: \"マルマイン\" }, A4B1C4D2: { name: \"カイリュー\" }, A4B1C4D3: { name: \"カビゴン\" }, A4B1C4D4: { name: \"ラッキー\" }, A4B2C1D1: { name: \"ナッシー（アローラのすがた）\" }, A4B2C1D2: { name: \"ニャース\" }, A4B2C1D3: { name: \"ピカチュウ\" }, A4B2C1D4: { name: \"ナッシー（アローラのすがた）\" }, A4B2C2D1: { name: \"ナッシー（アローラのすがた）\" }, A4B2C2D2: { name: \"ピカチュウ\" }, A4B2C2D3: { name: \"ピカチュウ\" }, A4B2C2D4: { name: \"カビゴン\" }, A4B2C3D1: { name: \"ナッシー（アローラのすがた）\" }, A4B2C3D2: { name: \"マルマイン\" }, A4B2C3D3: { name: \"ピカチュウ\" }, A4B2C3D4: { name: \"ピッピ\" }, A4B2C4D1: { name: \"カイリキー\" }, A4B2C4D2: { name: \"メタモン\" }, A4B2C4D3: { name: \"カビゴン\" }, A4B2C4D4: { name: \"カイリュー\" }, A4B3C1D1: { name: \"ナッシー（アローラのすがた）\" }, A4B3C1D2: { name: \"ナッシー（アローラのすがた）\" }, A4B3C1D3: { name: \"ナッシー（アローラのすがた）\" }, A4B3C1D4: { name: \"ピカチュウ\" }, A4B3C2D1: { name: \"ナッシー（アローラのすがた）\" }, A4B3C2D2: { name: \"ナッシー（アローラのすがた）\" }, A4B3C2D3: { name: \"ナッシー（アローラのすがた）\" }, A4B3C2D4: { name: \"カイリキー\" }, A4B3C3D1: { name: \"ナッシー（アローラのすがた）\" }, A4B3C3D2: { name: \"ナッシー（アローラのすがた）\" }, A4B3C3D3: { name: \"ピカチュウ\" }, A4B3C3D4: { name: \"ニャース\" }, A4B3C4D1: { name: \"フーディン\" }, A4B3C4D2: { name: \"カイリキー\" }, A4B3C4D3: { name: \"マルマイン\" }, A4B3C4D4: { name: \"ミュウ\" }, A4B4C1D1: { name: \"ラッキー\" }, A4B4C1D2: { name: \"ピカチュウ\" }, A4B4C1D3: { name: \"ピカチュウ\" }, A4B4C1D4: { name: \"ナッシー（アローラのすがた）\" }, A4B4C2D1: { name: \"リザードン\" }, A4B4C2D2: { name: \"コダック\" }, A4B4C2D3: { name: \"リザードン\" }, A4B4C2D4: { name: \"ナッシー（アローラのすがた）\" }, A4B4C3D1: { name: \"リザードン\" }, A4B4C3D2: { name: \"リザードン\" }, A4B4C3D3: { name: \"マルマイン\" }, A4B4C3D4: { name: \"ミュウ\" }, A4B4C4D1: { name: \"リザードン\" }, A4B4C4D2: { name: \"フーディン\" }, A4B4C4D3: { name: \"ミュウ\" }, A4B4C4D4: { name: \"ミュウ\" } } }, {}], ここまででポケモンの名前に変換できました。続いて、以下で英語に変換します。 この処理は不要と言えば不要ですが、日本語より英語（アルファベット）の方が何かと便利です。 ※ちなみに、ここを見れば全部で20種類のポケモンがいたこともわかります。 t . exports = { \"ピカチュウ\" : \"pikachu\" , \"ニャース\" : \"meowth\" , \"イーブイ\" : \"eevee\" , \"ナッシー（アローラのすがた）\" : \"exeggutor\" , \"リザードン\" : \"charizard\" , \"カイリキー\" : \"machamp\" , \"フーディン\" : \"alakazam\" , \"スピアー\" : \"beedrill\" , \"ポリゴン\" : \"porygon\" , \"ディグダ\" : \"diglett\" , \"コダック\" : \"psyduck\" , \"ラプラス\" : \"lapras\" , \"カイリュー\" : \"dragonite\" , \"ラッキー\" : \"chansey\" , \"カビゴン\" : \"snorlax\" , \"ピッピ\" : \"clefairy\" , \"マルマイン\" : \"electrode\" , \"ミュウ\" : \"mew\" , \"メタモン\" : \"ditto\" , \"コイキング\" : \"magikarp\" } 以上で、得点をポケモン名に変換することができました。 urlでアクセス 先ほど ../result/\".concat(p.default[e], \".html\" と言う形でurlを作っていました。そのため、 https://www.pokemon.co.jp/corporate/job/pokemoncenter/special/result/{ポケモンの英語名}.html と言う形でアクセスすれば、それぞれのポケモンの性格診断を見ることができます。 おまけ 結果の画像ファイル名が https://www.pokemon.co.jp/corporate/job/pokemoncenter/assets/img/special/share/{ポケモンの英語名}.jpg であることを利用すれば、直接各ポケモンの結果画像を入手することも可能です。 試しに、以下のテキストポックスにポケモンの英語名を入れて見てください！！ Pokémon Name 再掲(\bポケモンの名前) t . exports = { \"ピカチュウ\" : \"pikachu\" , \"ニャース\" : \"meowth\" , \"イーブイ\" : \"eevee\" , \"ナッシー（アローラのすがた）\" : \"exeggutor\" , \"リザードン\" : \"charizard\" , \"カイリキー\" : \"machamp\" , \"フーディン\" : \"alakazam\" , \"スピアー\" : \"beedrill\" , \"ポリゴン\" : \"porygon\" , \"ディグダ\" : \"diglett\" , \"コダック\" : \"psyduck\" , \"ラプラス\" : \"lapras\" , \"カイリュー\" : \"dragonite\" , \"ラッキー\" : \"chansey\" , \"カビゴン\" : \"snorlax\" , \"ピッピ\" : \"clefairy\" , \"マルマイン\" : \"electrode\" , \"ミュウ\" : \"mew\" , \"メタモン\" : \"ditto\" , \"コイキング\" : \"magikarp\" } ちなみに… 以下のようにすることで、 ポケモン自己分析 (Pokémon Self-analysis)のサイトを真似ていました。 body { background-image : url ( \"https://www.pokemon.co.jp/corporate/job/pokemoncenter/assets/img/special/common/bg.png\" ); background-color : rgb ( 246 , 224 , 105 ); }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-15.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-15.html"},{"title":"JS.14 Slack用の文字スタンプを作る","text":"\b Google Chrome の開発者ツールを使うことで、各サイトのネットワーク通信の中身（どのようなパラメータでリクエストを投げ、どのようなリスポンスが返ってきているのか）を調べることができます。 その内容を調べることで業務を効率化したり、スクレイピングを行なったりするのですが、今回はこの知識を応用して、 静的サイトにも関わらずSlackのスタンプを作る という機能を実現したいと思います。 作ったもの Special thanks go to \" 絵文字ジェネレーター - Slack 向け絵文字を無料で簡単生成 \b\" text font Noto Sans Mono CJK JP Bold M+ 1p black Rounded M+ 1p black IPAmj明朝 青柳隷書しも LinLibertine Bold text color: background color: コード html < div class = \"display\" > < img id = \"emoji\" src = \"https://dashboard.snapcraft.io/site_media/appmedia/2019/01/Snapcraft_256x256.png\" width = \"128\" height = \"128\" onerror = \"this.src='https://dashboard.snapcraft.io/site_media/appmedia/2019/01/Snapcraft_256x256.png';\" /> </ div > < div class = \"container\" > < div class = \"col\" > < label for = \"text\" > text </ label >< br > < input id = \"text\" type = \"text\" placeholder = \"例）熱盛\" > </ div > < div class = \"col\" > < label for = \"font\" > font </ label >< br > < select id = \"font\" size = \"6\" > < option selected value = \"notosans-mono-bold\" > Noto Sans Mono CJK JP Bold </ option > < option value = \"mplus-1p-black\" > M+ 1p black </ option > < option value = \"rounded-x-mplus-1p-black\" > Rounded M+ 1p black </ option > < option value = \"ipamjm\" > IPAmj明朝 </ option > < option value = \"aoyagireisyoshimo\" > 青柳隷書しも </ option > < option value = \"LinLibertine_RBah\" > LinLibertine Bold </ option > </ select > </ div > < div class = \"col-color\" > < label for = \"color\" > text color: </ label >< input type = \"color\" id = \"color\" value = \"#EC71A1\" >< br > < label for = \"bgcolor\" > background color: </ label >< input type = \"color\" id = \"bgcolor\" value = \"#FFFFFF\" > </ div > </ div > JavaScript window . addEventListener ( 'DOMContentLoaded' , function () { if ( HTMLVideoElement ) { // ページ上の要素を取得 var emoji = document . querySelector ( '#emoji' ); var text = document . querySelector ( '#text' ); var font = document . querySelector ( '#font' ); var color = document . querySelector ( '#color' ); var bgcolor = document . querySelector ( '#bgcolor' ); // フォーム内の要素に変更があると発火 text . addEventListener ( 'change' , function ( e ) { changeSRC ( emoji , text , font , color , bgcolor ); }); font . addEventListener ( 'change' , function ( e ) { changeSRC ( emoji , text , font , color , bgcolor ); }); color . addEventListener ( 'change' , function ( e ) { changeSRC ( emoji , text , font , color , bgcolor ); }); bgcolor . addEventListener ( 'change' , function ( e ) { changeSRC ( emoji , text , font , color , bgcolor ); }); } } ); var changeSRC = function ( emoji , text , font , color , bgcolor ){ const base = \"https://emoji-gen.ninja/emoji_download?align=center&size_fixed=false&stretch=true&public_fg=true&locale=ja\" ; var url = base + \"&text=\" + text . value + \"&font=\" + font . value + \"&color=\" + color . value . substring ( 1 , 7 ) + \"FF\" + \"&back_color=\" + bgcolor . value . substring ( 1 , 7 ) + \"FF\" ; emoji . setAttribute ( 'src' , url ) //download.setAttribute('href', url) } css . display { text-align : center ; margin : 20 px auto ; } . container { text-align : center ; width : 100 % ; } . col { font-size : 1.2 em ; font-weight : bold ; display : table-cell ; width : 33 % ; padding : 8 px ; } . col-color { text-align : left ; font-size : 1.2 em ; font-weight : bold ; display : table-cell ; width : 33 % ; padding : 8 px ; } label { color : #80273F ; } # text { border : 0 ; border-bottom : 1 px solid #d1d1d1 ; font-size : 1.2 em ; padding : 8 px ; }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-14.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-14.html"},{"title":"JS.13 GASでslackにメッセージを送る","text":"GASとは Google Apps Script(GAS, ガス) とは、Googleが提供するサーバーサイド・スクリプト環境です。 JavaScript じゃないやんって感じかもしれませんが、 JavaScript っぽいなと思ったのでかなり前から使っていたのですが一度まとめることにしました。 シェアハウスのslackで必要だと感じた 「予定を共有すること」 と 「家事の役割分担をすること」 を自動化しました。 その日の予定を共有する関数 以下のようなものができます。 listupEvent gmailアドレスを受け取り、その日にある予定を全て取得する関数 function listupEvent ( cal_id ){ var list = \"\" ; var cal = CalendarApp . getCalendarById ( cal_id ); var events = cal . getEventsForDay ( new Date ()); for ( var i = 0 ; i < events . length ; i ++ ){ s = \"\" ; if ( events [ i ]. isAllDayEvent ()) { s += Utilities . formatDate ( events [ i ]. getStartTime (), \"GMT+0900\" , \"MM/dd \" ); } else { s += Utilities . formatDate ( events [ i ]. getStartTime (), \"GMT+0900\" , \"MM/dd HH:mm\" ); s += Utilities . formatDate ( events [ i ]. getEndTime (), \"GMT+0900\" , \"-HH:mm \" ); } s += events [ i ]. getTitle (); list += s + \"\\n\" ; } return list ; } CalcuDaySpan 特定の日からの経過時間、特定の日までの残り時間を計算する関数。エモい。 function CalcuDaySpan (){ var start = Moment . moment ( 'YYYY/MM/DD' ); // 開始日（ −１日 ） var end = Moment . moment ( 'YYYY/MM/DD' ). add ( 'years' , 2 ); var now = Moment . moment (); var message = 'おはよう！〇〇から今日で *' + now . diff ( start , 'days' ) + '日* だね。××まであと *' + - now . diff ( end , 'days' ) + '日* 、今日も濃い一日を！！\\n' ; return message ; } postSlack JSON形式で payload にslackに送信する際の情報を渡せば、slackにうまく送信されます。 // slackに送信する function postSlack ( payload ){ var options = { \"method\" : \"POST\" , 'contentType' : 'application/json' , 'payload' : JSON . stringify ( payload ) }; var url = \"https://hooks.slack.com/services/XXX/YYY/ZZZ\" ; // Webhook URL var response = UrlFetchApp . fetch ( url , options ); var content = response . getContentText ( \"UTF-8\" ); } shareCalendar 上記の関数を駆使してslackにメッセージを送る関数。みんな大好き橋本環奈のアイコンで送信することで、朝の気分を少しでも良くします。 function shareCalendar () { var list = \"\" ; var s ; var Members = [ \"<@UAAAAAAAA>\" , \"<@UBBBBBBBB>\" , \"<@UCCCCCCCC>\" , \"<@UDDDDDDDD>\" ]; var Address = [ \"AAA@gmail.com\" , \"BBB@gmail.com\" , \"CCC@gmail.com\" , \"DDD@gmail.com\" ]; for ( var i = 0 ; i < Members . length ; i ++ ){ s = listupEvent ( Address [ i ]); if ( s != \"\" ) list += \"\\n■今日の\" + Members [ i ] + \"の予定\\n\" + s ; } if ( list != \"\" ) { var title = CalcuDaySpan (); var payload = { \"channel\" : \"#channel name\" , \"username\" : \"bot name\" , \"text\" : title + list , } postSlack ( payload ); } } 朝、その日の夜に洗濯物を取り込む人を決める関数 以下のようなものができます。 getWeatherData 気象庁 | 天気予報：東京都 のサイトをスクレイピングして、欲しい情報を取得します。 // 天気を取得する function getWeatherData () { // データ取得 var url = \"http://www.jma.go.jp/jp/yoho/319.html\" ; // 東京の天気 var response = UrlFetchApp . fetch ( url ); // URL から html var data = response . getContentText (); // 大雑把に分割＆配列化 var ary = data . split ( \"<th class=\\\"weather\\\">\" )[ 2 ]; // 朝6時から24時までの降水確率 var ary_pop = ary . split ( \"%\" ); // Probability Of Precipitation ary_pop . pop (); var ary_rainy = []; for ( var i in ary_pop ) { var pop = ary_pop [ i ]. substr ( - 2 ); if ( pop == \">0\" ) pop = \"0\" ; ary_rainy . push ( pop + \"%\" ); } var str_pop = \"00-06：\" + ary_rainy [ 0 ] + \"\\n06-12：\" + ary_rainy [ 1 ] + \"\\n12-18：\" + ary_rainy [ 2 ] + \"\\n18-24：\" + ary_rainy [ 3 ]; // 最低最高気温 var min = ary . split ( \"min\" )[ 1 ]. match ( />(.+?)</g )[ 0 ]. slice ( 1 , - 1 ); // 記録がない場合は「---」に置き換える if ( min == \"</t\" ) min = \"---\" ; var max = ary . split ( \"max\" )[ 1 ]. match ( />(.+?)</g )[ 0 ]. slice ( 1 , - 1 ); if ( max == \"</t\" ) max = \"---\" ; var str_temp = \"朝の最低気温 ：\" + min + \"\\n日中の最高気温：\" + max ; // 天気を言葉で取得 var weather = ary . match ( /title=\"(.+?)\"/g )[ 0 ]. slice ( 7 , - 1 ); // 天気の画像取得 var img = ary . match ( /src=\"(.*?)\"/g )[ 0 ]. slice ( 5 , - 1 ); var img_url = \"http://www.jma.go.jp/jp/yoho/\" + img ; var weather_str = \"*\" + weather + \"*\\n\" + img_url + \"\\n`【降水確率】`\\n\" + str_pop + \"\\n`【気温】`\\n\" + str_temp + \"\\n\" ; return weather_str ; 具体的には、以下の内容を返します。 *曇り時々晴れ* http://www.jma.go.jp/jp/yoho/img/201.png `【降水確率】` 00-06：0% 06-12：10% 12-18：30% 18-24：30% `【気温】` 朝の最低気温 ：19度 日中の最高気温：28度 getDayOfWeek date.getDay() がインデックスで曜日を返すので、それを単純に日本語に直すだけの関数です。 // 曜日を取得する function getDayOfWeek ( date ) { var dayOfWeek = date . getDay (); var dayOfWeekStr = [ \"日\" , \"月\" , \"火\" , \"水\" , \"木\" , \"金\" , \"土\" ][ dayOfWeek ]; return dayOfWeekStr } getDayOfToday 今日の日付と曜日を取得する関数です。 function getDayOfTomorrow (){ // 明日の日付取得 var date = new Date (); var today = Utilities . formatDate ( date , 'Asia/Tokyo' , 'MM月dd日' ); var youbi = getDayOfWeek ( date ); var str_date = today + \"(\" + youbi + \")\" ; return str_date ; // 06月19日(水) など。 } assignRole 洗濯物を取り込む人を決める 重要な 関数です。 function assignRole (){ // 洗濯物を取り込む人を決定 // 各メンバーのID var Members = [ \"<@UAAAAAAAA>\" , \"<@UBBBBBBBB>\" , \"<@UCCCCCCCC>\" , \"<@UDDDDDDDD>\" ]; var num = Members . length ; // 人数 var index = Math . floor ( Math . random () * num ); // ランダムで 0~num-1 を生成 var role = Members [ index ]; var str_date = getDayOfToday (); var weather_str = getWeatherData (); var payload = { \"text\" : \"今日は\" + role + \"お願いね！\\n今日 \" + str_date + \" の天気： \" + weather_str , \"channel\" : \"#laundry\" , \"username\" : \"みくりさん\" , \"icon_url\" : \"https://pbs.twimg.com/profile_images/804164014473289728/OCNtA0UO_400x400.jpg\" , // アイコン画像 } postSlack ( payload ); } 明日の朝洗濯物を干す人を決める関数 基本的には上と同じです笑 大きな変更点といえば、今回はランダムで 2人アサインしている ということです。朝洗濯物を干すのは大変ですからね。 あと、平匡さんにしてます。わかりづらくなってしまうので。 function assignRole (){ // 洗濯物を干す人を決定 var Members = [ \"<@UAAAAAAAA>\" , \"<@UBBBBBBBB>\" , \"<@UCCCCCCCC>\" , \"<@UDDDDDDDD>\" ]; var num = Members . length ; // 人数 var index = Math . floor ( Math . random () * num ); var index2 = Math . floor ( Math . random () * num ); while ( index === index2 ){ index2 = Math . floor ( Math . random () * num ); Logger . log ( index2 ); } var role = Members [ index ]; var role2 = Members [ index2 ]; var str_date = getDayOfTomorrow (); var weather_str = getWeatherData (); var payload = { \"text\" : \"明日の朝は\" + role + \"と\" + role2 + \"お願いね！\\n明日 \" + str_date + \" の天気： \" + weather_str , \"channel\" : \"#laundry\" , \"username\" : \"平匡さん\" , \"icon_url\" : \"https://i.pinimg.com/originals/4a/47/b7/4a47b71d373217dc578f05a7b9ff5ce0.jpg\" , // アイコン画像 } postSlack ( payload ); }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-13.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-13.html"},{"title":"JS.12 Node.jsでコマンドメモアプリケーション","text":"講座： Node.js速習講座 Part1 <導入＆基礎編> 講師： Yu Hiraga Node.jsとは Node.js (略してNode)は、 ブラウザ側で機能する言語であったJavaScriptをサーバー側で動作するようにしたもの。 使い方 以下の hello.js というファイルを node hello.js （または拡張子を無視して node hello ）というコマンドで立ち上げる事ができる。 console . log ( \"Hello, world!\" ); $ node hello.js > Hello, world! npm npm とは、 \"Node Package Manager\" の略で、Node関連の便利ツールを扱うもの。代表的なものには以下のモジュールがある。 パッケージ名 説明 express ホームページを表示させる cordova モバイルデバイスとの連携をしやすくする forever サーバーが落ちてから再起動する際、Nodeプログラムも同時にかつ自動的に再起動する。 第三者が無償で提供しているものがたくさんあるので、使えるものがあるのであれば積極的に使うべき。 作ったもの コマンドラインから操作するメモ帳アプリケーションを作成した。なお、コードは ECMAScript を採用して書いている。 メモ追加 $ node app.js add --title = memo1 --body = initial commit. 保存されました。 ------------- タイトル：memo1 内容：initial ここで、 notes-data.json \bの中身は以下のようになっている。 [{ \"title\" : \"memo1\" , \"body\" : \"initial\" }] $ node app.js add --title = memo2 --body = second commit. 保存されました。 ------------- タイトル：memo2 内容：second [{ \"title\" : \"memo1\" , \"body\" : \"initial\" },{ \"title\" : \"memo2\" , \"body\" : \"second\" }] メモ表示（全部） $ node app.js list 表示数：2 ------------- タイトル：memo1 内容：initial ------------- タイトル：memo2 内容：second メモ表示（一部） $ node app.js read --title = memo2 見つかりました。 ------------- タイトル：memo2 内容：second メモ削除 $ node app.js remove --title = memo3 削除されませんでした。 $ node app.js remove --title = memo2 削除されました。 [{ \"title\" : \"memo1\" , \"body\" : \"initial\" }] コード 以下のようなディレクトリ構造下で行う。 ├── app.js # メモアプリの入り口となるスクリプト ├── node_modules # npm install したライブラリが入っている。 │ └── ... ├── notes-data.json # メモが保存されるjsonファイル ├── notes.js # app.jsで呼び出す関数が書かれている。 ├── package-lock.json # 同じpackage.jsonからのモジュールインストールが、違ったインストールに陥る結果を回避するためのもの。 └── package.json # どのようなライブラリをインストールしたかなど app.js // メモアプリの入り口となる関数。 const fs = require ( \"fs\" ); const notes = require ( \"./notes.js\" ); const yargs = require ( \"yargs\" ); // argv よりも多機能なのでこちらを採用。 const argv = yargs . argv ; const command = argv . _ [ 0 ] if ( command === \"add\" ){ let note = notes . addNote ( argv . title , argv . body ); // 保存された内容をアウトプット if ( note ){ console . log ( \"保存されました。\" ); notes . logNotes ( note ); } else { console . log ( \"タイトルが重複しています。\" ); } } else if ( command === \"list\" ){ let allNotes = notes . showAll (); console . log ( `表示数： ${ allNotes . length } ` ); allNotes . forEach ( note => notes . logNotes ( note )); } else if ( command === \"read\" ){ let note = notes . readNote ( argv . title ); if ( note ){ console . log ( \"見つかりました。\" ); notes . logNotes ( note ); } else { console . log ( \"データが見つかりませんでした。\" ); } } else if ( command === \"remove\" ){ let noteRemoved = notes . removeNote ( argv . title ); let message = noteRemoved ? \"削除されました。\" : \"削除されませんでした。\" ; console . log ( message ); } notes.js const fs = require ( \"fs\" ) // ノートの内容を取得する。（存在しなければ空の配列） let fetchNotes = () => { try { let notesString = fs . readFileSync ( \"notes-data.json\" ); return JSON . parse ( notesString ); } catch ( e ){ return []; } }; // ノートの内容を保存する。 let saveNotes = notes => { fs . writeFileSync ( \"notes-data.json\" , JSON . stringify ( notes )); } // ノートに書き込む関数 let addNote = ( title , body ) => { let notes = fetchNotes (); let note = { title , body }; // 同じタイトルのデータがあれば何もしない。 let duplicatedNotes = notes . filter ( note => note . title === title ); if ( duplicatedNotes . length === 0 ){ notes . push ( note ); saveNotes ( notes ); return note ; } } let showAll = () => { return fetchNotes (); } let readNote = title => { let notes = fetchNotes (); let filteredNotes = notes . filter ( note => note . title === title ); return filteredNotes [ 0 ]; // 1つしか見つからないはずだからindexは0。 } // 指定したタイトルのデータを削除。 let removeNote = title => { let notes = fetchNotes (); // 指定したタイトルにマッチしないデータのみを残して保存。 let filteredNotes = notes . filter ( note => note . title !== title ); saveNotes ( filteredNotes ); // データが削除されたか（データ数が減ったか）のbool値を返す。 return notes . length !== filteredNotes . length ; } let logNotes = ( note ) => { console . log ( \"-------------\" ); console . log ( `タイトル： ${ note . title } ` ); console . log ( `内容： ${ note . body } ` ); }; module . exports = { addNote , showAll , readNote , removeNote , logNotes }; package.json { \"name\" : \"memo\" , \"version\" : \"1.0.0\" , \"description\" : \"Command line memo application\" , \"main\" : \"app.js\" , \"scripts\" : { \"test\" : \"echo \\\"Error: no test specified\\\" && exit 1\" }, \"author\" : \"shuto\" , \"license\" : \"ISC\" , \"dependencies\" : { \"express\" : \"*\" , \"grunt\" : \"&#94;1.0.4\" , \"yargs\" : \"&#94;4.7.1\" } }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-12.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-12.html"},{"title":"JS.11 TensorFlow.jsでMNIST","text":"機械学習のチュートリアルでおなじみMNISTを TensorFlow.js でやってみました。 下のキャンバスに0~9の数字を書いて、 predict ボタンを押してみてください！！ 作ったもの reset Number Accuracy 0 - 1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - モデルの学習 なお、訓練は Mnist cnn - Keras Documentation に従って行なっていますが、一応モデルの重みを TensorFlow.js の形式に変換するところまでを含めて notebook にまとめてあります。 また、 TensorFlow.js に関しては、 README.md に簡単にまとめてあります。 コード < div class = \"mnist\" > < div class = \"drawing\" > < canvas id = \"drawing-pad\" width = \"280\" height = \"280\" style = \"border: 2px solid;\" ></ canvas > < canvas id = \"hidden-pad\" style = \"display: none;\" ></ canvas >< br /> < button id = \"predict-button\" class = \"predict\" onclick = \"prediction()\" > < i id = \"loading\" class = \"fa fa-spinner fa-spin\" style = \"disabled: false;\" ></ i > </ button > < button id = \"reset-button\" class = \"reset\" onclick = \"reset()\" > reset </ button > </ div > < div class = \"result\" > < table > < thead > < tr > < th > Number </ th > < th > Accuracy </ th > </ tr > </ thead > < tbody > < tr > < th > 0 </ th > < td class = \"accuracy\" data-row-index = \"0\" > - </ td > </ tr > < tr > < th > 1 </ th > < td class = \"accuracy\" data-row-index = \"1\" > - </ td > </ tr > < tr > < th > 2 </ th > < td class = \"accuracy\" data-row-index = \"2\" > - </ td > </ tr > < tr > < th > 3 </ th > < td class = \"accuracy\" data-row-index = \"3\" > - </ td > </ tr > < tr > < th > 4 </ th > < td class = \"accuracy\" data-row-index = \"4\" > - </ td > </ tr > < tr > < th > 5 </ th > < td class = \"accuracy\" data-row-index = \"5\" > - </ td > </ tr > < tr > < th > 6 </ th > < td class = \"accuracy\" data-row-index = \"6\" > - </ td > </ tr > < tr > < th > 7 </ th > < td class = \"accuracy\" data-row-index = \"7\" > - </ td > </ tr > < tr > < th > 8 </ th > < td class = \"accuracy\" data-row-index = \"8\" > - </ td > </ tr > < tr > < th > 9 </ th > < td class = \"accuracy\" data-row-index = \"9\" > - </ td > </ tr > </ tbody > </ table > </ div > </ div > < script src = \"https://cdnjs.cloudflare.com/ajax/libs/signature_pad/1.5.3/signature_pad.min.js\" ></ script > < script src = \"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@0.8.0\" ></ script > < script src = \"https://docs.opencv.org/3.4/opencv.js\" type = \"text/javascript\" ></ script > JavaScript // init SignaturePad const drawElement = document . getElementById ( 'drawing-pad' ); const signaturePad = new SignaturePad ( drawElement , { minWidth : 6 , maxWidth : 6 , penColor : 'white' , backgroundColor : 'black' , }); // load pre-trained model let model ; const model_path = '../../js/TensorFlowJs/MNIST/tf-model/model.json' tf . loadModel ( model_path ) . then ( function ( pretrainedModel ){ model = pretrainedModel ; document . getElementById ( 'predict-button' ). innerHTML = \"predict\" ; document . getElementById ( 'loading' ). style . disabled = \"true\" ; }); function getImageData () { // grayscale const src = cv . imread ( drawElement ); let dst_gray = new cv . Mat (); cv . cvtColor ( src , dst_gray , cv . COLOR_RGBA2GRAY , 0 ); // resize let dst_resized = new cv . Mat (); let dsize = new cv . Size ( 28 , 28 ); cv . resize ( dst_gray , dst_resized , dsize , 0 , 0 , cv . INTER_AREA ); cv . imshow ( 'hidden-pad' , dst_resized ); const imageData = document . getElementById ( 'hidden-pad' ). getContext ( '2d' ). getImageData ( 0 , 0 , 28 , 28 ); src . delete (); dst_gray . delete (); dst_resized . delete (); return imageData ; } function getAccuracyScores ( imageData ) { // メモリリークの心配がなくなる。自動的にメモリを解放。 const score = tf . tidy ( function () { const channels = 1 ; let input = tf . fromPixels ( imageData , channels ); input = tf . cast ( input , 'float32' ). div ( tf . scalar ( 255 )); input = input . expandDims (); return model . predict ( input ). dataSync (); }); return score ; } function prediction () { const imageData = getImageData (); const accuracyScores = getAccuracyScores ( imageData ); const maxAccuracy = accuracyScores . indexOf ( Math . max . apply ( null , accuracyScores )); const elements = document . querySelectorAll ( \".accuracy\" ); elements . forEach ( function ( el ){ el . parentNode . classList . remove ( 'is-selected' ); const rowIndex = Number ( el . dataset . rowIndex ); if ( maxAccuracy === rowIndex ) { el . parentNode . classList . add ( 'is-selected' ); } el . innerText = accuracyScores [ rowIndex ]; }) } function reset () { signaturePad . clear (); let elements = document . querySelectorAll ( \".accuracy\" ); elements . forEach ( function ( el ){ el . parentNode . classList . remove ( 'is-selected' ); el . innerText = '-' ; }) } css . mnist { padding : 10 px ; width : 100 % ; overflow : hidden ; } . drawing { float : left ; width : 50 % ; text-align : center ; } . result { float : right ; width : 50 % ; } . predict { padding : 10 px ; background-color : #80160e ; } . reset { padding : 10 px ; background-color : #c8c8a0 ; } . is-selected { background-color : #80160e ; color : white ; } @ media only screen and ( max-width : 1200px ) { . drawing { width : 100 % ; text-align : center ; } . result { width : 100 % ; } } @ media only screen and ( max-width : 760px ) { . drawing { float : left ; width : 50 % ; text-align : center ; } . result { float : right ; width : 50 % ; } } @ media only screen and ( max-width : 640px ) { . drawing { width : 100 % ; text-align : center ; } . result { width : 100 % ; } }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-11.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-11.html"},{"title":"JS.10 OpenCVで遊ぶ","text":"作ったもの 画像にいくつかの処理を（一度に一つだけ）加えることのできるアプリケーションです。線画化が意外といい感じに仕上がるので、試してみてください。 Source Output 処理方法 グレースケール化 線画化 リサイズ化 横幅 px 縦幅 px 動機 色々と覚えてきたので、最後に OpenCV.js Webカメラ\b Canvas TensorFlow.js あたりを使って 静的サイトで機械学習のWebアプリケーションを動かし 、 JavaScript の勉強は一旦終了にしようと思いました。そこで、まずは OpenCV.js から使ってみようと思い、上記のアプリケーションを作りました。 あと、地味に毎回 Python やシェルでコード書いたり、 PowerPoint 使って画像のリサイズするのが面倒だったので意外と重宝しています笑 コード html < table > < thead > < tr > < th align = \"center\" > Source </ th > < th align = \"center\" > Output </ th > </ tr > </ thead > < tbody > < tr > < td > < img id = \"src-image\" src = \"https://iwasakishuto.github.io/images/apple-touch-icon/Home.png\" /> < img id = \"hidden-image\" src = \"https://iwasakishuto.github.io/images/apple-touch-icon/Home.png\" style = \"display: none;\" /> </ td > < td > < canvas id = \"dest-canvas\" ></ canvas > < canvas id = \"hidden-canvas\" style = \"display: none;\" ></ canvas > </ td > </ tr > < tr > < td align = \"center\" > <!-- 入力ファイル選択 --> < input type = \"file\" id = \"input-file\" /> </ td > < td align = \"center\" > <!-- ダウンロード --> < input id = \"download-btn\" type = \"button\" value = \"ダウンロード\" > </ td > </ tbody > </ table > <!-- 処理方法を選択 --> < form name = \"Processing Method\" action = \"#\" > < h2 > 処理方法 </ h2 > < ul > < li >< input type = \"radio\" name = \"method\" id = \"gray-scale-btn\" onClick = \"changeDisabled()\" >< label for = \"gray-scale-btn\" > グレースケール化 </ label ></ li > < li >< input type = \"radio\" name = \"method\" id = \"linedraw-btn\" onClick = \"changeDisabled()\" >< label for = \"linedraw-btn\" > 線画化 </ label ></ li > < li >< input type = \"radio\" name = \"method\" id = \"resize-btn\" onClick = \"changeDisabled()\" >< label for = \"resize-btn\" > リサイズ化 </ label > < label for = \"gray-scale-btn\" > 横幅 </ label >< p style = \"display:inline;\" >< input type = \"number\" id = \"resize-width\" name = \"resizeSize\" step = \"10\" min = \"10\" max = \"1000\" value = \"400\" > px </ p > < label for = \"gray-scale-btn\" > 縦幅 </ label >< p style = \"display:inline;\" >< input type = \"number\" id = \"resize-height\" name = \"resizeSize\" step = \"10\" min = \"10\" max = \"1000\" value = \"400\" > px </ p ></ li > </ ul > < input id = \"execute-btn\" type = \"button\" value = \"実行\" > </ form > < script src = \"https://docs.opencv.org/3.4/opencv.js\" type = \"text/javascript\" ></ script > JavaScript const srcImg = document . getElementById ( 'src-image' ); const hiddenImg = document . getElementById ( 'hidden-image' ); const fileInput = document . getElementById ( 'input-file' ); const canvas = document . getElementById ( 'dest-canvas' ); const hiddenCanvas = document . getElementById ( 'hidden-canvas' ); const grayScaleBtn = document . getElementById ( 'gray-scale-btn' ); const lineDrawBtn = document . getElementById ( 'linedraw-btn' ); const downloadBtn = document . getElementById ( 'download-btn' ); const resizeBtn = document . getElementById ( 'resize-btn' ); const executeBtn = document . getElementById ( 'execute-btn' ); const resizeSize = document . getElementsByName ( 'resizeSize' ); // OpenCVメソッドを全て引き受ける function EventHandler ( func , ... args ){ const src = cv . imread ( srcImg ); const dst = func ( src , ... args ); cv . imshow ( 'dest-canvas' , dst ); src . delete (); dst . delete (); const hiddenSrc = cv . imread ( hiddenImg ); const hiddenDst = func ( hiddenSrc , ... args ); cv . imshow ( 'hidden-canvas' , hiddenDst ); hiddenSrc . delete (); hiddenDst . delete (); } function convertImageToGray ( img ) { let dst = new cv . Mat (); cv . cvtColor ( img , dst , cv . COLOR_RGBA2GRAY , 0 ); return dst ; } function convertImageToLineDrawing ( img ) { const kernel = cv . getStructuringElement ( cv . MORPH_RECT , new cv . Size ( 5 , 5 )); const imgGray = new cv . Mat (); cv . cvtColor ( img , imgGray , cv . COLOR_RGBA2GRAY ); const imgDilated = new cv . Mat (); cv . dilate ( imgGray , imgDilated , kernel , new cv . Point ( - 1 , 1 ), 1 ); const imgDiff = new cv . Mat (); cv . absdiff ( imgDilated , imgGray , imgDiff ); const contour = new cv . Mat (); cv . bitwise_not ( imgDiff , contour ); return contour ; } function convertImageRisze ( img , width , height ) { let dst = new cv . Mat (); let dsize = new cv . Size ( width , height ); cv . resize ( img , dst , dsize , 0 , 0 , cv . INTER_AREA ); return dst ; } // Execute Button executeBtn . addEventListener ( 'click' , function (){ var radios = document . getElementsByName ( \"method\" ); if ( radios [ 0 ]. checked ) EventHandler ( convertImageToGray ); if ( radios [ 1 ]. checked ) EventHandler ( convertImageToLineDrawing ); if ( radios [ 2 ]. checked ) EventHandler ( convertImageRisze , parseInt ( document . getElementById ( \"resize-width\" ). value ), parseInt ( document . getElementById ( \"resize-height\" ). value ) ); }); // Input Button fileInput . addEventListener ( 'change' , function ( e ){ srcImg . src = URL . createObjectURL ( e . target . files [ 0 ]); hiddenImg . src = URL . createObjectURL ( e . target . files [ 0 ]); const src = cv . imread ( hiddenImg ); }, false ); // Make URL for Download function dataUriToBlob ( dataUri ) { const b64 = atob ( dataUri . split ( ',' )[ 1 ]); const u8 = Uint8Array . from ( b64 . split ( '' ), e => e . charCodeAt ()); return new Blob ([ u8 ], { type : 'image/png' }); } // Download Button downloadBtn . addEventListener ( 'click' , function ( e ){ let data = hiddenCanvas . toDataURL (); let url = URL . createObjectURL ( dataUriToBlob ( data )); let link = document . createElement ( \"a\" ); link . href = url ; link . download = \"processed.png\" ; link . click (); }) function changeDisabled () { if ( document . getElementsByName ( \"method\" )[ 2 ]. checked ) { resizeSize [ 0 ]. disabled = false ; resizeSize [ 1 ]. disabled = false ; } else { resizeSize [ 0 ]. disabled = true ; resizeSize [ 1 ]. disabled = true ; } } window . onload = changeDisabled (); css ul { list-style : none ; } label { display : inline-flex ; margin-bottom : 0 ; }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-10.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-10.html"},{"title":"JS.9 ブロック崩しを作る","text":"作ったもの BREAKOUT START 動機 「ゲームを作る」ということが JavaScript の熟達度合いを測る良い指標になると聞いたので、試しにブロック崩しを作ってみた。見た目は1979年に任天堂が発売したブロック崩しを参考にしている。当時のゲームのように、5種類作ることも考えたが、とりあえずシンプルなものだけ作成した。 コード ゲームを作る上でのポイントは以下の関数で、これによってボールが動いているように見せています。 var canvas = document . getElementById ( \"Canvas id\" ); var context = canvas . getContext ( \"2d\" ); // これが重要。キャンバスに描画した指定範囲内の絵を削除している context . clearRect ( 0 , 0 , canvas . width , canvas . height ); html < div class = \"breakout\" > < header > BREAKOUT </ header > < canvas id = \"canvas\" width = \"480\" height = \"500\" ></ canvas > < a id = \"start\" onclick = \"gameButton();startTimer()\" class = \"btn-circle-border-double\" > START </ a > < audio id = \"soundBrick\" src = \"https://taira-komori.jpn.org/sfxr/sfxrse/02laser/shoot01.mp3\" type = \"audio/mp3\" preload = \"auto\" ></ audio > < audio id = \"soundBar\" src = \"https://taira-komori.jpn.org/sfxr/sfxrse/02laser/shoot03.mp3\" type = \"audio/mp3\" preload = \"auto\" ></ audio > < audio id = \"soundFail\" src = \"https://taira-komori.jpn.org/sfxr/sfxrse/04powerup/powerdown02.mp3\" type = \"audio/mp3\" preload = \"auto\" ></ audio > < audio id = \"soundUp\" src = \"https://taira-komori.jpn.org/sfxr/sfxrse/04powerup/powerup05.mp3\" type = \"audio/mp3\" preload = \"auto\" ></ audio > </ div > javascript var canvas = document . getElementById ( \"canvas\" ); var ctx = canvas . getContext ( \"2d\" ); // パドルのパラメータ var paddleHeight = 10 ; var paddleWidth = 50 ; var paddleOffsetBottom = 80 ; var paddleX = ( canvas . width - paddleWidth ) / 2 ; // 入力を記録する変数 var rightPressed = false ; var leftPressed = false ; // ブロックのパラメータ var brickColumnCount = 14 ; var brickRowCount = 6 ; var brickColors = [ \"#F39800\" , \"#FFF100\" , \"#8FC31F\" ]; var brickWidth = 25 ; var brickHeight = 10 ; var brickPadding = 5 ; var brickOffsetTop = 70 ; var brickOffsetLeft = 30 ; // ボールのパラメータ var ballRadius = 5 ; var x = canvas . width / 2 ; var y = canvas . height - paddleOffsetBottom - brickHeight ; var dx = 3 ; var dy = - 3 ; // スコアを記録する。 var score = 0 ; var maxscore = 0 ; for ( var r = 0 ; r < brickRowCount ; r ++ ) { for ( var c = 0 ; c < brickColumnCount ; c ++ ) { maxscore += 3 - Math . floor ( r / 2 ); } } // ライフを記録する。 var lives = 3 ; // 経過時間を記録する関数 var start_time ; // グローバル変数にしている。 var timer = 0 ; // 3桁の数字で表示するため var addZero = function ( value ){ if ( value < 10 ) { value = '00' + value ; } else if ( value < 100 ){ value = '0' + value ; } return value ; } // イベント開始の関数 function startTimer (){ start_time = new Date (); setInterval ( goTimer , 10 ); } // この関数をループさせる。 function goTimer (){ var milli = new Date () - start_time ; var seconds = Math . floor ( milli / 1000 ); seconds = addZero ( seconds ); timer = seconds ; } // ブロックが当たった後に消えるようにする。 var bricks = []; for ( var r = 0 ; r < brickRowCount ; r ++ ) { bricks [ r ] = []; for ( var c = 0 ; c < brickColumnCount ; c ++ ) { // statusでブロックが崩されたかを記憶する。 bricks [ r ][ c ] = { x : 0 , y : 0 , status : 1 }; } } // ボタンの処理で制御する document . addEventListener ( \"keydown\" , keyDownHandler , false ); document . addEventListener ( \"keyup\" , keyUpHandler , false ); // ボタンが押された時のイベント(変数をTrueにする) function keyDownHandler ( e ) { if ( e . key == \"Right\" || e . key == \"ArrowRight\" ) { rightPressed = true ; } else if ( e . key == \"Left\" || e . key == \"ArrowLeft\" ) { leftPressed = true ; } } // ボタンが押されなくなった時のイベント(変数をfalseに戻す) function keyUpHandler ( e ) { if ( e . key == \"Right\" || e . key == \"ArrowRight\" ) { rightPressed = false ; } else if ( e . key == \"Left\" || e . key == \"ArrowLeft\" ) { leftPressed = false ; } } // マウスの位置で制御する document . addEventListener ( \"mousemove\" , mouseMoveHandler , false ); // マウスが動いた時のイベント。マウスのx座標がキャンバスのx座標内にあれば、その位置に持ってくる。 function mouseMoveHandler ( e ) { var relativeX = e . clientX - canvas . offsetLeft ; if ( relativeX > 0 ){ if ( relativeX < canvas . width ) { paddleX = relativeX - paddleWidth / 2 ; } } } // 音を鳴らす。 function sound ( tag ){ document . getElementById ( tag ). currentTime = 0 ; document . getElementById ( tag ). play (); } // 衝突を検知する。 function collisionDetection () { for ( var r = 0 ; r < brickRowCount ; r ++ ) { for ( var c = 0 ; c < brickColumnCount ; c ++ ) { var b = bricks [ r ][ c ]; if ( b . status == 1 ) { // ブロックが存在しているかを確認する。 if ( x > b . x ){ if ( x < b . x + brickWidth ){ if ( y > b . y ){ if ( y < b . y + brickHeight ){ dy = - dy ; if ( Math . floor ( Math . random () * Math . floor ( 8 )) == 0 ){ sound ( \"soundUp\" ); if ( dy > 0 ){ dy += 1 ; } else { dy -= 1 ; } } b . status = 0 ; score += 3 - Math . floor ( r / 2 ); sound ( \"soundBrick\" ); // 全てのブロックを崩した場合 if ( score == maxscore ) { alert ( \"YOU WIN\\nYour Time is \" + timer ); document . location . reload (); } } } } } } } } } function drawBall () { ctx . beginPath (); ctx . arc ( x , y , ballRadius , 0 , Math . PI * 2 ); ctx . fillStyle = \"#ffffff\" ; ctx . fill (); ctx . closePath (); } function drawPaddle () { ctx . beginPath (); ctx . rect ( paddleX , canvas . height - paddleHeight - paddleOffsetBottom , paddleWidth , paddleHeight ); ctx . fillStyle = \"#ffffff\" ; ctx . fill (); ctx . closePath (); } // ブロックを1つずつ描画する。 function drawBricks () { for ( var r = 0 ; r < brickRowCount ; r ++ ) { for ( var c = 0 ; c < brickColumnCount ; c ++ ) { if ( bricks [ r ][ c ]. status == 1 ) { var brickX = ( c * ( brickWidth + brickPadding )) + brickOffsetLeft ; var brickY = ( r * ( brickHeight + brickPadding )) + brickOffsetTop ; bricks [ r ][ c ]. x = brickX ; bricks [ r ][ c ]. y = brickY ; ctx . beginPath (); ctx . rect ( brickX , brickY , brickWidth , brickHeight ); ctx . fillStyle = brickColors [ Math . floor ( r / 2 )]; ctx . fill (); ctx . closePath (); } } } } function drawScore () { ctx . font = \"30px 'Comic Sans MS'\" ; ctx . fillStyle = \"#ffffff\" ; ctx . fillText ( score , 30 , 40 ); } function drawTime () { ctx . font = \"30px 'Comic Sans MS'\" ; ctx . fillStyle = \"#ffffff\" ; ctx . fillText ( timer , canvas . width / 2 - 30 , 40 ); } function drawLives () { ctx . font = \"30px 'Comic Sans MS'\" ; ctx . fillStyle = \"#ffffff\" ; ctx . fillText ( lives , canvas . width - 65 , 40 ); } function draw () { ctx . clearRect ( 0 , 0 , canvas . width , canvas . height ); // 毎フレームごとに削除 drawBricks (); drawBall (); drawPaddle (); drawScore (); drawTime (); drawLives (); collisionDetection (); // 左端と右端で弾ませる(ボールの半径を考える) if ( x + dx > canvas . width - ballRadius || x + dx < ballRadius ) { sound ( \"soundBar\" ); dx = - dx ; } // 上端で弾ませる(ボールの半径を考える) if ( y + dy < ballRadius ) { sound ( \"soundBar\" ); dy = - dy ; } // ボールがパドルの位置に到達した時 else if ( y + dy > canvas . height - paddleOffsetBottom - ballRadius ){ if ( y + dy < canvas . height - paddleOffsetBottom - ballRadius + brickHeight ) { // ボールのx座標がパドル上にあれば、跳ね返る if ( x > paddleX ){ if ( x < paddleX + paddleWidth ){ sound ( \"soundBar\" ); dy = - dy ; } } } // ボールが下端に到達した時 if ( y + dy > canvas . height - ballRadius ){ sound ( \"soundFail\" ); lives -- ; // 残機がなくなれば失敗する。 if ( ! lives ) { alert ( \"YOU LOSE\" ); document . location . reload (); } else { x = canvas . width / 2 ; y = canvas . height - paddleOffsetBottom - brickHeight ; dx = 3 ; dy = - 3 ; paddleX = ( canvas . width - paddleWidth ) / 2 ; } } } // パドルの移動指定されたピクセルだけ動く if ( rightPressed ){ if ( paddleX < canvas . width - paddleWidth ) { paddleX += 5 ; } } else if ( leftPressed ){ if ( paddleX > 0 ) { paddleX -= 5 ; } } x += dx ; y += dy ; requestAnimationFrame ( draw ); } function setCanvas () { drawBricks (); drawBall (); drawPaddle (); drawScore (); drawTime (); drawLives (); } // 初期状態を描いて待機 setCanvas (); function gameButton () { draw (); document . getElementById ( \"start\" ). innerHTML = \"SPEED UP\" ; document . getElementById ( \"start\" ). style . fontSize = \"10px\" ; } css @ import url ( 'https://fonts.googleapis.com/css?family=Press+Start+2P&display=swap' ) ; . breakout { text-align : center ; margin : 0 auto ; font-family : 'Press Start 2P' , cursive ; } canvas { background : #000 ; display : block ; border : solid 1.0 px #eeeeee ; margin : 0 auto ; } . btn-circle-border-double { display : inline-block ; text-decoration : none ; color : #000000 ; width : 100 px ; height : 100 px ; line-height : 100 px ; border-radius : 50 % ; border : double 4 px #000000 ; text-align : center ; overflow : hidden ; transition : .6 s ; } . btn-circle-border-double : hover { -webkit- transform : rotateY ( 360 deg ); transform : rotateY ( 360 deg ); }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-9.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-9.html"},{"title":"JS.8 Webカメラの映像で遊んでみる-2","text":"それでは、Webカメラの映像をモデルに通して遊んでみたいと思います。GitHub Pages は静的サイトなので、基本的には Python ファイルを動かすことができないのですが、 TensorFlow.js というライブラリを使うことで静的サイトでも機械学習のモデルを使うことができます。 それはまたの機会にやってみるとして、ここではサーバーにWebカメラの映像を送る、といったことをしたいと思います。 この時、動画はフレームの重ね合わせなので、一定時間ごとのフレームを送る、という方法をとります。 まずは、 Canvas タグに動画のフレームを描画することをやってみます。 Webカメラの動画のフレームをCanvasに描画する Streaming STOP Canvas コード html < div class = \"video-streaming\" > < h3 > Streaming </ h3 > < video id = \"video\" width = \"640\" height = \"480\" playsinline muted autoplay ></ video >< br > < h3 > Canvas </ h3 > < canvas id = \"canvas\" ></ canvas >< br > </ div > JavaScript var video = document . getElementById ( \"video\" ); var media = navigator . mediaDevices . getUserMedia ({ video : { facingMode : \"user\" }, audio : false , }); media . then (( stream ) => { video . srcObject = stream ; setInterval ( function () { var canvas = document . getElementById ( 'canvas' ); var context = canvas . getContext ( '2d' ); var w = video . offsetWidth ; canvas . setAttribute ( 'width' , w . toString ()); var h = video . offsetHeight ; canvas . setAttribute ( 'height' , h . toString ()); context . drawImage ( video , 0 , 0 , w , h ); }, 1000 ); //1000ms(=1s)毎に描画しています。 }); css . video-streaming { text-align : center ; margin : 30 px auto ; } # video { border : 2 px solid ; border-color : rgb ( 68 , 122 , 178 ); width : 80 % ; height : auto ; } # canvas { border : 2 px solid ; border-color : rgb ( 252 , 92 , 84 ); width : 80 % ; height : auto ; } . btn-blue { background-color : rgb ( 68 , 122 , 178 ); color : #fff ; padding : 10 px ; border-radius : 3 px ; } . btn-red { background-color : rgb ( 252 , 92 , 84 ); color : #fff ; padding : 10 px ; border-radius : 3 px ; }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-8.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-8.html"},{"title":"JS.7 Webカメラの映像で遊んでみる-1","text":"やっぱり機械学習エンジニア、それも現在 Neural Pocket で画像認識をしているとなると、やはりWebカメラの映像を使って遊んでみたくなります。 ここでは、以下の流れでやっていきます。 Webカメラの映像をそのままブラウザに表示する。 Webカメラの動画のフレームをCanvasに描画する。 ローカルでPythonファイルを実行し、Webカメラの映像にモデルを適用する。 ローカルホストで取得したWebカメラの映像を機械学習モデルのあるサーバーに送り、結果を受け取って表示する。 どちらもサーバーにあげる。（セキュリティの問題ですぐには厳しそう。） Webカメラの映像をそのままブラウザに表示する。 ※ GitHub Pages は静的サイトなので、映像が僕の元に送信される心配はありません。 STOP コード html <!--サイズの初期値は640×480(4:3)--> < video id = \"video\" width = \"640\" height = \"480\" autoplay style = \"border: 1px solid; margin: 0 auto\" ></ video > JavaScript //動画流す準備 var video = document . getElementById ( \"video\" ); // getUserMedia によるカメラ映像の取得 var media = navigator . mediaDevices . getUserMedia ({ video : true , //ビデオを取得する //使うカメラをインカメラか背面カメラかを指定する場合には //video: { facingMode: \"environment\" },//背面カメラ //video: { facingMode: \"user\" },//インカメラ audio : false , //音声が必要な場合はture }); //リアルタイムに再生（ストリーミング）させるためにビデオタグに流し込む media . then (( stream ) => { video . srcObject = stream ; }); css . video-streaming { text-align : center ; margin : 30 px auto ; } # video { border : 1 px solid ; } . btn-blue { background-color : rgb ( 68 , 122 , 178 ); color : #fff ; padding : 10 px ; border-radius : 3 px ; } . btn-red { background-color : rgb ( 252 , 92 , 84 ); color : #fff ; padding : 10 px ; border-radius : 3 px ; } @ media only screen and ( max-width : 640px ) { # video { width : 100 % ; height : 100 % ; } }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-7.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-7.html"},{"title":"JS.6 隠しコマンドで遊ぶ","text":"JavaScript を使うと隠しコマンドで遊べると聞いたので、試しに遊んで見ました。 また、 fontBomb という、テキスト（フォント）を時限爆弾で爆発させるスクリプトを使って遊んでも見たので、隠しコマンドがわかった人はそれでも遊んでみてください！！ ちなみに、隠しコマンドは僕の名前（ Lastname , Firstname ）です。（間に何もいりません。） 作ったもの 隠しコマンドを解けば、ここにある歌の歌詞が出てきます。その曲を選んだのは僕が好きだからですが、 公式MV に出てくる女性はめちゃめちゃ鍛えた体してるのにボクシングのパンチがありえん\b棒立ちでちょっと残念なので、ぜひ見てみてください！（エドシーランは普通に上手です。） ちなみに、僕は普通のものよりピッチやテンポを上げたアレンジ版の方が好きです。 Shape of You Ed Sheeran [Verse 1] The club isn't the best place to find a lover So the bar is where I go Me and my friends at the table doing shots Drinking fast and then we talk slow And you come over and start up a conversation with just me And trust me I'll give it a chance now Take my hand, stop, put Van the Man on the jukebox And then we start to dance, and now I'm singing like [Pre-Chorus] Girl, you know I want your love Your love was handmade for somebody like me Come on now, follow my lead I may be crazy, don't mind me Say, boy, let's not talk too much Grab on my waist and put that body on me Come on now, follow my lead Come, come on now, follow my lead [Chorus] I'm in love with the shape of you We push and pull like a magnet do Although my heart is falling too I'm in love with your body And last night you were in my room And now my bed sheets smell like you Every day discovering something brand new I'm in love with your body Oh—I—oh—I—oh—I—oh—I I'm in love with your body Oh—I—oh—I—oh—I—oh—I I'm in love with your body Oh—I—oh—I—oh—I—oh—I I'm in love with your body Every day discovering something brand new I'm in love with the shape of you [Verse 2] One week in we let the story begin We're going out on our first date You and me are thrifty, so go all you can eat Fill up your bag and I fill up a plate We talk for hours and hours about the sweet and the sour And how your family is doing okay Leave and get in a taxi, then kiss in the backseat Tell the driver make the radio play, and I'm singing like [Pre-Chorus] Girl, you know I want your love Your love was handmade for somebody like me Come on now, follow my lead I may be crazy, don't mind me Say, boy, let's not talk too much Grab on my waist and put that body on me Come on now, follow my lead Come, come on now, follow my lead [Chorus] I'm in love with the shape of you We push and pull like a magnet do Although my heart is falling too I'm in love with your body And last night you were in my room And now my bed sheets smell like you Every day discovering something brand new I'm in love with your body Oh—I—oh—I—oh—I—oh—I I'm in love with your body Oh—I—oh—I—oh—I—oh—I I'm in love with your body Oh—I—oh—I—oh—I—oh—I I'm in love with your body Every day discovering something brand new I'm in love with the shape of you [Bridge] Come on, be my baby, come on Come on, be my baby, come on Come on, be my baby, come on Come on, be my baby, come on Come on, be my baby, come on Come on, be my baby, come on Come on, be my baby, come on Come on, be my baby, come on [Chorus] I'm in love with the shape of you We push and pull like a magnet do Although my heart is falling too I'm in love with your body Last night you were in my room And now my bed sheets smell like you Every day discovering something brand new I'm in love with your body Come on, be my baby, come on Come on, be my baby, come on I'm in love with your body Come on, be my baby, come on Come on, be my baby, come on I'm in love with your body Come on, be my baby, come on Come on, be my baby, come on I'm in love with your body Every day discovering something brand new I'm in love with the shape of you コード html < div id = \"shape-of-you\" style = \"visibility: hidden;\" > <!-- ここに\b隠しコマンド後に表示させる要素をかく --> </ div > < script src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\" ></ script > JavaScript $ ( function () { var inputKey = []; var Command = [ 73 , 87 , 65 , 83 , 65 , 75 , 73 , 83 , 72 , 85 , 84 , 79 ]; $ ( window ). keyup ( function ( e ) { inputKey . push ( e . keyCode ); // 入力配列にコマンドがあるかを調べる。存在しなければ-1を返す。 if ( inputKey . toString (). indexOf ( Command ) >= 0 ) { //隠しコマンド成功時 alert ( \"コマンド発動！！\" ); // cssにbackground-imageを記述したクラスを追加(これで背景を変える。) $ ( \"#shape-of-you\" ). addClass ( 'shape-of-you' ); document . querySelector ( '#shape-of-you' ). style . visibility = \"visible\" ; // fontBombのスクリプトをコピー var s = document . createElement ( 'script' ); s . setAttribute ( 'src' , 'http://fontbomb.ilex.ca/js/main.js' ); document . body . appendChild ( s ); //キー入力を初期化 inputKey = []; } if ( inputKey . length >= 1000 ){ alert ( \"かなり頑張ってますね笑\\n処理速度を上げるために初期化しますね！\" ); inputKey = []; } }); css . shape-of-you { background-color : rgb ( 170 , 220 , 230 ); background-size : contain ; width : 100 % ; }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-6.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-6.html"},{"title":"JS.5 ビンゴマシーン","text":"動機 音声の取り扱い方、表示/非表示のやり方を試すために、ビンゴマシーンを作成しました。 作成したきっかけは、知り合いのエンジニアの結婚式の際に、新郎の方が即席でプログラムを書いてビンゴを行なったと聞き、そういった要望をすぐにかなえられたらカッコいいなと思ったからです。（結婚式会場にパソコン持っていくのは流石優秀なエンジニアだなと思いましたが…笑） なお、調べれば色々な方がビンゴマシーンを作成しているので、 ビンゴマシーン javascript とかで検索して見てください。 作ったもの まずは、最大値を決めてビンゴマシーンを作成してください！\b普通の市販のビンゴは最大値が 75 になっていると思います。 生成 START コード html < div class = \"wrapper\" > < div id = \"bingo-info\" style = \"display: block;\" > < input id = \"max-num\" type = \"number\" min = \"1\" max = \"99\" value = \"75\" /> < button type = \"button\" class = \"generate\" onclick = \"generateBINGO()\" > 生成 </ button > </ div > < div id = \"bingo-machine\" style = \"display: none;\" > < div id = \"result\" class = \"result\" ></ div > < ul id = \"number\" class = \"number\" ></ ul > < div class = \"wrapper-button\" > < button id = \"button\" class = \"button\" > START </ button > </ div > < audio id = \"sound-play\" preload = \"auto\" > < source src = \"https://raw.githubusercontent.com/miiitaka/game-bingo/master/start.mp3\" type = \"audio/mp3\" > </ audio > < audio id = \"sound-pause\" preload = \"auto\" > < source src = \"https://raw.githubusercontent.com/miiitaka/game-bingo/master/pause.mp3\" type = \"audio/mp3\" > </ audio > </ div > </ div > < script src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\" ></ script > javascript var max , bingo = [], $number = $ ( \"#number\" ), $result = $ ( \"#result\" ), $sound_play = $ ( \"#sound-play\" ), $sound_pause = $ ( \"#sound-pause\" ); // ビンゴマシーンを作成する。 function generateBINGO (){ max = document . querySelector ( '#max-num' ). value ; for ( var i = 1 ; i <= max ; i ++ ) { bingo . push ( i ); $number . append ( $ ( \"<li>\" ). text (( \"0\" + i ). slice ( - 2 ))); } document . querySelector ( '#bingo-info' ). style . display = \"none\" ; document . querySelector ( '#bingo-machine' ). style . display = \"block\" ; window . alert ( '最大値' + max + 'でビンゴマシーンが生成されました！\\nSTARTボタンを押してビンゴを始めてみてください！！\\n※音が出るので注意してください。' ) }; $ ( function (){ var status = true , roulette , random , number , result ; $ ( \"#button\" ). on ( \"click\" , function (){ // ルーレットを回す if ( status ) { status = false ; $ ( this ). text ( \"STOP\" ); $sound_play . trigger ( \"play\" ); $sound_pause . trigger ( \"pause\" ); $sound_pause [ 0 ]. currentTime = 0 ; roulette = setInterval ( function (){ random = Math . floor ( Math . random () * bingo . length ); number = bingo [ random ]; $result . text ( number ); }, 10 ); // 10ms毎にイベント(数字を回す)を起動。 // ルーレットを止める } else { status = true ; $ ( this ). text ( \"START\" ); $sound_pause . trigger ( \"play\" ); $sound_play . trigger ( \"pause\" ); $sound_play [ 0 ]. currentTime = 0 ; clearInterval ( roulette ); // 起動していたイベントを終了 result = bingo [ random ]; bingo . splice ( random , 1 ); // 配列から削除 $result . text ( result ); $number . find ( \"li\" ). eq ( parseInt ( result , 10 ) - 1 ). addClass ( \"hit\" ); } }); }); css body { color : #000000 ; font-family : arial , sans-serif ; } . wrapper { text-align : center ; margin : 0 auto ; } input { padding : 10 px ; font-size : 1.2 em ; } . generate { padding : 10 px ; font-size : 1.2 em ; border-radius : 3 px ; background-color : #80160e ; color : #ffffff ; } . result { align-items : center ; border : solid 1 px #000000 ; display : flex ; font-size : 130 px ; font-weight : bold ; justify-content : center ; height : 200 px ; margin : 0 auto 10 px ; text-align : center ; width : 200 px ; } . number { display : flex ; flex-wrap : wrap ; justify-content : flex-start ; margin : 0 auto ; list-style : none ; padding : 0 ; width : 500 px ; } @ media ( max-width : 767px ) { . number { width : 100 % ; } } . number li { align-items : center ; border : solid 1 px #000000 ; display : flex ; justify-content : center ; height : 40 px ; margin : 4 px ; width : 40 px ; } . number li . hit { background : #80160e ; color : #fff ; } . wrapper-button { padding : 20 px 0 50 px ; text-align : center ; } . button { background : #80160e ; border : dashed 1 px #ffffff ; border-radius : 50 % ; box-shadow : 0 0 0 5 px #80160e ; color : #ffffff ; display : inline-block ; font-size : 20 px ; text-decoration : none ; height : 100 px ; line-height : 100 px ; overflow : hidden ; text-align : center ; transition : .4 s ; vertical-align : middle ; width : 100 px ; } . button : hover { background : #f0d0d0 ; box-shadow : 0 0 0 5 px #b87069 ; cursor : pointer ; } footer { text-align : center ; }","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-5.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-5.html"},{"title":"JS.4 Canvasで遊んでみる","text":"HTML5から追加された Canvas というものを使って、お絵かきアプリを作成しました。 イベントドリブンのものは jquery で、それ以外のものは直の JavaScript で書いたつもりです。だいぶ JavaScript にも慣れてきた!! 作ったもの color: #000000 background-color: #ffffff download Clear All コード < div class = \"canvas\" > <!-- canvasのサイズを変更する場合、スタイルではなく属性で変更しないとおかしくなる！ --> < canvas id = \"drawing-pad\" width = \"400px\" height = \"400px\" style = \"border: 1.5px solid #000; background-color: #ffffff\" ></ canvas > < div > < input id = \"pen-color\" type = \"color\" value = \"#000000\" > color: < span id = \"color1\" > #000000 </ span > </ div > < div > < input id = \"pad-color\" type = \"color\" value = \"#ffffff\" > background-color: < span id = \"color2\" > #ffffff </ span > </ div > < button id = \"download\" class = \"btn-blue\" > download </ button > < button id = \"clear-button\" class = \"btn-red\" > Clear All </ button > </ div > < script src = \"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\" ></ script > < script > // Canvasの情報 var canvas ; var context ; // 線の情報 var color ; // ページの読み込みが完了したらコールバック関数が呼ばれる window . addEventListener ( 'load' , function () { canvas = document . querySelector ( '#drawing-pad' ); context = canvas . getContext ( '2d' ); const lastPosition = { x : null , y : null }; // nullで初期化。 let isDrag = false ; // 線を描き続けているかを判断するためのフラグ var draw = function ( x , y ){ if ( ! isDrag ) { return ; } /* 線の情報 */ context . lineCap = 'round' ; // 丸みを帯びた線にする context . lineJoin = 'round' ; // 丸みを帯びた線にする context . lineWidth = 5 ; // 線の太さ context . strokeStyle = color ; // 線の色 // 開始位置の調整 if ( lastPosition . x === null || lastPosition . y === null ) { context . moveTo ( x , y ); } else { context . moveTo ( lastPosition . x , lastPosition . y ); } // 開始位置から現在の位置を線で結ぶ。 context . lineTo ( x , y ); // 実際に描画する。 context . stroke (); // 現在の点を次回の開始点にする。 lastPosition . x = x ; lastPosition . y = y ; } var dragStart = function ( e ) { // 描画開始を宣言 context . beginPath (); isDrag = true ; } var dragEnd = function ( e ) { // 描画終了を宣言 context . closePath (); isDrag = false ; // 開始点をリセット。 lastPosition . x = null ; lastPosition . y = null ; } // canvas上に書いた絵を全部消す var clear = function () { context . clearRect ( 0 , 0 , canvas . width , canvas . height ); document . querySelector ( '#drawing-pad' ). style . backgroundColor = '#ffffff' ; // canvasの背景色 document . querySelector ( '#color2' ). innerHTML = '#ffffff' ; // 表示されているカラーコード document . querySelector ( '#color2' ). style . color = '#ffffff' ; // 上の文字色 document . querySelector ( '#pad-color' ). value = '#ffffff' ; // ボタンの色 } // マウス操作やボタンクリック時のイベント処理を定義する var initEventHandler = function () { canvas . addEventListener ( 'mousedown' , dragStart ); // マウスボタンを押した時。 canvas . addEventListener ( 'mouseup' , dragEnd ); // マウスボタンを離した時。 canvas . addEventListener ( 'mouseout' , dragEnd ); // マウスカーソルが外に出た時。 canvas . addEventListener ( 'mousemove' , function ( e ) { // マウスカーソルが動いた時 draw ( e . layerX , e . layerY ); }); const clearButton = document . querySelector ( '#clear-button' ); clearButton . addEventListener ( 'click' , clear ); } // イベント処理を初期化する initEventHandler (); }); $ ( function (){ // ペンの色を変更 $ ( function (){ $ ( '#pen-color' ). on ( 'change' , function (){ $ ( '#color1' ). text ( $ ( '#pen-color' ). val ()). css ( 'color' , $ ( '#pen-color' ). val ()); color = $ ( '#pen-color' ). val (); }) }); // 背景色を変更 $ ( '#pad-color' ). on ( 'change' , function (){ $ ( '#color2' ). text ( $ ( '#pad-color' ). val ()). css ( 'color' , $ ( '#pad-color' ). val ()); $ ( '#drawing-pad' ). css ( 'background-color' , $ ( '#pad-color' ). val ()); // 以下の手法だと、描画した画像が上書きされてしまう！ // context.fillStyle = $('#pad-color').val(); // context.fillRect(0, 0, canvas.width, canvas.height); }) // ダウンロード $ ( '#download' ). on ( 'click' , function (){ // メモリ内で新しく画像を描画し、ダウンロードしている。 var mem_canvas = document . createElement ( \"canvas\" ); mem_canvas . width = canvas . width ; mem_canvas . height = canvas . height ; var mem_context = mem_canvas . getContext ( '2d' ); // まず、背景色として指定されている色で塗りつぶす。 mem_context . fillStyle = $ ( '#pad-color' ). val (); mem_context . fillRect ( 0 , 0 , canvas . width , canvas . height ); // 次に、現在描かれている絵(線)をコピーする。 mem_context . drawImage ( canvas , 0 , 0 ); // それをダウンロード。 let link = document . createElement ( \"a\" ); link . href = mem_canvas . toDataURL ( \"image/png\" ); link . download = \"canvas.png\" ; link . click (); }) }); </ script > < style > . canvas { text-align : center ; margin : 30 px auto ; } . btn-blue { background-color : rgba ( 68 , 122 , 178 ); color : #fff ; padding : 10 px ; border-radius : 3 px ; } . btn-red { background-color : rgb ( 252 , 92 , 84 ); color : #fff ; padding : 10 px ; border-radius : 3 px ; } </ style >","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-4.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-4.html"},{"title":"JS.3 Ajax通信で遊んでみる","text":"講座： [HTML/CSS/JavaScript] フロントエンドエンジニアになりたい人の Webプログラミング入門 講師： Taniguchi Makoto 色々な書き方 今回は、以下のHTMLを jsonから読み込む 直書きでAjax通信を使う jquery でAjax通信を使う vue.js でAjax通信を使う という方法で作る方法を学びます。 < div id = \"img_unit\" > < div class = \"photo\" > < img src = \"img/img01.jpg\" > < div class = \"inner\" > < p > コメント1 < span > name01 </ span ></ p > </ div > </ div > < div class = \"photo\" > < img src = \"img/img02.jpg\" > < div class = \"inner\" > < p > コメント2 < span > name02 </ span ></ p > </ div > </ div > </ div > なお、それぞれのhtmlファイルを index.html と言う名前だと仮定し以下のようなファイルパス関係だとします。 . ├── index.html └── img ├── img01.jpg ├── img02.jpg └── img03.jpg ちなみに、以下の css を読み込んでおくと綺麗に表示されます。 body { margin : 0 ; padding : 0 ; background-color : rgba ( 26 , 55 , 229 , 0.06 ); } . container { /*\b<div class=\"container\">で上記のhtmlを囲むとより綺麗に表示されます。*/ max-width : 600 px ; margin : 0 auto ; box-shadow : 0 px 0 px 3 px rgba ( 0 , 0 , 0 , .3 ); } img { width : 100 % ; margin 0 ; vertical-align : top ; } . photo { position : relative ; /*親要素に relative とすることで下で absolute が photo に対して行われる。*/ } . photo . inner { position : absolute ; bottom : 0 ; background-color : rgba ( 0 , 0 , 0 , .5 ); font-size : 10 px ; color : #fff ; margin : 0 ; width : 100 % ; } . inner p { padding : 20 px ; } . inner span { margin-left : 10 px ; } json から読み込む Json(JavaScript Object Notation)ファイルにデータを\b用意しておいて、それらを随時読み込んで表示する方式。 以下のどちらを利用するかは自由。 htmlを直接 innerHTML プロパティで挿入する。 createElement や appendChild を使って要素をオブジェクトとして扱う。 < div id = \"img_unit\" > </ div > < script > var images = [ { \"path\" : \"img/img01.jpg\" , \"name\" : \"name01\" , \"caption\" : \"コメント1\" }, { \"path\" : \"img/img02.jpg\" , \"name\" : \"name02\" , \"caption\" : \"コメント2\" }, { \"path\" : \"img/img03.jpg\" , \"name\" : \"name03\" , \"caption\" : \"コメント3\" } ]; var img ; var caption ; var div ; for ( var i = 0 ; i < images . length ; i ++ ){ img = document . createElement ( 'img' ); // <img>タグが\b作られる。 img . setAttribute ( 'src' , images [ i ]. path ); // src属性を追加し、属性値を設定。 caption = document . createElement ( 'div' ); // <div>タグが作られる。 caption . className = 'inner' ; // class属性を追加し、属性値を設定。 caption . innerHTML = '<p>' + images [ i ]. caption + '<span>' + images [ i ]. name + '</span></p>' ; // divタグの中に<p>...</p>という要素を追加。 div = document . createElement ( 'div' ); div . className = 'photo' ; div . appendChild ( img ); // divの内部にimgを追加する。 div . appendChild ( caption ); // divの内部にcaptionを追加する。 document . getElementById ( 'img_unit' ). appendChild ( div ); //\"id=img_unit\"のタグの内部にdivを追加する。 } </ script > 直書きでAjax通信を使う プログラムの中にjsonデータを\b保持しているのは賢いやり方ではない。 というか、API(Application Programing Interface)を使って外部と通信しながらデータを処理することがほとんどであり、その時に使えるのがAjax通信。 なお、ここでは、\"https://h2o-space.com/htmlbook/images.php\" というサーバーと通信を行なっているが、これはjsonのセキュリティの問題のため。 file がCross origin requestsでサポートされているプロトコルに含まれていない（セキュリティ上危ないから）ので、講師の方が用意してくださっている。 また、ajax通信は以下のようにいくつかのステップに分かれており、それぞれに状態が割り当てられている\bので、通信が終わったことを確認してから次の処理を行うことができる。 値 定数 状態 0 UNSENT インスタンスができた 1 OPENED openメソッドを利用した 2 HEADERS_RECEIVED ヘッダーが受信できた 3 LOADING データを受信中である 4 DONE 通信が終了した < div id = \"img_unit\" > </ div > < script > var ajax = new XMLHttpRequest (); //ajax通信を行うためのオブジェクト。XMLはデータ形式の一つだが、ここではJsonでデータのやり取りを行う。 // alert(ajax.readyState); // 0 ajax . open ( 'GET' , 'https://h2o-space.com/htmlbook/images.php' ); // ajax通信を行う相手先のアドレス(講師の方が用意してくださっている。) // alert(ajax.readyState); // 1 (openを行なった後) ajax . responseType = 'json' ; // データの形式を指定 ajax . send ( null ); // ファイルを呼び出す。 ajax . onreadystatechange = function (){ if ( ajax . readyState === XMLHttpRequest . DONE && ajax . status === 200 ){ for ( var i = 0 ; i < this . response . length ; i ++ ){ var data = this . response [ i ]; img = document . createElement ( 'img' ); img . setAttribute ( 'src' , data . path ); caption = document . createElement ( 'div' ); caption . className = 'inner' ; caption . innerHTML = '<p>' + data . caption + '<span>' + data . name + '</span></p>' ; div = document . createElement ( 'div' ); div . className = 'photo' ; div . appendChild ( img ); div . appendChild ( caption ); document . getElementById ( 'img_unit' ). appendChild ( div ); } } }; </ script > jquery でAjax通信を使う jqueryの公式サイト から、jqueryをダウンロードし、 js/jquery.min.js に保存してください。 < div id = \"img_unit\" > </ div > < script src = \"js/jquery.min.js\" ></ script > < script > $ . getJSON ( 'https://h2o-space.com/htmlbook/images.php' , function ( data ) { // コールバック(処理が終わった時に自動的に呼び出されるファイルのこと。) for ( var i = 0 ; i < data . length ; i ++ ){ $ ( '<div class=\"photo\"></div>' ) . append ( '<img src=\"' + data [ i ]. path + '\">' ) // 自分自身「に」追加する。 . append ( '<div class=\"inner\"<p>' + data [ i ]. caption + '<span>' + data [ i ]. name + '</span></p></div>' ) . appendTo ( '#img_unit' ); // 自分自身「を」追加する。 } }); /* サンプル（htmlを生成する。） $(#img_unit).html('ここに、画像リストが表示されます。'); $(#img_unit).css('margin-top', '100px'); */ </ script > vue.js でAjax通信を使う jquery だとhtmlを生成する際に要素をそのままscript内に書いており、少し\bわかりにくかったです。そこで、vue.jsというライブラリがよく使われる。 なお、vue.jsは 公式サイト にてcdn\bで配布されています。 vue,jsは以下の形が基本で、プレースホルダーを\b書き換える、といった操作を行います。 < div id = \"vue_unit\" > {{ message }} </ div > < script > var app = new Vue ({ el : '#vue_unit' , data : { message : 'vue.jsで書き換えました。' } }); </ script > 今までのサンプルに適用すると、以下のようになります。なお、プレースホルダーを属性値の中に書くことができないので、別の書き方をしています。 < div id = \"img_unit\" > < div class = \"photo\" v-for = \"Photo in Photos\" > <!-- vue.js の for構文を使っている。 --> < img :src = \"Photo.path\" > <!-- vue.js によって書き換えられる対象となる。 --> < div class = \"inner\" >< p > {{ Photo.caption }} < span > {{ Photo.name }} </ span ></ p ></ div > </ div > </ div > < script src = \"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\" ></ script > < script src = \"js/jquery.min.js\" ></ script > < script > var app = new Vue ({ el : '#img_unit' , data : { Photos : [] }, created : function () { // vueのオブジェクトが作られる時のメソッド var self = this ; // ここでのスコープのthisを保存しておく。 $ . getJSON ( 'https://h2o-space.com/htmlbook/images.php' , function ( data ) { self . Photos = data }); } }); </ script > 最後に これで、\b講義で習った事は終了しました:)","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-3.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-3.html"},{"title":"JS.2 イベントドリブンなストップウォッチプログラムを作成する","text":"講座： [HTML/CSS/JavaScript] フロントエンドエンジニアになりたい人の Webプログラミング入門 講師： Taniguchi Makoto はじめに 今回は、 setInterval と clearInterval を用いて、イベントドリブンなアプリケーションを作成した。 作ったもの 00:00:00:00 START コード < div class = \"container\" > < p id = \"timer\" > 00:00:00:00 </ p > < div > < button id = \"start_stop\" class = \"btn-blue\" > START </ button > </ div > </ div > < script > var start ; // グローバル変数にしている。 var timer_id ; document . getElementById ( 'start_stop' ). addEventListener ( 'click' , function () { if ( this . innerHTML === 'START' ){ start = new Date (); timer_id = setInterval ( goTimer , 10 ); // ここで返って来たIDを利用して↓ this . innerHTML = 'STOP' ; // this = document.getElementById('start_stop') this . classList . remove ( 'btn-blue' ); this . classList . add ( 'btn-red' ); } else { clearInterval ( timer_id ); // ここで止める。 this . innerHTML = \"START\" ; this . classList . remove ( 'btn-red' ); this . classList . add ( 'btn-blue' ); } }); var addZero = function ( value ){ if ( value < 10 ) { value = '0' + value ; } return value ; } var goTimer = function (){ var now = new Date (); var milli = now . getTime () - start . getTime (); var seconds = Math . floor ( milli / 1000 ); var minutes = Math . floor ( seconds / 60 ); var hours = Math . floor ( minutes / 60 ); milli = Math . floor (( milli - seconds * 1000 ) / 10 ); seconds = seconds - minutes * 60 ; minutes = minutes - hours * 60 ; milli = addZero ( milli ); seconds = addZero ( seconds ); minutes = addZero ( minutes ); hours = addZero ( hours ); document . getElementById ( 'timer' ). innerHTML = hours + \":\" + minutes + \":\" + seconds + \":\" + milli ; } </ script > < style > . container { text-align : center ; margin : 30 px auto ; } /*idは #で指定する。*/ # timer { font-size : 36 px ; border : 1 px solid #ccc ; margin 30px auto ; padding : 50 px ; background-color : #000 ; color : #fff ; border-radius : 3 px ; box-shadow : 1 px 1 px 3 px rgba ( 0 , 0 , 0 , .5 ); } . btn-blue { background-color : rgba ( 68 , 122 , 178 ); color : #fff ; padding : 10 px ; border-radius : 3 px ; } . btn-red { background-color : rgb ( 252 , 92 , 84 ); color : #fff ; padding : 10 px ; border-radius : 3 px ; } </ style >","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-2.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-2.html"},{"title":"JS.1 今日の日付を表示する","text":"講座： [HTML/CSS/JavaScript] フロントエンドエンジニアになりたい人の Webプログラミング入門 講師： Taniguchi Makoto はじめに まずはじめに断っておくと、おそらくプログラミング系の記事は 「誰かに説明する」 と言うよりは、 「自分の備忘録」 として\b書きます :man-bowing: 突然 JavaScript の勉強始めた一番の理由は 「 LGTM の活動の中で力不足を感じたから」 です。 2019/6/1,2に、 FiNC Technologies とハッカソンをさせていただいたのですが、僕ができたのは下の部分だけで、機械学習のAPIを作ったものの、 正直魅せ方ととして芸がないな と感じてしまいました。 この思いは前からずっと感じていたことだったので、 「良いキッカケをもらった」 と思い、早速一から勉強することにしました。 作ったもの 今日の日付を JavaScript を使って表示します。 コード < script > var today = new Date (); var todayHtml = today . getFullYear () + '/' + ( today . getMonth () + 1 ) + '/' + today . getDate (); // getMonth は、1月を0としているので、+1をしている。 // document は、ブラウザが準備してくれたインスタンス。 document . write ( '<p class=\"date\">today: ' + todayHtml + '</p>' ); </ script > < style > . date { font-size : 300 % ; color : rgb ( 128 , 22 , 14 ); text-align : center ; } </ style >","tags":"JavaScript","url":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-1.html","loc":"https://iwasakishuto.github.io/Front-End/tips/JavaScript-1.html"}]};